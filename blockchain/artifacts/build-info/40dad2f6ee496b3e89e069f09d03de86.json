{"id":"40dad2f6ee496b3e89e069f09d03de86","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {ERC1155Utils} from \"./utils/ERC1155Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                ERC1155Utils.checkOnERC1155Received(operator, from, to, id, value, data);\n            } else {\n                ERC1155Utils.checkOnERC1155BatchReceived(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        assembly (\"memory-safe\") {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[ERC].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC-1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC-1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/utils/ERC1155Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155Receiver} from \"../IERC1155Receiver.sol\";\nimport {IERC1155Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-1155 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n *\n * _Available since v5.1._\n */\nlibrary ERC1155Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC1155-onERC1155Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155Received(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155-onERC1155BatchReceived}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155BatchReceived(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Arrays.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Arrays.sol)\n// This file was procedurally generated from scripts/generate/templates/Arrays.js.\n\npragma solidity ^0.8.20;\n\nimport {Comparators} from \"./Comparators.sol\";\nimport {SlotDerivation} from \"./SlotDerivation.sol\";\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using SlotDerivation for bytes32;\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Sort an array of uint256 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        uint256[] memory array,\n        function(uint256, uint256) pure returns (bool) comp\n    ) internal pure returns (uint256[] memory) {\n        _quickSort(_begin(array), _end(array), comp);\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of uint256 in increasing order.\n     */\n    function sort(uint256[] memory array) internal pure returns (uint256[] memory) {\n        sort(array, Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of address (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        address[] memory array,\n        function(address, address) pure returns (bool) comp\n    ) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of address in increasing order.\n     */\n    function sort(address[] memory array) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        bytes32[] memory array,\n        function(bytes32, bytes32) pure returns (bool) comp\n    ) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of bytes32 in increasing order.\n     */\n    function sort(bytes32[] memory array) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n     * at end (exclusive). Sorting follows the `comp` comparator.\n     *\n     * Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n     *\n     * IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n     * be used only if the limits are within a memory array.\n     */\n    function _quickSort(uint256 begin, uint256 end, function(uint256, uint256) pure returns (bool) comp) private pure {\n        unchecked {\n            if (end - begin < 0x40) return;\n\n            // Use first element as pivot\n            uint256 pivot = _mload(begin);\n            // Position where the pivot should be at the end of the loop\n            uint256 pos = begin;\n\n            for (uint256 it = begin + 0x20; it < end; it += 0x20) {\n                if (comp(_mload(it), pivot)) {\n                    // If the value stored at the iterator's position comes before the pivot, we increment the\n                    // position of the pivot and move the value there.\n                    pos += 0x20;\n                    _swap(pos, it);\n                }\n            }\n\n            _swap(begin, pos); // Swap pivot into place\n            _quickSort(begin, pos, comp); // Sort the left side of the pivot\n            _quickSort(pos + 0x20, end, comp); // Sort the right side of the pivot\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first element of `array`.\n     */\n    function _begin(uint256[] memory array) private pure returns (uint256 ptr) {\n        assembly (\"memory-safe\") {\n            ptr := add(array, 0x20)\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n     * that comes just after the last element of the array.\n     */\n    function _end(uint256[] memory array) private pure returns (uint256 ptr) {\n        unchecked {\n            return _begin(array) + array.length * 0x20;\n        }\n    }\n\n    /**\n     * @dev Load memory word (as a uint256) at location `ptr`.\n     */\n    function _mload(uint256 ptr) private pure returns (uint256 value) {\n        assembly {\n            value := mload(ptr)\n        }\n    }\n\n    /**\n     * @dev Swaps the elements memory location `ptr1` and `ptr2`.\n     */\n    function _swap(uint256 ptr1, uint256 ptr2) private pure {\n        assembly {\n            let value1 := mload(ptr1)\n            let value2 := mload(ptr2)\n            mstore(ptr1, value2)\n            mstore(ptr2, value1)\n        }\n    }\n\n    /// @dev Helper: low level cast address memory array to uint256 memory array\n    function _castToUint256Array(address[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 memory array to uint256 memory array\n    function _castToUint256Array(bytes32[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast address comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(address, address) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(bytes32, bytes32) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * NOTE: The `array` is expected to be sorted in ascending order, and to\n     * contain no repeated elements.\n     *\n     * IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n     * support for repeated elements in the array. The {lowerBound} function should\n     * be used instead.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value greater or equal than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound].\n     */\n    function lowerBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value strictly greater than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound].\n     */\n    function upperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {lowerBound}, but with an array in memory.\n     */\n    function lowerBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {upperBound}, but with an array in memory.\n     */\n    function upperBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes32[] memory arr, uint256 pos) internal pure returns (bytes32 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(address[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes32[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(uint256[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Comparators.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Comparators.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to compare values.\n *\n * _Available since v5.1._\n */\nlibrary Comparators {\n    function lt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a < b;\n    }\n\n    function gt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a > b;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/SlotDerivation.sol)\n// This file was procedurally generated from scripts/generate/templates/SlotDerivation.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n * corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n * the solidity language / compiler.\n *\n * See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n *\n * Example usage:\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using StorageSlot for bytes32;\n *     using SlotDerivation for bytes32;\n *\n *     // Declare a namespace\n *     string private constant _NAMESPACE = \"<namespace>\" // eg. OpenZeppelin.Slot\n *\n *     function setValueInNamespace(uint256 key, address newValue) internal {\n *         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n *     }\n *\n *     function getValueInNamespace(uint256 key) internal view returns (address) {\n *         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {StorageSlot}.\n *\n * NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n * upgrade safety will ignore the slots accessed through this library.\n *\n * _Available since v5.1._\n */\nlibrary SlotDerivation {\n    /**\n     * @dev Derive an ERC-7201 slot from a string (namespace).\n     */\n    function erc7201Slot(string memory namespace) internal pure returns (bytes32 slot) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, sub(keccak256(add(namespace, 0x20), mload(namespace)), 1))\n            slot := and(keccak256(0x00, 0x20), not(0xff))\n        }\n    }\n\n    /**\n     * @dev Add an offset to a slot to get the n-th element of a structure or an array.\n     */\n    function offset(bytes32 slot, uint256 pos) internal pure returns (bytes32 result) {\n        unchecked {\n            return bytes32(uint256(slot) + pos);\n        }\n    }\n\n    /**\n     * @dev Derive the location of the first element in an array from the slot where the length is stored.\n     */\n    function deriveArray(bytes32 slot) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, slot)\n            result := keccak256(0x00, 0x20)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, address key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, and(key, shr(96, not(0))))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bool key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, iszero(iszero(key)))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes32 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, uint256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, int256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, string memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guaratees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/NFTCollection.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\ncontract MultichainNFT is ERC1155, Ownable {\n    using Strings for uint256;\n    \n    // USDC token interface\n    IERC20 public usdcToken;\n    \n    // Pricing\n    uint256 public mintPriceETH = 0.01 ether;  // Default ETH price\n    uint256 public mintPriceUSDC = 10 * 10**6; // 10 USDC (6 decimals)\n    \n    // Metadata structure\n    struct TokenMetadata {\n        string imageURI;   // URI for the PNG data\n        string promptText; // AI prompt used to generate the image\n        address creator;   // User who created this token\n    }\n    \n    // Mapping from token ID to its metadata\n    mapping(uint256 => TokenMetadata) public tokenMetadata;\n    \n    // Counter for token IDs\n    uint256 private _tokenIdCounter;\n    \n    // Base URI for metadata\n    string private _baseURI;\n    \n    // Events\n    event TokenMinted(uint256 indexed tokenId, address indexed creator, string promptText);\n    event PriceUpdated(uint256 newPriceETH, uint256 newPriceUSDC);\n    \n    constructor(address _usdcAddress) ERC1155(\"\") Ownable(msg.sender) {\n        usdcToken = IERC20(_usdcAddress);\n        _baseURI = \"\";\n    }\n    \n    /**\n     * @dev Mint a new token with ETH payment\n     * @param _imageURI URI pointing to the PNG data\n     * @param _promptText The AI prompt text used\n     * @param _amount Number of tokens to mint\n     */\n    function mintWithETH(string memory _imageURI, string memory _promptText, uint256 _amount) external payable {\n        require(msg.value >= mintPriceETH * _amount, \"Insufficient ETH sent\");\n        \n        uint256 tokenId = _tokenIdCounter;\n        _tokenIdCounter += 1;\n        \n        _mint(msg.sender, tokenId, _amount, \"\");\n        \n        tokenMetadata[tokenId] = TokenMetadata({\n            imageURI: _imageURI,\n            promptText: _promptText,\n            creator: msg.sender\n        });\n        \n        emit TokenMinted(tokenId, msg.sender, _promptText);\n    }\n    \n    /**\n     * @dev Mint a new token with USDC payment\n     * @param _imageURI URI pointing to the PNG data\n     * @param _promptText The AI prompt text used\n     * @param _amount Number of tokens to mint\n     */\n    function mintWithUSDC(string memory _imageURI, string memory _promptText, uint256 _amount) external {\n        uint256 totalPrice = mintPriceUSDC * _amount;\n        require(usdcToken.balanceOf(msg.sender) >= totalPrice, \"Insufficient USDC balance\");\n        \n        // Transfer USDC from the user to the contract\n        require(usdcToken.transferFrom(msg.sender, address(this), totalPrice), \"USDC transfer failed\");\n        \n        uint256 tokenId = _tokenIdCounter;\n        _tokenIdCounter += 1;\n        \n        _mint(msg.sender, tokenId, _amount, \"\");\n        \n        tokenMetadata[tokenId] = TokenMetadata({\n            imageURI: _imageURI,\n            promptText: _promptText,\n            creator: msg.sender\n        });\n        \n        emit TokenMinted(tokenId, msg.sender, _promptText);\n    }\n    \n    /**\n     * @dev Get the complete metadata for a token\n     * @param tokenId The ID of the token\n     */\n    function getTokenMetadata(uint256 tokenId) external view returns (TokenMetadata memory) {\n        require(_exists(tokenId), \"Token does not exist\");\n        return tokenMetadata[tokenId];\n    }\n    \n    /**\n     * @dev Update minting prices\n     * @param newPriceETH New price in ETH\n     * @param newPriceUSDC New price in USDC\n     */\n    function updatePrices(uint256 newPriceETH, uint256 newPriceUSDC) external onlyOwner {\n        mintPriceETH = newPriceETH;\n        mintPriceUSDC = newPriceUSDC;\n        emit PriceUpdated(newPriceETH, newPriceUSDC);\n    }\n    \n    /**\n     * @dev Set the base URI for token metadata\n     * @param newBaseURI New base URI\n     */\n    function setBaseURI(string memory newBaseURI) external onlyOwner {\n        _baseURI = newBaseURI;\n    }\n    \n    /**\n     * @dev Override URI function to construct token URIs\n     */\n    function uri(uint256 tokenId) public view override returns (string memory) {\n        require(_exists(tokenId), \"URI query for nonexistent token\");\n        return string(abi.encodePacked(_baseURI, tokenId.toString()));\n    }\n    \n    /**\n     * @dev Check if a token exists\n     */\n    function _exists(uint256 tokenId) internal view returns (bool) {\n        return bytes(tokenMetadata[tokenId].imageURI).length > 0;\n    }\n    \n    /**\n     * @dev Withdraw ETH from the contract\n     */\n    function withdrawETH() external onlyOwner {\n        uint256 balance = address(this).balance;\n        require(balance > 0, \"No ETH to withdraw\");\n        payable(owner()).transfer(balance);\n    }\n    \n    /**\n     * @dev Withdraw USDC from the contract\n     */\n    function withdrawUSDC() external onlyOwner {\n        uint256 balance = usdcToken.balanceOf(address(this));\n        require(balance > 0, \"No USDC to withdraw\");\n        require(usdcToken.transfer(owner(), balance), \"USDC transfer failed\");\n    }\n    \n    /**\n     * @dev Update the USDC token contract address\n     */\n    function updateUSDCAddress(address newUSDCAddress) external onlyOwner {\n        require(newUSDCAddress != address(0), \"Invalid address\");\n        usdcToken = IERC20(newUSDCAddress);\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":99999},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout","userdoc","devdoc"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2554],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":2555,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2554,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,2554],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[284],"IERC20Errors":[189],"IERC721Errors":[237]},"id":285,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"138:141:1","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":189,"linearizedBaseContracts":[189],"name":"IERC20Errors","nameLocation":"290:12:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"309:309:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":159,"name":"ERC20InsufficientBalance","nameLocation":"629:24:1","nodeType":"ErrorDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"sender","nameLocation":"662:6:1","nodeType":"VariableDeclaration","scope":159,"src":"654:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"balance","nameLocation":"678:7:1","nodeType":"VariableDeclaration","scope":159,"src":"670:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"needed","nameLocation":"695:6:1","nodeType":"VariableDeclaration","scope":159,"src":"687:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:1"},"src":"623:80:1"},{"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"709:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":164,"name":"ERC20InvalidSender","nameLocation":"872:18:1","nodeType":"ErrorDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"sender","nameLocation":"899:6:1","nodeType":"VariableDeclaration","scope":164,"src":"891:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:1"},"src":"866:41:1"},{"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"913:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":169,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:1","nodeType":"ErrorDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:1","nodeType":"VariableDeclaration","scope":169,"src":"1104:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:1"},"src":"1077:45:1"},{"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"1128:345:1","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":178,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:1","nodeType":"ErrorDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"spender","nameLocation":"1519:7:1","nodeType":"VariableDeclaration","scope":178,"src":"1511:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:1","nodeType":"VariableDeclaration","scope":178,"src":"1528:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":173,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"needed","nameLocation":"1555:6:1","nodeType":"VariableDeclaration","scope":178,"src":"1547:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:1"},"src":"1478:85:1"},{"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"1569:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":183,"name":"ERC20InvalidApprover","nameLocation":"1754:20:1","nodeType":"ErrorDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"approver","nameLocation":"1783:8:1","nodeType":"VariableDeclaration","scope":183,"src":"1775:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:1"},"src":"1748:45:1"},{"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"1799:195:1","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":188,"name":"ERC20InvalidSpender","nameLocation":"2005:19:1","nodeType":"ErrorDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"spender","nameLocation":"2033:7:1","nodeType":"VariableDeclaration","scope":188,"src":"2025:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:1"},"src":"1999:43:1"}],"scope":285,"src":"280:1764:1","usedErrors":[159,164,169,178,183,188],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"2046:143:1","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":237,"linearizedBaseContracts":[237],"name":"IERC721Errors","nameLocation":"2200:13:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"2220:219:1","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":195,"name":"ERC721InvalidOwner","nameLocation":"2450:18:1","nodeType":"ErrorDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"owner","nameLocation":"2477:5:1","nodeType":"VariableDeclaration","scope":195,"src":"2469:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:1"},"src":"2444:40:1"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"2490:132:1","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":200,"name":"ERC721NonexistentToken","nameLocation":"2633:22:1","nodeType":"ErrorDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:1","nodeType":"VariableDeclaration","scope":200,"src":"2656:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:1"},"src":"2627:46:1"},{"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"2679:289:1","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":209,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:1","nodeType":"ErrorDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"sender","nameLocation":"3008:6:1","nodeType":"VariableDeclaration","scope":209,"src":"3000:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":202,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:1","nodeType":"VariableDeclaration","scope":209,"src":"3016:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"owner","nameLocation":"3041:5:1","nodeType":"VariableDeclaration","scope":209,"src":"3033:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:1"},"src":"2973:75:1"},{"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"3054:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":214,"name":"ERC721InvalidSender","nameLocation":"3217:19:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"sender","nameLocation":"3245:6:1","nodeType":"VariableDeclaration","scope":214,"src":"3237:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:1"},"src":"3211:42:1"},{"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3259:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":219,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:1","nodeType":"ErrorDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:1","nodeType":"VariableDeclaration","scope":219,"src":"3451:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:1"},"src":"3423:46:1"},{"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3475:247:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":226,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:1","nodeType":"ErrorDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"operator","nameLocation":"3768:8:1","nodeType":"VariableDeclaration","scope":226,"src":"3760:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:1","nodeType":"VariableDeclaration","scope":226,"src":"3778:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:1"},"src":"3727:68:1"},{"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"3801:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":231,"name":"ERC721InvalidApprover","nameLocation":"3986:21:1","nodeType":"ErrorDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"approver","nameLocation":"4016:8:1","nodeType":"VariableDeclaration","scope":231,"src":"4008:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:1"},"src":"3980:46:1"},{"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"4032:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":236,"name":"ERC721InvalidOperator","nameLocation":"4240:21:1","nodeType":"ErrorDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"operator","nameLocation":"4270:8:1","nodeType":"VariableDeclaration","scope":236,"src":"4262:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:1"},"src":"4234:46:1"}],"scope":285,"src":"2190:2092:1","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"4284:145:1","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":284,"linearizedBaseContracts":[284],"name":"IERC1155Errors","nameLocation":"4440:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"4461:361:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":249,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:1","nodeType":"ErrorDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"sender","nameLocation":"4868:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4860:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"balance","nameLocation":"4884:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4876:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"needed","nameLocation":"4901:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4893:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4909:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:1"},"src":"4827:99:1"},{"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"4932:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":254,"name":"ERC1155InvalidSender","nameLocation":"5095:20:1","nodeType":"ErrorDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"sender","nameLocation":"5124:6:1","nodeType":"VariableDeclaration","scope":254,"src":"5116:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:1"},"src":"5089:43:1"},{"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"5138:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":259,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:1","nodeType":"ErrorDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:1","nodeType":"VariableDeclaration","scope":259,"src":"5331:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:1"},"src":"5302:47:1"},{"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"5355:256:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":266,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:1","nodeType":"ErrorDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"operator","nameLocation":"5659:8:1","nodeType":"VariableDeclaration","scope":266,"src":"5651:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"5677:5:1","nodeType":"VariableDeclaration","scope":266,"src":"5669:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:1"},"src":"5616:68:1"},{"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"5690:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":271,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:1","nodeType":"ErrorDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"approver","nameLocation":"5906:8:1","nodeType":"VariableDeclaration","scope":271,"src":"5898:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:1"},"src":"5869:47:1"},{"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"5922:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":276,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:1","nodeType":"ErrorDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"operator","nameLocation":"6161:8:1","nodeType":"VariableDeclaration","scope":276,"src":"6153:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:1"},"src":"6124:47:1"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"6177:280:1","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":283,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:1","nodeType":"ErrorDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:1","nodeType":"VariableDeclaration","scope":283,"src":"6494:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:1","nodeType":"VariableDeclaration","scope":283,"src":"6513:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:1"},"src":"6462:73:1"}],"scope":285,"src":"4430:2107:1","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[]}],"src":"112:6426:1"},"id":1},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","exportedSymbols":{"Arrays":[2492],"Context":[2554],"ERC1155":[1201],"ERC1155Utils":[1536],"ERC165":[4084],"IERC1155":[1324],"IERC1155Errors":[284],"IERC1155MetadataURI":[1382],"IERC165":[4096]},"id":1202,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":286,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"./IERC1155.sol","id":288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":1325,"src":"135:40:2","symbolAliases":[{"foreign":{"id":287,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"143:8:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","file":"./extensions/IERC1155MetadataURI.sol","id":290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":1383,"src":"176:73:2","symbolAliases":[{"foreign":{"id":289,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"184:19:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","file":"./utils/ERC1155Utils.sol","id":292,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":1537,"src":"250:54:2","symbolAliases":[{"foreign":{"id":291,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"258:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":294,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":2555,"src":"305:48:2","symbolAliases":[{"foreign":{"id":293,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"313:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":297,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":4085,"src":"354:69:2","symbolAliases":[{"foreign":{"id":295,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4096,"src":"362:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":296,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"371:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"../../utils/Arrays.sol","id":299,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":2493,"src":"424:46:2","symbolAliases":[{"foreign":{"id":298,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"432:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":301,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":285,"src":"471:67:2","symbolAliases":[{"foreign":{"id":300,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"479:14:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":303,"name":"Context","nameLocations":["754:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2554,"src":"754:7:2"},"id":304,"nodeType":"InheritanceSpecifier","src":"754:7:2"},{"baseName":{"id":305,"name":"ERC165","nameLocations":["763:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":4084,"src":"763:6:2"},"id":306,"nodeType":"InheritanceSpecifier","src":"763:6:2"},{"baseName":{"id":307,"name":"IERC1155","nameLocations":["771:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":1324,"src":"771:8:2"},"id":308,"nodeType":"InheritanceSpecifier","src":"771:8:2"},{"baseName":{"id":309,"name":"IERC1155MetadataURI","nameLocations":["781:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1382,"src":"781:19:2"},"id":310,"nodeType":"InheritanceSpecifier","src":"781:19:2"},{"baseName":{"id":311,"name":"IERC1155Errors","nameLocations":["802:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":284,"src":"802:14:2"},"id":312,"nodeType":"InheritanceSpecifier","src":"802:14:2"}],"canonicalName":"ERC1155","contractDependencies":[],"contractKind":"contract","documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"540:184:2","text":" @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"},"fullyImplemented":true,"id":1201,"linearizedBaseContracts":[1201,284,1382,1324,4084,4096,2554],"name":"ERC1155","nameLocation":"743:7:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":316,"libraryName":{"id":313,"name":"Arrays","nameLocations":["829:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":2492,"src":"829:6:2"},"nodeType":"UsingForDirective","src":"823:27:2","typeName":{"baseType":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"840:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":315,"nodeType":"ArrayTypeName","src":"840:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},{"global":false,"id":320,"libraryName":{"id":317,"name":"Arrays","nameLocations":["861:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":2492,"src":"861:6:2"},"nodeType":"UsingForDirective","src":"855:27:2","typeName":{"baseType":{"id":318,"name":"address","nodeType":"ElementaryTypeName","src":"872:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":319,"nodeType":"ArrayTypeName","src":"872:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},{"constant":false,"id":326,"mutability":"mutable","name":"_balances","nameLocation":"955:9:2","nodeType":"VariableDeclaration","scope":1201,"src":"888:76:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":325,"keyName":"id","keyNameLocation":"904:2:2","keyType":{"id":321,"name":"uint256","nodeType":"ElementaryTypeName","src":"896:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"888:58:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":324,"keyName":"account","keyNameLocation":"926:7:2","keyType":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"918:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"910:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":323,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":332,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1041:18:2","nodeType":"VariableDeclaration","scope":1201,"src":"971:88:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":331,"keyName":"account","keyNameLocation":"987:7:2","keyType":{"id":327,"name":"address","nodeType":"ElementaryTypeName","src":"979:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"971:61:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":330,"keyName":"operator","keyNameLocation":"1014:8:2","keyType":{"id":328,"name":"address","nodeType":"ElementaryTypeName","src":"1006:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"998:33:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":329,"name":"bool","nodeType":"ElementaryTypeName","src":"1026:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":334,"mutability":"mutable","name":"_uri","nameLocation":"1195:4:2","nodeType":"VariableDeclaration","scope":1201,"src":"1180:19:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":333,"name":"string","nodeType":"ElementaryTypeName","src":"1180:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":344,"nodeType":"Block","src":"1281:30:2","statements":[{"expression":{"arguments":[{"id":341,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"1299:4:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":340,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"1291:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1291:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":343,"nodeType":"ExpressionStatement","src":"1291:13:2"}]},"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"1206:38:2","text":" @dev See {_setURI}."},"id":345,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"uri_","nameLocation":"1275:4:2","nodeType":"VariableDeclaration","scope":345,"src":"1261:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":336,"name":"string","nodeType":"ElementaryTypeName","src":"1261:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1260:20:2"},"returnParameters":{"id":339,"nodeType":"ParameterList","parameters":[],"src":"1281:0:2"},"scope":1201,"src":"1249:62:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[4083,4095],"body":{"id":375,"nodeType":"Block","src":"1486:197:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":356,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"1515:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":358,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"1535:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1324_$","typeString":"type(contract IERC1155)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1324_$","typeString":"type(contract IERC1155)"}],"id":357,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1530:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1530:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155_$1324","typeString":"type(contract IERC1155)"}},"id":360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1545:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"1530:26:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1515:41:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":362,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"1572:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":364,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"1592:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1382_$","typeString":"type(contract IERC1155MetadataURI)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1382_$","typeString":"type(contract IERC1155MetadataURI)"}],"id":363,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1587:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1587:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1382","typeString":"type(contract IERC1155MetadataURI)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1613:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"1587:37:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1572:52:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1515:109:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":371,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"1664:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":369,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1640:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155_$1201_$","typeString":"type(contract super ERC1155)"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1646:17:2","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4083,"src":"1640:23:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1640:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1515:161:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":355,"id":374,"nodeType":"Return","src":"1496:180:2"}]},"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1317:56:2","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":376,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1387:17:2","nodeType":"FunctionDefinition","overrides":{"id":352,"nodeType":"OverrideSpecifier","overrides":[{"id":350,"name":"ERC165","nameLocations":["1454:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":4084,"src":"1454:6:2"},{"id":351,"name":"IERC165","nameLocations":["1462:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":4096,"src":"1462:7:2"}],"src":"1445:25:2"},"parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"interfaceId","nameLocation":"1412:11:2","nodeType":"VariableDeclaration","scope":376,"src":"1405:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":347,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1405:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1404:20:2"},"returnParameters":{"id":355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":376,"src":"1480:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":353,"name":"bool","nodeType":"ElementaryTypeName","src":"1480:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1479:6:2"},"scope":1201,"src":"1378:305:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1381],"body":{"id":386,"nodeType":"Block","src":"2157:28:2","statements":[{"expression":{"id":384,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"2174:4:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":383,"id":385,"nodeType":"Return","src":"2167:11:2"}]},"documentation":{"id":377,"nodeType":"StructuredDocumentation","src":"1689:388:2","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."},"functionSelector":"0e89341c","id":387,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"2091:3:2","nodeType":"FunctionDefinition","parameters":{"id":380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":387,"src":"2095:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":378,"name":"uint256","nodeType":"ElementaryTypeName","src":"2095:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2094:18:2"},"returnParameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":387,"src":"2142:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":381,"name":"string","nodeType":"ElementaryTypeName","src":"2142:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2141:15:2"},"scope":1201,"src":"2082:103:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1262],"body":{"id":403,"nodeType":"Block","src":"2331:46:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":397,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"2348:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":399,"indexExpression":{"id":398,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"2358:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2348:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":401,"indexExpression":{"id":400,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"2362:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2348:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":396,"id":402,"nodeType":"Return","src":"2341:29:2"}]},"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"2191:49:2","text":" @dev See {IERC1155-balanceOf}."},"functionSelector":"00fdd58e","id":404,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2254:9:2","nodeType":"FunctionDefinition","parameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"account","nameLocation":"2272:7:2","nodeType":"VariableDeclaration","scope":404,"src":"2264:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":389,"name":"address","nodeType":"ElementaryTypeName","src":"2264:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":392,"mutability":"mutable","name":"id","nameLocation":"2289:2:2","nodeType":"VariableDeclaration","scope":404,"src":"2281:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"2281:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2263:29:2"},"returnParameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":404,"src":"2322:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":394,"name":"uint256","nodeType":"ElementaryTypeName","src":"2322:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2321:9:2"},"scope":1201,"src":"2245:132:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1275],"body":{"id":473,"nodeType":"Block","src":"2676:410:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":417,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2690:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2699:6:2","memberName":"length","nodeType":"MemberAccess","src":"2690:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":419,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"2709:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2713:6:2","memberName":"length","nodeType":"MemberAccess","src":"2709:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2690:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":430,"nodeType":"IfStatement","src":"2686:121:2","trueBody":{"id":429,"nodeType":"Block","src":"2721:86:2","statements":[{"errorCall":{"arguments":[{"expression":{"id":423,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"2768:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2772:6:2","memberName":"length","nodeType":"MemberAccess","src":"2768:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":425,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2780:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2789:6:2","memberName":"length","nodeType":"MemberAccess","src":"2780:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":422,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"2742:25:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2742:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":428,"nodeType":"RevertStatement","src":"2735:61:2"}]}},{"assignments":[435],"declarations":[{"constant":false,"id":435,"mutability":"mutable","name":"batchBalances","nameLocation":"2834:13:2","nodeType":"VariableDeclaration","scope":473,"src":"2817:30:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":433,"name":"uint256","nodeType":"ElementaryTypeName","src":"2817:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":434,"nodeType":"ArrayTypeName","src":"2817:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":442,"initialValue":{"arguments":[{"expression":{"id":439,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2864:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2873:6:2","memberName":"length","nodeType":"MemberAccess","src":"2864:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2850:13:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":436,"name":"uint256","nodeType":"ElementaryTypeName","src":"2854:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":437,"nodeType":"ArrayTypeName","src":"2854:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2850:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2817:63:2"},{"body":{"id":469,"nodeType":"Block","src":"2937:112:2","statements":[{"expression":{"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":454,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"2951:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":456,"indexExpression":{"id":455,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2965:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2951:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":460,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"3008:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":458,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2980:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2989:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2432,"src":"2980:27:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address[] memory,uint256) pure returns (address)"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2980:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":464,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"3035:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":462,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"3012:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3016:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2458,"src":"3012:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3012:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":457,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"2970:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2970:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2951:87:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":468,"nodeType":"ExpressionStatement","src":"2951:87:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":447,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2911:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":448,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2915:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2924:6:2","memberName":"length","nodeType":"MemberAccess","src":"2915:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2911:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":470,"initializationExpression":{"assignments":[444],"declarations":[{"constant":false,"id":444,"mutability":"mutable","name":"i","nameLocation":"2904:1:2","nodeType":"VariableDeclaration","scope":470,"src":"2896:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":443,"name":"uint256","nodeType":"ElementaryTypeName","src":"2896:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":446,"initialValue":{"hexValue":"30","id":445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2908:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2896:13:2"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2932:3:2","subExpression":{"id":451,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2934:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":453,"nodeType":"ExpressionStatement","src":"2932:3:2"},"nodeType":"ForStatement","src":"2891:158:2"},{"expression":{"id":471,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"3066:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":416,"id":472,"nodeType":"Return","src":"3059:20:2"}]},"documentation":{"id":405,"nodeType":"StructuredDocumentation","src":"2383:146:2","text":" @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":474,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2543:14:2","nodeType":"FunctionDefinition","parameters":{"id":412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":408,"mutability":"mutable","name":"accounts","nameLocation":"2584:8:2","nodeType":"VariableDeclaration","scope":474,"src":"2567:25:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":406,"name":"address","nodeType":"ElementaryTypeName","src":"2567:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":407,"nodeType":"ArrayTypeName","src":"2567:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":411,"mutability":"mutable","name":"ids","nameLocation":"2619:3:2","nodeType":"VariableDeclaration","scope":474,"src":"2602:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":409,"name":"uint256","nodeType":"ElementaryTypeName","src":"2602:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":410,"nodeType":"ArrayTypeName","src":"2602:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2557:71:2"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":474,"src":"2658:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":413,"name":"uint256","nodeType":"ElementaryTypeName","src":"2658:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":414,"nodeType":"ArrayTypeName","src":"2658:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2657:18:2"},"scope":1201,"src":"2534:552:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1283],"body":{"id":489,"nodeType":"Block","src":"3229:69:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":483,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"3258:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3258:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":485,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"3272:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":486,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"3282:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":482,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"3239:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3239:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":488,"nodeType":"ExpressionStatement","src":"3239:52:2"}]},"documentation":{"id":475,"nodeType":"StructuredDocumentation","src":"3092:57:2","text":" @dev See {IERC1155-setApprovalForAll}."},"functionSelector":"a22cb465","id":490,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3163:17:2","nodeType":"FunctionDefinition","parameters":{"id":480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":477,"mutability":"mutable","name":"operator","nameLocation":"3189:8:2","nodeType":"VariableDeclaration","scope":490,"src":"3181:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":476,"name":"address","nodeType":"ElementaryTypeName","src":"3181:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":479,"mutability":"mutable","name":"approved","nameLocation":"3204:8:2","nodeType":"VariableDeclaration","scope":490,"src":"3199:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":478,"name":"bool","nodeType":"ElementaryTypeName","src":"3199:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3180:33:2"},"returnParameters":{"id":481,"nodeType":"ParameterList","parameters":[],"src":"3229:0:2"},"scope":1201,"src":"3154:144:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1293],"body":{"id":506,"nodeType":"Block","src":"3461:61:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":500,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"3478:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":502,"indexExpression":{"id":501,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"3497:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3478:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":504,"indexExpression":{"id":503,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"3506:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3478:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":499,"id":505,"nodeType":"Return","src":"3471:44:2"}]},"documentation":{"id":491,"nodeType":"StructuredDocumentation","src":"3304:56:2","text":" @dev See {IERC1155-isApprovedForAll}."},"functionSelector":"e985e9c5","id":507,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3374:16:2","nodeType":"FunctionDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"account","nameLocation":"3399:7:2","nodeType":"VariableDeclaration","scope":507,"src":"3391:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"3391:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":495,"mutability":"mutable","name":"operator","nameLocation":"3416:8:2","nodeType":"VariableDeclaration","scope":507,"src":"3408:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":494,"name":"address","nodeType":"ElementaryTypeName","src":"3408:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3390:35:2"},"returnParameters":{"id":499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":507,"src":"3455:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":497,"name":"bool","nodeType":"ElementaryTypeName","src":"3455:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3454:6:2"},"scope":1201,"src":"3365:157:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1307],"body":{"id":550,"nodeType":"Block","src":"3702:238:2","statements":[{"assignments":[522],"declarations":[{"constant":false,"id":522,"mutability":"mutable","name":"sender","nameLocation":"3720:6:2","nodeType":"VariableDeclaration","scope":550,"src":"3712:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":521,"name":"address","nodeType":"ElementaryTypeName","src":"3712:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":525,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":523,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"3729:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3729:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3712:29:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":526,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3755:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":527,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"3763:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3755:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3773:31:2","subExpression":{"arguments":[{"id":530,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3791:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":531,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"3797:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":529,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"3774:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3774:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3755:49:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":541,"nodeType":"IfStatement","src":"3751:129:2","trueBody":{"id":540,"nodeType":"Block","src":"3806:74:2","statements":[{"errorCall":{"arguments":[{"id":536,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"3856:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":537,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3864:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":535,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"3827:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3827:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":539,"nodeType":"RevertStatement","src":"3820:49:2"}]}},{"expression":{"arguments":[{"id":543,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3907:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":544,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"3913:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":545,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"3917:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"3921:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":547,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"3928:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":542,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"3889:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3889:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":549,"nodeType":"ExpressionStatement","src":"3889:44:2"}]},"documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"3528:56:2","text":" @dev See {IERC1155-safeTransferFrom}."},"functionSelector":"f242432a","id":551,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3598:16:2","nodeType":"FunctionDefinition","parameters":{"id":519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"from","nameLocation":"3623:4:2","nodeType":"VariableDeclaration","scope":551,"src":"3615:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":509,"name":"address","nodeType":"ElementaryTypeName","src":"3615:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"to","nameLocation":"3637:2:2","nodeType":"VariableDeclaration","scope":551,"src":"3629:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"3629:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":514,"mutability":"mutable","name":"id","nameLocation":"3649:2:2","nodeType":"VariableDeclaration","scope":551,"src":"3641:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":513,"name":"uint256","nodeType":"ElementaryTypeName","src":"3641:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":516,"mutability":"mutable","name":"value","nameLocation":"3661:5:2","nodeType":"VariableDeclaration","scope":551,"src":"3653:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":515,"name":"uint256","nodeType":"ElementaryTypeName","src":"3653:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":518,"mutability":"mutable","name":"data","nameLocation":"3681:4:2","nodeType":"VariableDeclaration","scope":551,"src":"3668:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":517,"name":"bytes","nodeType":"ElementaryTypeName","src":"3668:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3614:72:2"},"returnParameters":{"id":520,"nodeType":"ParameterList","parameters":[],"src":"3702:0:2"},"scope":1201,"src":"3589:351:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1323],"body":{"id":596,"nodeType":"Block","src":"4196:245:2","statements":[{"assignments":[568],"declarations":[{"constant":false,"id":568,"mutability":"mutable","name":"sender","nameLocation":"4214:6:2","nodeType":"VariableDeclaration","scope":596,"src":"4206:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"4206:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":571,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":569,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"4223:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4223:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4206:29:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":572,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4249:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":573,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"4257:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4249:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4267:31:2","subExpression":{"arguments":[{"id":576,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4285:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":577,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"4291:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":575,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"4268:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4268:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4249:49:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":587,"nodeType":"IfStatement","src":"4245:129:2","trueBody":{"id":586,"nodeType":"Block","src":"4300:74:2","statements":[{"errorCall":{"arguments":[{"id":582,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"4350:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":583,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4358:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":581,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"4321:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4321:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":585,"nodeType":"RevertStatement","src":"4314:49:2"}]}},{"expression":{"arguments":[{"id":589,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4406:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":590,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"4412:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":591,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"4416:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":592,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"4421:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":593,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"4429:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":588,"name":"_safeBatchTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"4383:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4383:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":595,"nodeType":"ExpressionStatement","src":"4383:51:2"}]},"documentation":{"id":552,"nodeType":"StructuredDocumentation","src":"3946:61:2","text":" @dev See {IERC1155-safeBatchTransferFrom}."},"functionSelector":"2eb2c2d6","id":597,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4021:21:2","nodeType":"FunctionDefinition","parameters":{"id":565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":554,"mutability":"mutable","name":"from","nameLocation":"4060:4:2","nodeType":"VariableDeclaration","scope":597,"src":"4052:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":553,"name":"address","nodeType":"ElementaryTypeName","src":"4052:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":556,"mutability":"mutable","name":"to","nameLocation":"4082:2:2","nodeType":"VariableDeclaration","scope":597,"src":"4074:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":555,"name":"address","nodeType":"ElementaryTypeName","src":"4074:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":559,"mutability":"mutable","name":"ids","nameLocation":"4111:3:2","nodeType":"VariableDeclaration","scope":597,"src":"4094:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":557,"name":"uint256","nodeType":"ElementaryTypeName","src":"4094:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":558,"nodeType":"ArrayTypeName","src":"4094:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":562,"mutability":"mutable","name":"values","nameLocation":"4141:6:2","nodeType":"VariableDeclaration","scope":597,"src":"4124:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":560,"name":"uint256","nodeType":"ElementaryTypeName","src":"4124:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":561,"nodeType":"ArrayTypeName","src":"4124:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":564,"mutability":"mutable","name":"data","nameLocation":"4170:4:2","nodeType":"VariableDeclaration","scope":597,"src":"4157:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":563,"name":"bytes","nodeType":"ElementaryTypeName","src":"4157:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4042:138:2"},"returnParameters":{"id":566,"nodeType":"ParameterList","parameters":[],"src":"4196:0:2"},"scope":1201,"src":"4012:429:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":749,"nodeType":"Block","src":"5249:1174:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":611,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5263:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5267:6:2","memberName":"length","nodeType":"MemberAccess","src":"5263:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":613,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"5277:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5284:6:2","memberName":"length","nodeType":"MemberAccess","src":"5277:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5263:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":624,"nodeType":"IfStatement","src":"5259:117:2","trueBody":{"id":623,"nodeType":"Block","src":"5292:84:2","statements":[{"errorCall":{"arguments":[{"expression":{"id":617,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5339:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5343:6:2","memberName":"length","nodeType":"MemberAccess","src":"5339:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":619,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"5351:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5358:6:2","memberName":"length","nodeType":"MemberAccess","src":"5351:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":616,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"5313:25:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5313:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":622,"nodeType":"RevertStatement","src":"5306:59:2"}]}},{"assignments":[626],"declarations":[{"constant":false,"id":626,"mutability":"mutable","name":"operator","nameLocation":"5394:8:2","nodeType":"VariableDeclaration","scope":749,"src":"5386:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":625,"name":"address","nodeType":"ElementaryTypeName","src":"5386:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":629,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":627,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"5405:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5405:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5386:31:2"},{"body":{"id":710,"nodeType":"Block","src":"5469:650:2","statements":[{"assignments":[642],"declarations":[{"constant":false,"id":642,"mutability":"mutable","name":"id","nameLocation":"5491:2:2","nodeType":"VariableDeclaration","scope":710,"src":"5483:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":641,"name":"uint256","nodeType":"ElementaryTypeName","src":"5483:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":647,"initialValue":{"arguments":[{"id":645,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5519:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":643,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5496:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5500:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2458,"src":"5496:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5496:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5483:38:2"},{"assignments":[649],"declarations":[{"constant":false,"id":649,"mutability":"mutable","name":"value","nameLocation":"5543:5:2","nodeType":"VariableDeclaration","scope":710,"src":"5535:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":648,"name":"uint256","nodeType":"ElementaryTypeName","src":"5535:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":654,"initialValue":{"arguments":[{"id":652,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5577:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":650,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"5551:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5558:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2458,"src":"5551:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5551:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5535:44:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":655,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5598:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5614:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5606:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"5606:7:2","typeDescriptions":{}}},"id":659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5606:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5598:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":693,"nodeType":"IfStatement","src":"5594:420:2","trueBody":{"id":692,"nodeType":"Block","src":"5618:396:2","statements":[{"assignments":[662],"declarations":[{"constant":false,"id":662,"mutability":"mutable","name":"fromBalance","nameLocation":"5644:11:2","nodeType":"VariableDeclaration","scope":692,"src":"5636:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":661,"name":"uint256","nodeType":"ElementaryTypeName","src":"5636:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":668,"initialValue":{"baseExpression":{"baseExpression":{"id":663,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5658:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":665,"indexExpression":{"id":664,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"5668:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5658:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":667,"indexExpression":{"id":666,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5672:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5658:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5636:41:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":669,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"5699:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"5713:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5699:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":680,"nodeType":"IfStatement","src":"5695:129:2","trueBody":{"id":679,"nodeType":"Block","src":"5720:104:2","statements":[{"errorCall":{"arguments":[{"id":673,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5776:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":674,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"5782:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"5795:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":676,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"5802:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":672,"name":"ERC1155InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"5749:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256) pure"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5749:56:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":678,"nodeType":"RevertStatement","src":"5742:63:2"}]}},{"id":691,"nodeType":"UncheckedBlock","src":"5841:159:2","statements":[{"expression":{"id":689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":681,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5940:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":684,"indexExpression":{"id":682,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"5950:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5940:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":685,"indexExpression":{"id":683,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5954:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5940:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":686,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"5962:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"5976:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5962:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5940:41:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":690,"nodeType":"ExpressionStatement","src":"5940:41:2"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":694,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"6032:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6046:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6038:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":695,"name":"address","nodeType":"ElementaryTypeName","src":"6038:7:2","typeDescriptions":{}}},"id":698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6038:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6032:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":709,"nodeType":"IfStatement","src":"6028:81:2","trueBody":{"id":708,"nodeType":"Block","src":"6050:59:2","statements":[{"expression":{"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":700,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"6068:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":703,"indexExpression":{"id":701,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"6078:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6068:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":704,"indexExpression":{"id":702,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"6082:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6068:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"6089:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6068:26:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":707,"nodeType":"ExpressionStatement","src":"6068:26:2"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":634,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5448:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":635,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5452:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5456:6:2","memberName":"length","nodeType":"MemberAccess","src":"5452:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5448:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":711,"initializationExpression":{"assignments":[631],"declarations":[{"constant":false,"id":631,"mutability":"mutable","name":"i","nameLocation":"5441:1:2","nodeType":"VariableDeclaration","scope":711,"src":"5433:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":630,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":633,"initialValue":{"hexValue":"30","id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5445:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5433:13:2"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5464:3:2","subExpression":{"id":638,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5466:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":640,"nodeType":"ExpressionStatement","src":"5464:3:2"},"nodeType":"ForStatement","src":"5428:691:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":712,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"6133:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6137:6:2","memberName":"length","nodeType":"MemberAccess","src":"6133:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6147:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6133:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":747,"nodeType":"Block","src":"6341:76:2","statements":[{"eventCall":{"arguments":[{"id":740,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6374:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":741,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"6384:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":742,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"6390:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":743,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"6394:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":744,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"6399:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":739,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"6360:13:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6360:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":746,"nodeType":"EmitStatement","src":"6355:51:2"}]},"id":748,"nodeType":"IfStatement","src":"6129:288:2","trueBody":{"id":738,"nodeType":"Block","src":"6150:185:2","statements":[{"assignments":[717],"declarations":[{"constant":false,"id":717,"mutability":"mutable","name":"id","nameLocation":"6172:2:2","nodeType":"VariableDeclaration","scope":738,"src":"6164:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":716,"name":"uint256","nodeType":"ElementaryTypeName","src":"6164:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":722,"initialValue":{"arguments":[{"hexValue":"30","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6200:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":718,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"6177:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6181:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2458,"src":"6177:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6177:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6164:38:2"},{"assignments":[724],"declarations":[{"constant":false,"id":724,"mutability":"mutable","name":"value","nameLocation":"6224:5:2","nodeType":"VariableDeclaration","scope":738,"src":"6216:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":723,"name":"uint256","nodeType":"ElementaryTypeName","src":"6216:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":729,"initialValue":{"arguments":[{"hexValue":"30","id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6258:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":725,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"6232:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6239:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2458,"src":"6232:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6232:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6216:44:2"},{"eventCall":{"arguments":[{"id":731,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6294:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":732,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"6304:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":733,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"6310:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":734,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"6314:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"6318:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":730,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"6279:14:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6279:45:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":737,"nodeType":"EmitStatement","src":"6274:50:2"}]}}]},"documentation":{"id":598,"nodeType":"StructuredDocumentation","src":"4447:690:2","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."},"id":750,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5151:7:2","nodeType":"FunctionDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":600,"mutability":"mutable","name":"from","nameLocation":"5167:4:2","nodeType":"VariableDeclaration","scope":750,"src":"5159:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":599,"name":"address","nodeType":"ElementaryTypeName","src":"5159:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":602,"mutability":"mutable","name":"to","nameLocation":"5181:2:2","nodeType":"VariableDeclaration","scope":750,"src":"5173:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":601,"name":"address","nodeType":"ElementaryTypeName","src":"5173:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":605,"mutability":"mutable","name":"ids","nameLocation":"5202:3:2","nodeType":"VariableDeclaration","scope":750,"src":"5185:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":603,"name":"uint256","nodeType":"ElementaryTypeName","src":"5185:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":604,"nodeType":"ArrayTypeName","src":"5185:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":608,"mutability":"mutable","name":"values","nameLocation":"5224:6:2","nodeType":"VariableDeclaration","scope":750,"src":"5207:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":606,"name":"uint256","nodeType":"ElementaryTypeName","src":"5207:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":607,"nodeType":"ArrayTypeName","src":"5207:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5158:73:2"},"returnParameters":{"id":610,"nodeType":"ParameterList","parameters":[],"src":"5249:0:2"},"scope":1201,"src":"5142:1281:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":829,"nodeType":"Block","src":"7193:509:2","statements":[{"expression":{"arguments":[{"id":767,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"7211:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":768,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7217:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":769,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7221:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":770,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"7226:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":766,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"7203:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7203:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":772,"nodeType":"ExpressionStatement","src":"7203:30:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":773,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7247:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7261:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7253:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":774,"name":"address","nodeType":"ElementaryTypeName","src":"7253:7:2","typeDescriptions":{}}},"id":777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7253:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7247:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":828,"nodeType":"IfStatement","src":"7243:453:2","trueBody":{"id":827,"nodeType":"Block","src":"7265:431:2","statements":[{"assignments":[780],"declarations":[{"constant":false,"id":780,"mutability":"mutable","name":"operator","nameLocation":"7287:8:2","nodeType":"VariableDeclaration","scope":827,"src":"7279:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"7279:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":783,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":781,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"7298:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7298:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7279:31:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":784,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7328:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7332:6:2","memberName":"length","nodeType":"MemberAccess","src":"7328:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7342:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7328:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":825,"nodeType":"Block","src":"7574:112:2","statements":[{"expression":{"arguments":[{"id":817,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"7633:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":818,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"7643:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":819,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7649:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":820,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7653:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":821,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"7658:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":822,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"7666:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":814,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"7592:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$1536_$","typeString":"type(library ERC1155Utils)"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7605:27:2","memberName":"checkOnERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1535,"src":"7592:40:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7592:79:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":824,"nodeType":"ExpressionStatement","src":"7592:79:2"}]},"id":826,"nodeType":"IfStatement","src":"7324:362:2","trueBody":{"id":813,"nodeType":"Block","src":"7345:223:2","statements":[{"assignments":[789],"declarations":[{"constant":false,"id":789,"mutability":"mutable","name":"id","nameLocation":"7371:2:2","nodeType":"VariableDeclaration","scope":813,"src":"7363:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":788,"name":"uint256","nodeType":"ElementaryTypeName","src":"7363:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":794,"initialValue":{"arguments":[{"hexValue":"30","id":792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7399:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":790,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7376:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7380:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2458,"src":"7376:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7376:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7363:38:2"},{"assignments":[796],"declarations":[{"constant":false,"id":796,"mutability":"mutable","name":"value","nameLocation":"7427:5:2","nodeType":"VariableDeclaration","scope":813,"src":"7419:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":795,"name":"uint256","nodeType":"ElementaryTypeName","src":"7419:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":801,"initialValue":{"arguments":[{"hexValue":"30","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7461:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":797,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"7435:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7442:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2458,"src":"7435:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7435:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7419:44:2"},{"expression":{"arguments":[{"id":805,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"7517:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":806,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"7527:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":807,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7533:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":808,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"7537:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"7541:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":810,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"7548:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":802,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"7481:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$1536_$","typeString":"type(library ERC1155Utils)"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7494:22:2","memberName":"checkOnERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1461,"src":"7481:35:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7481:72:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":812,"nodeType":"ExpressionStatement","src":"7481:72:2"}]}}]}}]},"documentation":{"id":751,"nodeType":"StructuredDocumentation","src":"6429:568:2","text":" @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."},"id":830,"implemented":true,"kind":"function","modifiers":[],"name":"_updateWithAcceptanceCheck","nameLocation":"7011:26:2","nodeType":"FunctionDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"from","nameLocation":"7055:4:2","nodeType":"VariableDeclaration","scope":830,"src":"7047:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"7047:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":755,"mutability":"mutable","name":"to","nameLocation":"7077:2:2","nodeType":"VariableDeclaration","scope":830,"src":"7069:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"7069:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":758,"mutability":"mutable","name":"ids","nameLocation":"7106:3:2","nodeType":"VariableDeclaration","scope":830,"src":"7089:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":756,"name":"uint256","nodeType":"ElementaryTypeName","src":"7089:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":757,"nodeType":"ArrayTypeName","src":"7089:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":761,"mutability":"mutable","name":"values","nameLocation":"7136:6:2","nodeType":"VariableDeclaration","scope":830,"src":"7119:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":759,"name":"uint256","nodeType":"ElementaryTypeName","src":"7119:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":760,"nodeType":"ArrayTypeName","src":"7119:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":763,"mutability":"mutable","name":"data","nameLocation":"7165:4:2","nodeType":"VariableDeclaration","scope":830,"src":"7152:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":762,"name":"bytes","nodeType":"ElementaryTypeName","src":"7152:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7037:138:2"},"returnParameters":{"id":765,"nodeType":"ParameterList","parameters":[],"src":"7193:0:2"},"scope":1201,"src":"7002:700:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":895,"nodeType":"Block","src":"8267:355:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":844,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"8281:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8295:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8287:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":845,"name":"address","nodeType":"ElementaryTypeName","src":"8287:7:2","typeDescriptions":{}}},"id":848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8287:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8281:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":858,"nodeType":"IfStatement","src":"8277:88:2","trueBody":{"id":857,"nodeType":"Block","src":"8299:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8351:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8343:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":851,"name":"address","nodeType":"ElementaryTypeName","src":"8343:7:2","typeDescriptions":{}}},"id":854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8343:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":850,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"8320:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8320:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":856,"nodeType":"RevertStatement","src":"8313:41:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":859,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"8378:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8394:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8386:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":860,"name":"address","nodeType":"ElementaryTypeName","src":"8386:7:2","typeDescriptions":{}}},"id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8386:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8378:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":873,"nodeType":"IfStatement","src":"8374:88:2","trueBody":{"id":872,"nodeType":"Block","src":"8398:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8448:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8440:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":866,"name":"address","nodeType":"ElementaryTypeName","src":"8440:7:2","typeDescriptions":{}}},"id":869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8440:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":865,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"8419:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8419:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":871,"nodeType":"RevertStatement","src":"8412:39:2"}]}},{"assignments":[878,881],"declarations":[{"constant":false,"id":878,"mutability":"mutable","name":"ids","nameLocation":"8489:3:2","nodeType":"VariableDeclaration","scope":895,"src":"8472:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":876,"name":"uint256","nodeType":"ElementaryTypeName","src":"8472:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":877,"nodeType":"ArrayTypeName","src":"8472:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":881,"mutability":"mutable","name":"values","nameLocation":"8511:6:2","nodeType":"VariableDeclaration","scope":895,"src":"8494:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":879,"name":"uint256","nodeType":"ElementaryTypeName","src":"8494:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":880,"nodeType":"ArrayTypeName","src":"8494:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":886,"initialValue":{"arguments":[{"id":883,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"8540:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"8544:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":882,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"8521:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8521:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"8471:79:2"},{"expression":{"arguments":[{"id":888,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"8587:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":889,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"8593:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":890,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"8597:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":891,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"8602:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":892,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"8610:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":887,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"8560:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":894,"nodeType":"ExpressionStatement","src":"8560:55:2"}]},"documentation":{"id":831,"nodeType":"StructuredDocumentation","src":"7708:446:2","text":" @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":896,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferFrom","nameLocation":"8168:17:2","nodeType":"FunctionDefinition","parameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":833,"mutability":"mutable","name":"from","nameLocation":"8194:4:2","nodeType":"VariableDeclaration","scope":896,"src":"8186:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":832,"name":"address","nodeType":"ElementaryTypeName","src":"8186:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":835,"mutability":"mutable","name":"to","nameLocation":"8208:2:2","nodeType":"VariableDeclaration","scope":896,"src":"8200:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":834,"name":"address","nodeType":"ElementaryTypeName","src":"8200:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":837,"mutability":"mutable","name":"id","nameLocation":"8220:2:2","nodeType":"VariableDeclaration","scope":896,"src":"8212:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":836,"name":"uint256","nodeType":"ElementaryTypeName","src":"8212:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":839,"mutability":"mutable","name":"value","nameLocation":"8232:5:2","nodeType":"VariableDeclaration","scope":896,"src":"8224:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":838,"name":"uint256","nodeType":"ElementaryTypeName","src":"8224:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":841,"mutability":"mutable","name":"data","nameLocation":"8252:4:2","nodeType":"VariableDeclaration","scope":896,"src":"8239:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":840,"name":"bytes","nodeType":"ElementaryTypeName","src":"8239:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8185:72:2"},"returnParameters":{"id":843,"nodeType":"ParameterList","parameters":[],"src":"8267:0:2"},"scope":1201,"src":"8159:463:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":950,"nodeType":"Block","src":"9202:266:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":912,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"9216:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9230:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9222:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":913,"name":"address","nodeType":"ElementaryTypeName","src":"9222:7:2","typeDescriptions":{}}},"id":916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9216:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":926,"nodeType":"IfStatement","src":"9212:88:2","trueBody":{"id":925,"nodeType":"Block","src":"9234:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9286:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9278:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":919,"name":"address","nodeType":"ElementaryTypeName","src":"9278:7:2","typeDescriptions":{}}},"id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9278:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":918,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"9255:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9255:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":924,"nodeType":"RevertStatement","src":"9248:41:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":927,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"9313:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9329:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9321:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":928,"name":"address","nodeType":"ElementaryTypeName","src":"9321:7:2","typeDescriptions":{}}},"id":931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9321:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9313:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":941,"nodeType":"IfStatement","src":"9309:88:2","trueBody":{"id":940,"nodeType":"Block","src":"9333:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9383:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9375:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":934,"name":"address","nodeType":"ElementaryTypeName","src":"9375:7:2","typeDescriptions":{}}},"id":937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9375:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":933,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"9354:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9354:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":939,"nodeType":"RevertStatement","src":"9347:39:2"}]}},{"expression":{"arguments":[{"id":943,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"9433:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":944,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"9439:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":945,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"9443:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":946,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"9448:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":947,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"9456:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":942,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"9406:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9406:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":949,"nodeType":"ExpressionStatement","src":"9406:55:2"}]},"documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"8628:390:2","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."},"id":951,"implemented":true,"kind":"function","modifiers":[],"name":"_safeBatchTransferFrom","nameLocation":"9032:22:2","nodeType":"FunctionDefinition","parameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"from","nameLocation":"9072:4:2","nodeType":"VariableDeclaration","scope":951,"src":"9064:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":898,"name":"address","nodeType":"ElementaryTypeName","src":"9064:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":901,"mutability":"mutable","name":"to","nameLocation":"9094:2:2","nodeType":"VariableDeclaration","scope":951,"src":"9086:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":900,"name":"address","nodeType":"ElementaryTypeName","src":"9086:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":904,"mutability":"mutable","name":"ids","nameLocation":"9123:3:2","nodeType":"VariableDeclaration","scope":951,"src":"9106:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":902,"name":"uint256","nodeType":"ElementaryTypeName","src":"9106:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":903,"nodeType":"ArrayTypeName","src":"9106:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":907,"mutability":"mutable","name":"values","nameLocation":"9153:6:2","nodeType":"VariableDeclaration","scope":951,"src":"9136:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":905,"name":"uint256","nodeType":"ElementaryTypeName","src":"9136:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":906,"nodeType":"ArrayTypeName","src":"9136:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":909,"mutability":"mutable","name":"data","nameLocation":"9182:4:2","nodeType":"VariableDeclaration","scope":951,"src":"9169:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":908,"name":"bytes","nodeType":"ElementaryTypeName","src":"9169:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9054:138:2"},"returnParameters":{"id":911,"nodeType":"ParameterList","parameters":[],"src":"9202:0:2"},"scope":1201,"src":"9023:445:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":961,"nodeType":"Block","src":"10346:30:2","statements":[{"expression":{"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":957,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"10356:4:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":958,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"10363:6:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"10356:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":960,"nodeType":"ExpressionStatement","src":"10356:13:2"}]},"documentation":{"id":952,"nodeType":"StructuredDocumentation","src":"9474:811:2","text":" @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."},"id":962,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nameLocation":"10299:7:2","nodeType":"FunctionDefinition","parameters":{"id":955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"newuri","nameLocation":"10321:6:2","nodeType":"VariableDeclaration","scope":962,"src":"10307:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":953,"name":"string","nodeType":"ElementaryTypeName","src":"10307:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10306:22:2"},"returnParameters":{"id":956,"nodeType":"ParameterList","parameters":[],"src":"10346:0:2"},"scope":1201,"src":"10290:86:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1013,"nodeType":"Block","src":"10836:264:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":974,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"10850:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10864:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10856:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"10856:7:2","typeDescriptions":{}}},"id":978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10856:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10850:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":988,"nodeType":"IfStatement","src":"10846:88:2","trueBody":{"id":987,"nodeType":"Block","src":"10868:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10920:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10912:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":981,"name":"address","nodeType":"ElementaryTypeName","src":"10912:7:2","typeDescriptions":{}}},"id":984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10912:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":980,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"10889:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10889:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":986,"nodeType":"RevertStatement","src":"10882:41:2"}]}},{"assignments":[993,996],"declarations":[{"constant":false,"id":993,"mutability":"mutable","name":"ids","nameLocation":"10961:3:2","nodeType":"VariableDeclaration","scope":1013,"src":"10944:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":991,"name":"uint256","nodeType":"ElementaryTypeName","src":"10944:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":992,"nodeType":"ArrayTypeName","src":"10944:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":996,"mutability":"mutable","name":"values","nameLocation":"10983:6:2","nodeType":"VariableDeclaration","scope":1013,"src":"10966:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":994,"name":"uint256","nodeType":"ElementaryTypeName","src":"10966:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":995,"nodeType":"ArrayTypeName","src":"10966:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1001,"initialValue":{"arguments":[{"id":998,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"11012:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"11016:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":997,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"10993:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10993:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"10943:79:2"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11067:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11059:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1003,"name":"address","nodeType":"ElementaryTypeName","src":"11059:7:2","typeDescriptions":{}}},"id":1006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11059:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1007,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"11071:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1008,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"11075:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1009,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"11080:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1010,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"11088:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1002,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"11032:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11032:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1012,"nodeType":"ExpressionStatement","src":"11032:61:2"}]},"documentation":{"id":963,"nodeType":"StructuredDocumentation","src":"10382:367:2","text":" @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1014,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"10763:5:2","nodeType":"FunctionDefinition","parameters":{"id":972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"to","nameLocation":"10777:2:2","nodeType":"VariableDeclaration","scope":1014,"src":"10769:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"10769:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":967,"mutability":"mutable","name":"id","nameLocation":"10789:2:2","nodeType":"VariableDeclaration","scope":1014,"src":"10781:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":966,"name":"uint256","nodeType":"ElementaryTypeName","src":"10781:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":969,"mutability":"mutable","name":"value","nameLocation":"10801:5:2","nodeType":"VariableDeclaration","scope":1014,"src":"10793:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":968,"name":"uint256","nodeType":"ElementaryTypeName","src":"10793:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":971,"mutability":"mutable","name":"data","nameLocation":"10821:4:2","nodeType":"VariableDeclaration","scope":1014,"src":"10808:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":970,"name":"bytes","nodeType":"ElementaryTypeName","src":"10808:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10768:58:2"},"returnParameters":{"id":973,"nodeType":"ParameterList","parameters":[],"src":"10836:0:2"},"scope":1201,"src":"10754:346:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1054,"nodeType":"Block","src":"11638:175:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1028,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"11652:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11666:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11658:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"11658:7:2","typeDescriptions":{}}},"id":1032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11658:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11652:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1042,"nodeType":"IfStatement","src":"11648:88:2","trueBody":{"id":1041,"nodeType":"Block","src":"11670:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11722:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11714:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"11714:7:2","typeDescriptions":{}}},"id":1038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11714:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1034,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"11691:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11691:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1040,"nodeType":"RevertStatement","src":"11684:41:2"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11780:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11772:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"11772:7:2","typeDescriptions":{}}},"id":1047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11772:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1048,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"11784:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1049,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"11788:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1050,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"11793:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1051,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"11801:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1043,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"11745:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11745:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1053,"nodeType":"ExpressionStatement","src":"11745:61:2"}]},"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"11106:420:2","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":1055,"implemented":true,"kind":"function","modifiers":[],"name":"_mintBatch","nameLocation":"11540:10:2","nodeType":"FunctionDefinition","parameters":{"id":1026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"to","nameLocation":"11559:2:2","nodeType":"VariableDeclaration","scope":1055,"src":"11551:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"11551:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1020,"mutability":"mutable","name":"ids","nameLocation":"11580:3:2","nodeType":"VariableDeclaration","scope":1055,"src":"11563:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"11563:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1019,"nodeType":"ArrayTypeName","src":"11563:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1023,"mutability":"mutable","name":"values","nameLocation":"11602:6:2","nodeType":"VariableDeclaration","scope":1055,"src":"11585:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1021,"name":"uint256","nodeType":"ElementaryTypeName","src":"11585:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1022,"nodeType":"ArrayTypeName","src":"11585:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1025,"mutability":"mutable","name":"data","nameLocation":"11623:4:2","nodeType":"VariableDeclaration","scope":1055,"src":"11610:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1024,"name":"bytes","nodeType":"ElementaryTypeName","src":"11610:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11550:78:2"},"returnParameters":{"id":1027,"nodeType":"ParameterList","parameters":[],"src":"11638:0:2"},"scope":1201,"src":"11531:282:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1104,"nodeType":"Block","src":"12172:264:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1065,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"12186:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12202:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12194:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1066,"name":"address","nodeType":"ElementaryTypeName","src":"12194:7:2","typeDescriptions":{}}},"id":1069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12194:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12186:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1079,"nodeType":"IfStatement","src":"12182:88:2","trueBody":{"id":1078,"nodeType":"Block","src":"12206:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12256:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12248:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1072,"name":"address","nodeType":"ElementaryTypeName","src":"12248:7:2","typeDescriptions":{}}},"id":1075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12248:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1071,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"12227:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12227:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1077,"nodeType":"RevertStatement","src":"12220:39:2"}]}},{"assignments":[1084,1087],"declarations":[{"constant":false,"id":1084,"mutability":"mutable","name":"ids","nameLocation":"12297:3:2","nodeType":"VariableDeclaration","scope":1104,"src":"12280:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1082,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1083,"nodeType":"ArrayTypeName","src":"12280:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1087,"mutability":"mutable","name":"values","nameLocation":"12319:6:2","nodeType":"VariableDeclaration","scope":1104,"src":"12302:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1085,"name":"uint256","nodeType":"ElementaryTypeName","src":"12302:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1086,"nodeType":"ArrayTypeName","src":"12302:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1092,"initialValue":{"arguments":[{"id":1089,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"12348:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"12352:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1088,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"12329:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12329:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"12279:79:2"},{"expression":{"arguments":[{"id":1094,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"12395:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12409:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12401:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1095,"name":"address","nodeType":"ElementaryTypeName","src":"12401:7:2","typeDescriptions":{}}},"id":1098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12401:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1099,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"12413:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1100,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"12418:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12426:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1093,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"12368:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12368:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1103,"nodeType":"ExpressionStatement","src":"12368:61:2"}]},"documentation":{"id":1056,"nodeType":"StructuredDocumentation","src":"11819:283:2","text":" @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."},"id":1105,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"12116:5:2","nodeType":"FunctionDefinition","parameters":{"id":1063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1058,"mutability":"mutable","name":"from","nameLocation":"12130:4:2","nodeType":"VariableDeclaration","scope":1105,"src":"12122:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1057,"name":"address","nodeType":"ElementaryTypeName","src":"12122:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1060,"mutability":"mutable","name":"id","nameLocation":"12144:2:2","nodeType":"VariableDeclaration","scope":1105,"src":"12136:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1059,"name":"uint256","nodeType":"ElementaryTypeName","src":"12136:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1062,"mutability":"mutable","name":"value","nameLocation":"12156:5:2","nodeType":"VariableDeclaration","scope":1105,"src":"12148:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1061,"name":"uint256","nodeType":"ElementaryTypeName","src":"12148:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12121:41:2"},"returnParameters":{"id":1064,"nodeType":"ParameterList","parameters":[],"src":"12172:0:2"},"scope":1201,"src":"12107:329:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1143,"nodeType":"Block","src":"12882:175:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1117,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"12896:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12912:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12904:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1118,"name":"address","nodeType":"ElementaryTypeName","src":"12904:7:2","typeDescriptions":{}}},"id":1121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12904:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12896:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1131,"nodeType":"IfStatement","src":"12892:88:2","trueBody":{"id":1130,"nodeType":"Block","src":"12916:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12966:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12958:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1124,"name":"address","nodeType":"ElementaryTypeName","src":"12958:7:2","typeDescriptions":{}}},"id":1127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12958:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1123,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"12937:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12937:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1129,"nodeType":"RevertStatement","src":"12930:39:2"}]}},{"expression":{"arguments":[{"id":1133,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"13016:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13030:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13022:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1134,"name":"address","nodeType":"ElementaryTypeName","src":"13022:7:2","typeDescriptions":{}}},"id":1137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13022:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1138,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"13034:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1139,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"13039:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13047:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1132,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"12989:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1142,"nodeType":"ExpressionStatement","src":"12989:61:2"}]},"documentation":{"id":1106,"nodeType":"StructuredDocumentation","src":"12442:345:2","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."},"id":1144,"implemented":true,"kind":"function","modifiers":[],"name":"_burnBatch","nameLocation":"12801:10:2","nodeType":"FunctionDefinition","parameters":{"id":1115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1108,"mutability":"mutable","name":"from","nameLocation":"12820:4:2","nodeType":"VariableDeclaration","scope":1144,"src":"12812:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1107,"name":"address","nodeType":"ElementaryTypeName","src":"12812:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1111,"mutability":"mutable","name":"ids","nameLocation":"12843:3:2","nodeType":"VariableDeclaration","scope":1144,"src":"12826:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1109,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1110,"nodeType":"ArrayTypeName","src":"12826:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1114,"mutability":"mutable","name":"values","nameLocation":"12865:6:2","nodeType":"VariableDeclaration","scope":1144,"src":"12848:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1112,"name":"uint256","nodeType":"ElementaryTypeName","src":"12848:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1113,"nodeType":"ArrayTypeName","src":"12848:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12811:61:2"},"returnParameters":{"id":1116,"nodeType":"ParameterList","parameters":[],"src":"12882:0:2"},"scope":1201,"src":"12792:265:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1183,"nodeType":"Block","src":"13369:222:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1154,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"13383:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13403:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13395:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1155,"name":"address","nodeType":"ElementaryTypeName","src":"13395:7:2","typeDescriptions":{}}},"id":1158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13395:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13383:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1168,"nodeType":"IfStatement","src":"13379:94:2","trueBody":{"id":1167,"nodeType":"Block","src":"13407:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13459:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13451:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"13451:7:2","typeDescriptions":{}}},"id":1164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13451:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1160,"name":"ERC1155InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"13428:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13428:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1166,"nodeType":"RevertStatement","src":"13421:41:2"}]}},{"expression":{"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1169,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"13482:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1172,"indexExpression":{"id":1170,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"13501:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13482:25:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1173,"indexExpression":{"id":1171,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"13508:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13482:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1174,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"13520:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13482:46:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1176,"nodeType":"ExpressionStatement","src":"13482:46:2"},{"eventCall":{"arguments":[{"id":1178,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"13558:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1179,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"13565:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1180,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"13575:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1177,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"13543:14:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13543:41:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1182,"nodeType":"EmitStatement","src":"13538:46:2"}]},"documentation":{"id":1145,"nodeType":"StructuredDocumentation","src":"13063:208:2","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"id":1184,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"13285:18:2","nodeType":"FunctionDefinition","parameters":{"id":1152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1147,"mutability":"mutable","name":"owner","nameLocation":"13312:5:2","nodeType":"VariableDeclaration","scope":1184,"src":"13304:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1146,"name":"address","nodeType":"ElementaryTypeName","src":"13304:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1149,"mutability":"mutable","name":"operator","nameLocation":"13327:8:2","nodeType":"VariableDeclaration","scope":1184,"src":"13319:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1148,"name":"address","nodeType":"ElementaryTypeName","src":"13319:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1151,"mutability":"mutable","name":"approved","nameLocation":"13342:8:2","nodeType":"VariableDeclaration","scope":1184,"src":"13337:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1150,"name":"bool","nodeType":"ElementaryTypeName","src":"13337:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13303:48:2"},"returnParameters":{"id":1153,"nodeType":"ParameterList","parameters":[],"src":"13369:0:2"},"scope":1201,"src":"13276:315:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1199,"nodeType":"Block","src":"13865:664:2","statements":[{"AST":{"nativeSrc":"13900:623:2","nodeType":"YulBlock","src":"13900:623:2","statements":[{"nativeSrc":"13958:21:2","nodeType":"YulAssignment","src":"13958:21:2","value":{"arguments":[{"kind":"number","nativeSrc":"13974:4:2","nodeType":"YulLiteral","src":"13974:4:2","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"13968:5:2","nodeType":"YulIdentifier","src":"13968:5:2"},"nativeSrc":"13968:11:2","nodeType":"YulFunctionCall","src":"13968:11:2"},"variableNames":[{"name":"array1","nativeSrc":"13958:6:2","nodeType":"YulIdentifier","src":"13958:6:2"}]},{"expression":{"arguments":[{"name":"array1","nativeSrc":"14036:6:2","nodeType":"YulIdentifier","src":"14036:6:2"},{"kind":"number","nativeSrc":"14044:1:2","nodeType":"YulLiteral","src":"14044:1:2","type":"","value":"1"}],"functionName":{"name":"mstore","nativeSrc":"14029:6:2","nodeType":"YulIdentifier","src":"14029:6:2"},"nativeSrc":"14029:17:2","nodeType":"YulFunctionCall","src":"14029:17:2"},"nativeSrc":"14029:17:2","nodeType":"YulExpressionStatement","src":"14029:17:2"},{"expression":{"arguments":[{"arguments":[{"name":"array1","nativeSrc":"14167:6:2","nodeType":"YulIdentifier","src":"14167:6:2"},{"kind":"number","nativeSrc":"14175:4:2","nodeType":"YulLiteral","src":"14175:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14163:3:2","nodeType":"YulIdentifier","src":"14163:3:2"},"nativeSrc":"14163:17:2","nodeType":"YulFunctionCall","src":"14163:17:2"},{"name":"element1","nativeSrc":"14182:8:2","nodeType":"YulIdentifier","src":"14182:8:2"}],"functionName":{"name":"mstore","nativeSrc":"14156:6:2","nodeType":"YulIdentifier","src":"14156:6:2"},"nativeSrc":"14156:35:2","nodeType":"YulFunctionCall","src":"14156:35:2"},"nativeSrc":"14156:35:2","nodeType":"YulExpressionStatement","src":"14156:35:2"},{"nativeSrc":"14282:27:2","nodeType":"YulAssignment","src":"14282:27:2","value":{"arguments":[{"name":"array1","nativeSrc":"14296:6:2","nodeType":"YulIdentifier","src":"14296:6:2"},{"kind":"number","nativeSrc":"14304:4:2","nodeType":"YulLiteral","src":"14304:4:2","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"14292:3:2","nodeType":"YulIdentifier","src":"14292:3:2"},"nativeSrc":"14292:17:2","nodeType":"YulFunctionCall","src":"14292:17:2"},"variableNames":[{"name":"array2","nativeSrc":"14282:6:2","nodeType":"YulIdentifier","src":"14282:6:2"}]},{"expression":{"arguments":[{"name":"array2","nativeSrc":"14329:6:2","nodeType":"YulIdentifier","src":"14329:6:2"},{"kind":"number","nativeSrc":"14337:1:2","nodeType":"YulLiteral","src":"14337:1:2","type":"","value":"1"}],"functionName":{"name":"mstore","nativeSrc":"14322:6:2","nodeType":"YulIdentifier","src":"14322:6:2"},"nativeSrc":"14322:17:2","nodeType":"YulFunctionCall","src":"14322:17:2"},"nativeSrc":"14322:17:2","nodeType":"YulExpressionStatement","src":"14322:17:2"},{"expression":{"arguments":[{"arguments":[{"name":"array2","nativeSrc":"14363:6:2","nodeType":"YulIdentifier","src":"14363:6:2"},{"kind":"number","nativeSrc":"14371:4:2","nodeType":"YulLiteral","src":"14371:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14359:3:2","nodeType":"YulIdentifier","src":"14359:3:2"},"nativeSrc":"14359:17:2","nodeType":"YulFunctionCall","src":"14359:17:2"},{"name":"element2","nativeSrc":"14378:8:2","nodeType":"YulIdentifier","src":"14378:8:2"}],"functionName":{"name":"mstore","nativeSrc":"14352:6:2","nodeType":"YulIdentifier","src":"14352:6:2"},"nativeSrc":"14352:35:2","nodeType":"YulFunctionCall","src":"14352:35:2"},"nativeSrc":"14352:35:2","nodeType":"YulExpressionStatement","src":"14352:35:2"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14489:4:2","nodeType":"YulLiteral","src":"14489:4:2","type":"","value":"0x40"},{"arguments":[{"name":"array2","nativeSrc":"14499:6:2","nodeType":"YulIdentifier","src":"14499:6:2"},{"kind":"number","nativeSrc":"14507:4:2","nodeType":"YulLiteral","src":"14507:4:2","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"14495:3:2","nodeType":"YulIdentifier","src":"14495:3:2"},"nativeSrc":"14495:17:2","nodeType":"YulFunctionCall","src":"14495:17:2"}],"functionName":{"name":"mstore","nativeSrc":"14482:6:2","nodeType":"YulIdentifier","src":"14482:6:2"},"nativeSrc":"14482:31:2","nodeType":"YulFunctionCall","src":"14482:31:2"},"nativeSrc":"14482:31:2","nodeType":"YulExpressionStatement","src":"14482:31:2"}]},"evmVersion":"paris","externalReferences":[{"declaration":1193,"isOffset":false,"isSlot":false,"src":"13958:6:2","valueSize":1},{"declaration":1193,"isOffset":false,"isSlot":false,"src":"14036:6:2","valueSize":1},{"declaration":1193,"isOffset":false,"isSlot":false,"src":"14167:6:2","valueSize":1},{"declaration":1193,"isOffset":false,"isSlot":false,"src":"14296:6:2","valueSize":1},{"declaration":1196,"isOffset":false,"isSlot":false,"src":"14282:6:2","valueSize":1},{"declaration":1196,"isOffset":false,"isSlot":false,"src":"14329:6:2","valueSize":1},{"declaration":1196,"isOffset":false,"isSlot":false,"src":"14363:6:2","valueSize":1},{"declaration":1196,"isOffset":false,"isSlot":false,"src":"14499:6:2","valueSize":1},{"declaration":1187,"isOffset":false,"isSlot":false,"src":"14182:8:2","valueSize":1},{"declaration":1189,"isOffset":false,"isSlot":false,"src":"14378:8:2","valueSize":1}],"flags":["memory-safe"],"id":1198,"nodeType":"InlineAssembly","src":"13875:648:2"}]},"documentation":{"id":1185,"nodeType":"StructuredDocumentation","src":"13597:105:2","text":" @dev Creates an array in memory with only one value for each of the elements provided."},"id":1200,"implemented":true,"kind":"function","modifiers":[],"name":"_asSingletonArrays","nameLocation":"13716:18:2","nodeType":"FunctionDefinition","parameters":{"id":1190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1187,"mutability":"mutable","name":"element1","nameLocation":"13752:8:2","nodeType":"VariableDeclaration","scope":1200,"src":"13744:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1186,"name":"uint256","nodeType":"ElementaryTypeName","src":"13744:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1189,"mutability":"mutable","name":"element2","nameLocation":"13778:8:2","nodeType":"VariableDeclaration","scope":1200,"src":"13770:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1188,"name":"uint256","nodeType":"ElementaryTypeName","src":"13770:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13734:58:2"},"returnParameters":{"id":1197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1193,"mutability":"mutable","name":"array1","nameLocation":"13832:6:2","nodeType":"VariableDeclaration","scope":1200,"src":"13815:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1191,"name":"uint256","nodeType":"ElementaryTypeName","src":"13815:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1192,"nodeType":"ArrayTypeName","src":"13815:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1196,"mutability":"mutable","name":"array2","nameLocation":"13857:6:2","nodeType":"VariableDeclaration","scope":1200,"src":"13840:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1194,"name":"uint256","nodeType":"ElementaryTypeName","src":"13840:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1195,"nodeType":"ArrayTypeName","src":"13840:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"13814:50:2"},"scope":1201,"src":"13707:822:2","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1202,"src":"725:13806:2","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[1221,1236,1245,1252]}],"src":"109:14423:2"},"id":2},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[1324],"IERC165":[4096]},"id":1325,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1203,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"110:24:3"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1205,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1325,"sourceUnit":4097,"src":"136:62:3","symbolAliases":[{"foreign":{"id":1204,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4096,"src":"144:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1207,"name":"IERC165","nameLocations":["359:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":4096,"src":"359:7:3"},"id":1208,"nodeType":"InheritanceSpecifier","src":"359:7:3"}],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":1206,"nodeType":"StructuredDocumentation","src":"200:136:3","text":" @dev Required interface of an ERC-1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[ERC]."},"fullyImplemented":false,"id":1324,"linearizedBaseContracts":[1324,4096],"name":"IERC1155","nameLocation":"347:8:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1209,"nodeType":"StructuredDocumentation","src":"373:125:3","text":" @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":1221,"name":"TransferSingle","nameLocation":"509:14:3","nodeType":"EventDefinition","parameters":{"id":1220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1211,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"540:8:3","nodeType":"VariableDeclaration","scope":1221,"src":"524:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1210,"name":"address","nodeType":"ElementaryTypeName","src":"524:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1213,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"566:4:3","nodeType":"VariableDeclaration","scope":1221,"src":"550:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1212,"name":"address","nodeType":"ElementaryTypeName","src":"550:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1215,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"588:2:3","nodeType":"VariableDeclaration","scope":1221,"src":"572:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1214,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1217,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"600:2:3","nodeType":"VariableDeclaration","scope":1221,"src":"592:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1216,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1219,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"612:5:3","nodeType":"VariableDeclaration","scope":1221,"src":"604:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1218,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"523:95:3"},"src":"503:116:3"},{"anonymous":false,"documentation":{"id":1222,"nodeType":"StructuredDocumentation","src":"625:144:3","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":1236,"name":"TransferBatch","nameLocation":"780:13:3","nodeType":"EventDefinition","parameters":{"id":1235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1224,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"819:8:3","nodeType":"VariableDeclaration","scope":1236,"src":"803:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1223,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1226,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"853:4:3","nodeType":"VariableDeclaration","scope":1236,"src":"837:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1225,"name":"address","nodeType":"ElementaryTypeName","src":"837:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1228,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"883:2:3","nodeType":"VariableDeclaration","scope":1236,"src":"867:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1227,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1231,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"905:3:3","nodeType":"VariableDeclaration","scope":1236,"src":"895:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1229,"name":"uint256","nodeType":"ElementaryTypeName","src":"895:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1230,"nodeType":"ArrayTypeName","src":"895:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1234,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"928:6:3","nodeType":"VariableDeclaration","scope":1236,"src":"918:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1232,"name":"uint256","nodeType":"ElementaryTypeName","src":"918:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1233,"nodeType":"ArrayTypeName","src":"918:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"793:147:3"},"src":"774:167:3"},{"anonymous":false,"documentation":{"id":1237,"nodeType":"StructuredDocumentation","src":"947:147:3","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1245,"name":"ApprovalForAll","nameLocation":"1105:14:3","nodeType":"EventDefinition","parameters":{"id":1244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1239,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1136:7:3","nodeType":"VariableDeclaration","scope":1245,"src":"1120:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1238,"name":"address","nodeType":"ElementaryTypeName","src":"1120:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1241,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1161:8:3","nodeType":"VariableDeclaration","scope":1245,"src":"1145:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1240,"name":"address","nodeType":"ElementaryTypeName","src":"1145:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1243,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1176:8:3","nodeType":"VariableDeclaration","scope":1245,"src":"1171:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1242,"name":"bool","nodeType":"ElementaryTypeName","src":"1171:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1119:66:3"},"src":"1099:87:3"},{"anonymous":false,"documentation":{"id":1246,"nodeType":"StructuredDocumentation","src":"1192:343:3","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":1252,"name":"URI","nameLocation":"1546:3:3","nodeType":"EventDefinition","parameters":{"id":1251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1248,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1557:5:3","nodeType":"VariableDeclaration","scope":1252,"src":"1550:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1247,"name":"string","nodeType":"ElementaryTypeName","src":"1550:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1250,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1580:2:3","nodeType":"VariableDeclaration","scope":1252,"src":"1564:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1249,"name":"uint256","nodeType":"ElementaryTypeName","src":"1564:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:34:3"},"src":"1540:44:3"},{"documentation":{"id":1253,"nodeType":"StructuredDocumentation","src":"1590:90:3","text":" @dev Returns the value of tokens of token type `id` owned by `account`."},"functionSelector":"00fdd58e","id":1262,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1694:9:3","nodeType":"FunctionDefinition","parameters":{"id":1258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1255,"mutability":"mutable","name":"account","nameLocation":"1712:7:3","nodeType":"VariableDeclaration","scope":1262,"src":"1704:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1254,"name":"address","nodeType":"ElementaryTypeName","src":"1704:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1257,"mutability":"mutable","name":"id","nameLocation":"1729:2:3","nodeType":"VariableDeclaration","scope":1262,"src":"1721:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1256,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1703:29:3"},"returnParameters":{"id":1261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1262,"src":"1756:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1259,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1755:9:3"},"scope":1324,"src":"1685:80:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1263,"nodeType":"StructuredDocumentation","src":"1771:188:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":1275,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"1973:14:3","nodeType":"FunctionDefinition","parameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"accounts","nameLocation":"2016:8:3","nodeType":"VariableDeclaration","scope":1275,"src":"1997:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1264,"name":"address","nodeType":"ElementaryTypeName","src":"1997:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1265,"nodeType":"ArrayTypeName","src":"1997:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1269,"mutability":"mutable","name":"ids","nameLocation":"2053:3:3","nodeType":"VariableDeclaration","scope":1275,"src":"2034:22:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1267,"name":"uint256","nodeType":"ElementaryTypeName","src":"2034:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1268,"nodeType":"ArrayTypeName","src":"2034:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1987:75:3"},"returnParameters":{"id":1274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1275,"src":"2086:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1271,"name":"uint256","nodeType":"ElementaryTypeName","src":"2086:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1272,"nodeType":"ArrayTypeName","src":"2086:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2085:18:3"},"scope":1324,"src":"1964:140:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1276,"nodeType":"StructuredDocumentation","src":"2110:254:3","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"functionSelector":"a22cb465","id":1283,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2378:17:3","nodeType":"FunctionDefinition","parameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"operator","nameLocation":"2404:8:3","nodeType":"VariableDeclaration","scope":1283,"src":"2396:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1277,"name":"address","nodeType":"ElementaryTypeName","src":"2396:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1280,"mutability":"mutable","name":"approved","nameLocation":"2419:8:3","nodeType":"VariableDeclaration","scope":1283,"src":"2414:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1279,"name":"bool","nodeType":"ElementaryTypeName","src":"2414:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2395:33:3"},"returnParameters":{"id":1282,"nodeType":"ParameterList","parameters":[],"src":"2437:0:3"},"scope":1324,"src":"2369:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1284,"nodeType":"StructuredDocumentation","src":"2444:135:3","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":1293,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2593:16:3","nodeType":"FunctionDefinition","parameters":{"id":1289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"account","nameLocation":"2618:7:3","nodeType":"VariableDeclaration","scope":1293,"src":"2610:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1285,"name":"address","nodeType":"ElementaryTypeName","src":"2610:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1288,"mutability":"mutable","name":"operator","nameLocation":"2635:8:3","nodeType":"VariableDeclaration","scope":1293,"src":"2627:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1287,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2609:35:3"},"returnParameters":{"id":1292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1293,"src":"2668:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1290,"name":"bool","nodeType":"ElementaryTypeName","src":"2668:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2667:6:3"},"scope":1324,"src":"2584:90:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1294,"nodeType":"StructuredDocumentation","src":"2680:910:3","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":1307,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3604:16:3","nodeType":"FunctionDefinition","parameters":{"id":1305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1296,"mutability":"mutable","name":"from","nameLocation":"3629:4:3","nodeType":"VariableDeclaration","scope":1307,"src":"3621:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1295,"name":"address","nodeType":"ElementaryTypeName","src":"3621:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1298,"mutability":"mutable","name":"to","nameLocation":"3643:2:3","nodeType":"VariableDeclaration","scope":1307,"src":"3635:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1297,"name":"address","nodeType":"ElementaryTypeName","src":"3635:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1300,"mutability":"mutable","name":"id","nameLocation":"3655:2:3","nodeType":"VariableDeclaration","scope":1307,"src":"3647:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1299,"name":"uint256","nodeType":"ElementaryTypeName","src":"3647:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1302,"mutability":"mutable","name":"value","nameLocation":"3667:5:3","nodeType":"VariableDeclaration","scope":1307,"src":"3659:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1301,"name":"uint256","nodeType":"ElementaryTypeName","src":"3659:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1304,"mutability":"mutable","name":"data","nameLocation":"3689:4:3","nodeType":"VariableDeclaration","scope":1307,"src":"3674:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1303,"name":"bytes","nodeType":"ElementaryTypeName","src":"3674:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3620:74:3"},"returnParameters":{"id":1306,"nodeType":"ParameterList","parameters":[],"src":"3703:0:3"},"scope":1324,"src":"3595:109:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1308,"nodeType":"StructuredDocumentation","src":"3710:814:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":1323,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4538:21:3","nodeType":"FunctionDefinition","parameters":{"id":1321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"from","nameLocation":"4577:4:3","nodeType":"VariableDeclaration","scope":1323,"src":"4569:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1309,"name":"address","nodeType":"ElementaryTypeName","src":"4569:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1312,"mutability":"mutable","name":"to","nameLocation":"4599:2:3","nodeType":"VariableDeclaration","scope":1323,"src":"4591:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1311,"name":"address","nodeType":"ElementaryTypeName","src":"4591:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1315,"mutability":"mutable","name":"ids","nameLocation":"4630:3:3","nodeType":"VariableDeclaration","scope":1323,"src":"4611:22:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1313,"name":"uint256","nodeType":"ElementaryTypeName","src":"4611:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1314,"nodeType":"ArrayTypeName","src":"4611:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1318,"mutability":"mutable","name":"values","nameLocation":"4662:6:3","nodeType":"VariableDeclaration","scope":1323,"src":"4643:25:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1316,"name":"uint256","nodeType":"ElementaryTypeName","src":"4643:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1317,"nodeType":"ArrayTypeName","src":"4643:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1320,"mutability":"mutable","name":"data","nameLocation":"4693:4:3","nodeType":"VariableDeclaration","scope":1323,"src":"4678:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1319,"name":"bytes","nodeType":"ElementaryTypeName","src":"4678:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4559:144:3"},"returnParameters":{"id":1322,"nodeType":"ParameterList","parameters":[],"src":"4712:0:3"},"scope":1324,"src":"4529:184:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1325,"src":"337:4378:3","usedErrors":[],"usedEvents":[1221,1236,1245,1252]}],"src":"110:4606:3"},"id":3},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[1366],"IERC165":[4096]},"id":1367,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1326,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:4"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1328,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1367,"sourceUnit":4097,"src":"144:62:4","symbolAliases":[{"foreign":{"id":1327,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4096,"src":"152:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1330,"name":"IERC165","nameLocations":["357:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":4096,"src":"357:7:4"},"id":1331,"nodeType":"InheritanceSpecifier","src":"357:7:4"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1329,"nodeType":"StructuredDocumentation","src":"208:118:4","text":" @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."},"fullyImplemented":false,"id":1366,"linearizedBaseContracts":[1366,4096],"name":"IERC1155Receiver","nameLocation":"337:16:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1332,"nodeType":"StructuredDocumentation","src":"371:827:4","text":" @dev Handles the receipt of a single ERC-1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":1347,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1212:17:4","nodeType":"FunctionDefinition","parameters":{"id":1343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1334,"mutability":"mutable","name":"operator","nameLocation":"1247:8:4","nodeType":"VariableDeclaration","scope":1347,"src":"1239:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1333,"name":"address","nodeType":"ElementaryTypeName","src":"1239:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1336,"mutability":"mutable","name":"from","nameLocation":"1273:4:4","nodeType":"VariableDeclaration","scope":1347,"src":"1265:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1335,"name":"address","nodeType":"ElementaryTypeName","src":"1265:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1338,"mutability":"mutable","name":"id","nameLocation":"1295:2:4","nodeType":"VariableDeclaration","scope":1347,"src":"1287:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1337,"name":"uint256","nodeType":"ElementaryTypeName","src":"1287:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1340,"mutability":"mutable","name":"value","nameLocation":"1315:5:4","nodeType":"VariableDeclaration","scope":1347,"src":"1307:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1339,"name":"uint256","nodeType":"ElementaryTypeName","src":"1307:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1342,"mutability":"mutable","name":"data","nameLocation":"1345:4:4","nodeType":"VariableDeclaration","scope":1347,"src":"1330:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1341,"name":"bytes","nodeType":"ElementaryTypeName","src":"1330:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1229:126:4"},"returnParameters":{"id":1346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1347,"src":"1374:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1344,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1374:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1373:8:4"},"scope":1366,"src":"1203:179:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1348,"nodeType":"StructuredDocumentation","src":"1388:995:4","text":" @dev Handles the receipt of a multiple ERC-1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":1365,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2397:22:4","nodeType":"FunctionDefinition","parameters":{"id":1361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"mutability":"mutable","name":"operator","nameLocation":"2437:8:4","nodeType":"VariableDeclaration","scope":1365,"src":"2429:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1349,"name":"address","nodeType":"ElementaryTypeName","src":"2429:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1352,"mutability":"mutable","name":"from","nameLocation":"2463:4:4","nodeType":"VariableDeclaration","scope":1365,"src":"2455:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1351,"name":"address","nodeType":"ElementaryTypeName","src":"2455:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1355,"mutability":"mutable","name":"ids","nameLocation":"2496:3:4","nodeType":"VariableDeclaration","scope":1365,"src":"2477:22:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1353,"name":"uint256","nodeType":"ElementaryTypeName","src":"2477:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1354,"nodeType":"ArrayTypeName","src":"2477:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1358,"mutability":"mutable","name":"values","nameLocation":"2528:6:4","nodeType":"VariableDeclaration","scope":1365,"src":"2509:25:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1356,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1357,"nodeType":"ArrayTypeName","src":"2509:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1360,"mutability":"mutable","name":"data","nameLocation":"2559:4:4","nodeType":"VariableDeclaration","scope":1365,"src":"2544:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1359,"name":"bytes","nodeType":"ElementaryTypeName","src":"2544:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2419:150:4"},"returnParameters":{"id":1364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1365,"src":"2588:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1362,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2588:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2587:8:4"},"scope":1366,"src":"2388:208:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1367,"src":"327:2271:4","usedErrors":[],"usedEvents":[]}],"src":"118:2481:4"},"id":4},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","exportedSymbols":{"IERC1155":[1324],"IERC1155MetadataURI":[1382]},"id":1383,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1368,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"132:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"../IERC1155.sol","id":1370,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1383,"sourceUnit":1325,"src":"158:41:5","symbolAliases":[{"foreign":{"id":1369,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"166:8:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1372,"name":"IERC1155","nameLocations":["399:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":1324,"src":"399:8:5"},"id":1373,"nodeType":"InheritanceSpecifier","src":"399:8:5"}],"canonicalName":"IERC1155MetadataURI","contractDependencies":[],"contractKind":"interface","documentation":{"id":1371,"nodeType":"StructuredDocumentation","src":"201:164:5","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC]."},"fullyImplemented":false,"id":1382,"linearizedBaseContracts":[1382,1324,4096],"name":"IERC1155MetadataURI","nameLocation":"376:19:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1374,"nodeType":"StructuredDocumentation","src":"414:192:5","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","id":1381,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"620:3:5","nodeType":"FunctionDefinition","parameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1376,"mutability":"mutable","name":"id","nameLocation":"632:2:5","nodeType":"VariableDeclaration","scope":1381,"src":"624:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1375,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"623:12:5"},"returnParameters":{"id":1380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1381,"src":"659:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1378,"name":"string","nodeType":"ElementaryTypeName","src":"659:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"658:15:5"},"scope":1382,"src":"611:63:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1383,"src":"366:310:5","usedErrors":[],"usedEvents":[1221,1236,1245,1252]}],"src":"132:545:5"},"id":5},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","exportedSymbols":{"ERC1155Utils":[1536],"IERC1155Errors":[284],"IERC1155Receiver":[1366]},"id":1537,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1384,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"120:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"../IERC1155Receiver.sol","id":1386,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1537,"sourceUnit":1367,"src":"146:57:6","symbolAliases":[{"foreign":{"id":1385,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"154:16:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":1388,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1537,"sourceUnit":285,"src":"204:70:6","symbolAliases":[{"foreign":{"id":1387,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"212:14:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1155Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1389,"nodeType":"StructuredDocumentation","src":"276:162:6","text":" @dev Library that provide common ERC-1155 utility functions.\n See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n _Available since v5.1._"},"fullyImplemented":true,"id":1536,"linearizedBaseContracts":[1536],"name":"ERC1155Utils","nameLocation":"447:12:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1460,"nodeType":"Block","src":"1183:774:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1405,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"1197:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1200:4:6","memberName":"code","nodeType":"MemberAccess","src":"1197:7:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1205:6:6","memberName":"length","nodeType":"MemberAccess","src":"1197:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1214:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1197:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1459,"nodeType":"IfStatement","src":"1193:758:6","trueBody":{"id":1458,"nodeType":"Block","src":"1217:734:6","statements":[{"clauses":[{"block":{"id":1436,"nodeType":"Block","src":"1333:221:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1423,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"1355:8:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1424,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"1367:16:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1366_$","typeString":"type(contract IERC1155Receiver)"}},"id":1425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1384:17:6","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1347,"src":"1367:34:6","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":1426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1402:8:6","memberName":"selector","nodeType":"MemberAccess","src":"1367:43:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1355:55:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1435,"nodeType":"IfStatement","src":"1351:189:6","trueBody":{"id":1434,"nodeType":"Block","src":"1412:128:6","statements":[{"errorCall":{"arguments":[{"id":1431,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"1518:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1428,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"1480:14:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$284_$","typeString":"type(contract IERC1155Errors)"}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1495:22:6","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":259,"src":"1480:37:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1480:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1433,"nodeType":"RevertStatement","src":"1473:48:6"}]}}]},"errorName":"","id":1437,"nodeType":"TryCatchClause","parameters":{"id":1422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1421,"mutability":"mutable","name":"response","nameLocation":"1323:8:6","nodeType":"VariableDeclaration","scope":1437,"src":"1316:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1420,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1316:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1315:17:6"},"src":"1307:247:6"},{"block":{"id":1455,"nodeType":"Block","src":"1583:358:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1441,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"1605:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1612:6:6","memberName":"length","nodeType":"MemberAccess","src":"1605:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1622:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1605:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1453,"nodeType":"Block","src":"1776:151:6","statements":[{"AST":{"nativeSrc":"1823:86:6","nodeType":"YulBlock","src":"1823:86:6","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1860:2:6","nodeType":"YulLiteral","src":"1860:2:6","type":"","value":"32"},{"name":"reason","nativeSrc":"1864:6:6","nodeType":"YulIdentifier","src":"1864:6:6"}],"functionName":{"name":"add","nativeSrc":"1856:3:6","nodeType":"YulIdentifier","src":"1856:3:6"},"nativeSrc":"1856:15:6","nodeType":"YulFunctionCall","src":"1856:15:6"},{"arguments":[{"name":"reason","nativeSrc":"1879:6:6","nodeType":"YulIdentifier","src":"1879:6:6"}],"functionName":{"name":"mload","nativeSrc":"1873:5:6","nodeType":"YulIdentifier","src":"1873:5:6"},"nativeSrc":"1873:13:6","nodeType":"YulFunctionCall","src":"1873:13:6"}],"functionName":{"name":"revert","nativeSrc":"1849:6:6","nodeType":"YulIdentifier","src":"1849:6:6"},"nativeSrc":"1849:38:6","nodeType":"YulFunctionCall","src":"1849:38:6"},"nativeSrc":"1849:38:6","nodeType":"YulExpressionStatement","src":"1849:38:6"}]},"evmVersion":"paris","externalReferences":[{"declaration":1439,"isOffset":false,"isSlot":false,"src":"1864:6:6","valueSize":1},{"declaration":1439,"isOffset":false,"isSlot":false,"src":"1879:6:6","valueSize":1}],"flags":["memory-safe"],"id":1452,"nodeType":"InlineAssembly","src":"1798:111:6"}]},"id":1454,"nodeType":"IfStatement","src":"1601:326:6","trueBody":{"id":1451,"nodeType":"Block","src":"1625:145:6","statements":[{"errorCall":{"arguments":[{"id":1448,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"1748:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1445,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"1710:14:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$284_$","typeString":"type(contract IERC1155Errors)"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1725:22:6","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":259,"src":"1710:37:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1710:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1450,"nodeType":"RevertStatement","src":"1703:48:6"}]}}]},"errorName":"","id":1456,"nodeType":"TryCatchClause","parameters":{"id":1440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1439,"mutability":"mutable","name":"reason","nameLocation":"1575:6:6","nodeType":"VariableDeclaration","scope":1456,"src":"1562:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1438,"name":"bytes","nodeType":"ElementaryTypeName","src":"1562:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1561:21:6"},"src":"1555:386:6"}],"externalCall":{"arguments":[{"id":1414,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"1274:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1415,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"1284:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1416,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"1290:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"1294:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1418,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"1301:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1411,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"1252:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1410,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"1235:16:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1366_$","typeString":"type(contract IERC1155Receiver)"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1235:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1366","typeString":"contract IERC1155Receiver"}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1256:17:6","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1347,"src":"1235:38:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1235:71:6","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1457,"nodeType":"TryStatement","src":"1231:710:6"}]}}]},"documentation":{"id":1390,"nodeType":"StructuredDocumentation","src":"466:527:6","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC1155-onERC1155Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":1461,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155Received","nameLocation":"1007:22:6","nodeType":"FunctionDefinition","parameters":{"id":1403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1392,"mutability":"mutable","name":"operator","nameLocation":"1047:8:6","nodeType":"VariableDeclaration","scope":1461,"src":"1039:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1391,"name":"address","nodeType":"ElementaryTypeName","src":"1039:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1394,"mutability":"mutable","name":"from","nameLocation":"1073:4:6","nodeType":"VariableDeclaration","scope":1461,"src":"1065:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1393,"name":"address","nodeType":"ElementaryTypeName","src":"1065:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1396,"mutability":"mutable","name":"to","nameLocation":"1095:2:6","nodeType":"VariableDeclaration","scope":1461,"src":"1087:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1395,"name":"address","nodeType":"ElementaryTypeName","src":"1087:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1398,"mutability":"mutable","name":"id","nameLocation":"1115:2:6","nodeType":"VariableDeclaration","scope":1461,"src":"1107:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"1107:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1400,"mutability":"mutable","name":"value","nameLocation":"1135:5:6","nodeType":"VariableDeclaration","scope":1461,"src":"1127:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1399,"name":"uint256","nodeType":"ElementaryTypeName","src":"1127:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1402,"mutability":"mutable","name":"data","nameLocation":"1163:4:6","nodeType":"VariableDeclaration","scope":1461,"src":"1150:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1401,"name":"bytes","nodeType":"ElementaryTypeName","src":"1150:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1029:144:6"},"returnParameters":{"id":1404,"nodeType":"ParameterList","parameters":[],"src":"1183:0:6"},"scope":1536,"src":"998:959:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1534,"nodeType":"Block","src":"2715:816:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1479,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"2729:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2732:4:6","memberName":"code","nodeType":"MemberAccess","src":"2729:7:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2737:6:6","memberName":"length","nodeType":"MemberAccess","src":"2729:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2746:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2729:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1533,"nodeType":"IfStatement","src":"2725:800:6","trueBody":{"id":1532,"nodeType":"Block","src":"2749:776:6","statements":[{"clauses":[{"block":{"id":1510,"nodeType":"Block","src":"2902:226:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1497,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"2924:8:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1498,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"2936:16:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1366_$","typeString":"type(contract IERC1155Receiver)"}},"id":1499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2953:22:6","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1365,"src":"2936:39:6","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2976:8:6","memberName":"selector","nodeType":"MemberAccess","src":"2936:48:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2924:60:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1509,"nodeType":"IfStatement","src":"2920:194:6","trueBody":{"id":1508,"nodeType":"Block","src":"2986:128:6","statements":[{"errorCall":{"arguments":[{"id":1505,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"3092:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1502,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"3054:14:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$284_$","typeString":"type(contract IERC1155Errors)"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3069:22:6","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":259,"src":"3054:37:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3054:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1507,"nodeType":"RevertStatement","src":"3047:48:6"}]}}]},"errorName":"","id":1511,"nodeType":"TryCatchClause","parameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1495,"mutability":"mutable","name":"response","nameLocation":"2879:8:6","nodeType":"VariableDeclaration","scope":1511,"src":"2872:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1494,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2872:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2854:47:6"},"src":"2846:282:6"},{"block":{"id":1529,"nodeType":"Block","src":"3157:358:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1515,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"3179:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3186:6:6","memberName":"length","nodeType":"MemberAccess","src":"3179:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3196:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3179:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1527,"nodeType":"Block","src":"3350:151:6","statements":[{"AST":{"nativeSrc":"3397:86:6","nodeType":"YulBlock","src":"3397:86:6","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3434:2:6","nodeType":"YulLiteral","src":"3434:2:6","type":"","value":"32"},{"name":"reason","nativeSrc":"3438:6:6","nodeType":"YulIdentifier","src":"3438:6:6"}],"functionName":{"name":"add","nativeSrc":"3430:3:6","nodeType":"YulIdentifier","src":"3430:3:6"},"nativeSrc":"3430:15:6","nodeType":"YulFunctionCall","src":"3430:15:6"},{"arguments":[{"name":"reason","nativeSrc":"3453:6:6","nodeType":"YulIdentifier","src":"3453:6:6"}],"functionName":{"name":"mload","nativeSrc":"3447:5:6","nodeType":"YulIdentifier","src":"3447:5:6"},"nativeSrc":"3447:13:6","nodeType":"YulFunctionCall","src":"3447:13:6"}],"functionName":{"name":"revert","nativeSrc":"3423:6:6","nodeType":"YulIdentifier","src":"3423:6:6"},"nativeSrc":"3423:38:6","nodeType":"YulFunctionCall","src":"3423:38:6"},"nativeSrc":"3423:38:6","nodeType":"YulExpressionStatement","src":"3423:38:6"}]},"evmVersion":"paris","externalReferences":[{"declaration":1513,"isOffset":false,"isSlot":false,"src":"3438:6:6","valueSize":1},{"declaration":1513,"isOffset":false,"isSlot":false,"src":"3453:6:6","valueSize":1}],"flags":["memory-safe"],"id":1526,"nodeType":"InlineAssembly","src":"3372:111:6"}]},"id":1528,"nodeType":"IfStatement","src":"3175:326:6","trueBody":{"id":1525,"nodeType":"Block","src":"3199:145:6","statements":[{"errorCall":{"arguments":[{"id":1522,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"3322:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1519,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"3284:14:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$284_$","typeString":"type(contract IERC1155Errors)"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3299:22:6","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":259,"src":"3284:37:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1524,"nodeType":"RevertStatement","src":"3277:48:6"}]}}]},"errorName":"","id":1530,"nodeType":"TryCatchClause","parameters":{"id":1514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1513,"mutability":"mutable","name":"reason","nameLocation":"3149:6:6","nodeType":"VariableDeclaration","scope":1530,"src":"3136:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1512,"name":"bytes","nodeType":"ElementaryTypeName","src":"3136:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3135:21:6"},"src":"3129:386:6"}],"externalCall":{"arguments":[{"id":1488,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"2811:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1489,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"2821:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1490,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"2827:3:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1491,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"2832:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1492,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"2840:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1485,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"2784:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1484,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"2767:16:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1366_$","typeString":"type(contract IERC1155Receiver)"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2767:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1366","typeString":"contract IERC1155Receiver"}},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2788:22:6","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1365,"src":"2767:43:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2767:78:6","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1531,"nodeType":"TryStatement","src":"2763:752:6"}]}}]},"documentation":{"id":1462,"nodeType":"StructuredDocumentation","src":"1963:537:6","text":" @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155-onERC1155BatchReceived}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":1535,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155BatchReceived","nameLocation":"2514:27:6","nodeType":"FunctionDefinition","parameters":{"id":1477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1464,"mutability":"mutable","name":"operator","nameLocation":"2559:8:6","nodeType":"VariableDeclaration","scope":1535,"src":"2551:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1463,"name":"address","nodeType":"ElementaryTypeName","src":"2551:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1466,"mutability":"mutable","name":"from","nameLocation":"2585:4:6","nodeType":"VariableDeclaration","scope":1535,"src":"2577:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1465,"name":"address","nodeType":"ElementaryTypeName","src":"2577:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1468,"mutability":"mutable","name":"to","nameLocation":"2607:2:6","nodeType":"VariableDeclaration","scope":1535,"src":"2599:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1467,"name":"address","nodeType":"ElementaryTypeName","src":"2599:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1471,"mutability":"mutable","name":"ids","nameLocation":"2636:3:6","nodeType":"VariableDeclaration","scope":1535,"src":"2619:20:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1469,"name":"uint256","nodeType":"ElementaryTypeName","src":"2619:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1470,"nodeType":"ArrayTypeName","src":"2619:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1474,"mutability":"mutable","name":"values","nameLocation":"2666:6:6","nodeType":"VariableDeclaration","scope":1535,"src":"2649:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1472,"name":"uint256","nodeType":"ElementaryTypeName","src":"2649:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1473,"nodeType":"ArrayTypeName","src":"2649:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1476,"mutability":"mutable","name":"data","nameLocation":"2695:4:6","nodeType":"VariableDeclaration","scope":1535,"src":"2682:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1475,"name":"bytes","nodeType":"ElementaryTypeName","src":"2682:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2541:164:6"},"returnParameters":{"id":1478,"nodeType":"ParameterList","parameters":[],"src":"2715:0:6"},"scope":1536,"src":"2505:1026:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1537,"src":"439:3094:6","usedErrors":[],"usedEvents":[]}],"src":"120:3414:6"},"id":6},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1614]},"id":1615,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1538,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1539,"nodeType":"StructuredDocumentation","src":"132:71:7","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":1614,"linearizedBaseContracts":[1614],"name":"IERC20","nameLocation":"214:6:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1540,"nodeType":"StructuredDocumentation","src":"227:158:7","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1548,"name":"Transfer","nameLocation":"396:8:7","nodeType":"EventDefinition","parameters":{"id":1547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1542,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:7","nodeType":"VariableDeclaration","scope":1548,"src":"405:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1541,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1544,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:7","nodeType":"VariableDeclaration","scope":1548,"src":"427:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1543,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1546,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:7","nodeType":"VariableDeclaration","scope":1548,"src":"447:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1545,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:7"},"src":"390:72:7"},{"anonymous":false,"documentation":{"id":1549,"nodeType":"StructuredDocumentation","src":"468:148:7","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1557,"name":"Approval","nameLocation":"627:8:7","nodeType":"EventDefinition","parameters":{"id":1556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1551,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:7","nodeType":"VariableDeclaration","scope":1557,"src":"636:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1550,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1553,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:7","nodeType":"VariableDeclaration","scope":1557,"src":"659:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1552,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1555,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:7","nodeType":"VariableDeclaration","scope":1557,"src":"684:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1554,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:7"},"src":"621:78:7"},{"documentation":{"id":1558,"nodeType":"StructuredDocumentation","src":"705:65:7","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1563,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:7","nodeType":"FunctionDefinition","parameters":{"id":1559,"nodeType":"ParameterList","parameters":[],"src":"795:2:7"},"returnParameters":{"id":1562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1563,"src":"821:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1560,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:7"},"scope":1614,"src":"775:55:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1564,"nodeType":"StructuredDocumentation","src":"836:71:7","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1571,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:7","nodeType":"FunctionDefinition","parameters":{"id":1567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1566,"mutability":"mutable","name":"account","nameLocation":"939:7:7","nodeType":"VariableDeclaration","scope":1571,"src":"931:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1565,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:7"},"returnParameters":{"id":1570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1571,"src":"971:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1568,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:7"},"scope":1614,"src":"912:68:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1572,"nodeType":"StructuredDocumentation","src":"986:213:7","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1581,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:7","nodeType":"FunctionDefinition","parameters":{"id":1577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1574,"mutability":"mutable","name":"to","nameLocation":"1230:2:7","nodeType":"VariableDeclaration","scope":1581,"src":"1222:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1573,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1576,"mutability":"mutable","name":"value","nameLocation":"1242:5:7","nodeType":"VariableDeclaration","scope":1581,"src":"1234:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1575,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:7"},"returnParameters":{"id":1580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1581,"src":"1267:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1578,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:7"},"scope":1614,"src":"1204:69:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1582,"nodeType":"StructuredDocumentation","src":"1279:264:7","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1591,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:7","nodeType":"FunctionDefinition","parameters":{"id":1587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1584,"mutability":"mutable","name":"owner","nameLocation":"1575:5:7","nodeType":"VariableDeclaration","scope":1591,"src":"1567:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1583,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1586,"mutability":"mutable","name":"spender","nameLocation":"1590:7:7","nodeType":"VariableDeclaration","scope":1591,"src":"1582:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1585,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:7"},"returnParameters":{"id":1590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1591,"src":"1622:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1588,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:7"},"scope":1614,"src":"1548:83:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1592,"nodeType":"StructuredDocumentation","src":"1637:667:7","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1601,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:7","nodeType":"FunctionDefinition","parameters":{"id":1597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1594,"mutability":"mutable","name":"spender","nameLocation":"2334:7:7","nodeType":"VariableDeclaration","scope":1601,"src":"2326:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1593,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1596,"mutability":"mutable","name":"value","nameLocation":"2351:5:7","nodeType":"VariableDeclaration","scope":1601,"src":"2343:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1595,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:7"},"returnParameters":{"id":1600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1601,"src":"2376:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1598,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:7"},"scope":1614,"src":"2309:73:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1602,"nodeType":"StructuredDocumentation","src":"2388:297:7","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1613,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:7","nodeType":"FunctionDefinition","parameters":{"id":1609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1604,"mutability":"mutable","name":"from","nameLocation":"2720:4:7","nodeType":"VariableDeclaration","scope":1613,"src":"2712:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1603,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1606,"mutability":"mutable","name":"to","nameLocation":"2734:2:7","nodeType":"VariableDeclaration","scope":1613,"src":"2726:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1605,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1608,"mutability":"mutable","name":"value","nameLocation":"2746:5:7","nodeType":"VariableDeclaration","scope":1613,"src":"2738:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1607,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:7"},"returnParameters":{"id":1612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1613,"src":"2771:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1610,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:7"},"scope":1614,"src":"2690:87:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1615,"src":"204:2575:7","usedErrors":[],"usedEvents":[1548,1557]}],"src":"106:2674:7"},"id":7},"@openzeppelin/contracts/utils/Arrays.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","exportedSymbols":{"Arrays":[2492],"Comparators":[2524],"Math":[5702],"SlotDerivation":[2736],"StorageSlot":[2860]},"id":2493,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1616,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"183:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","file":"./Comparators.sol","id":1618,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2493,"sourceUnit":2525,"src":"209:46:8","symbolAliases":[{"foreign":{"id":1617,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"217:11:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","file":"./SlotDerivation.sol","id":1620,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2493,"sourceUnit":2737,"src":"256:52:8","symbolAliases":[{"foreign":{"id":1619,"name":"SlotDerivation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"264:14:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1622,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2493,"sourceUnit":2861,"src":"309:46:8","symbolAliases":[{"foreign":{"id":1621,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"317:11:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1624,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2493,"sourceUnit":5703,"src":"356:37:8","symbolAliases":[{"foreign":{"id":1623,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"364:4:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Arrays","contractDependencies":[],"contractKind":"library","documentation":{"id":1625,"nodeType":"StructuredDocumentation","src":"395:63:8","text":" @dev Collection of functions related to array types."},"fullyImplemented":true,"id":2492,"linearizedBaseContracts":[2492],"name":"Arrays","nameLocation":"467:6:8","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1628,"libraryName":{"id":1626,"name":"SlotDerivation","nameLocations":["486:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":2736,"src":"486:14:8"},"nodeType":"UsingForDirective","src":"480:33:8","typeName":{"id":1627,"name":"bytes32","nodeType":"ElementaryTypeName","src":"505:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":1631,"libraryName":{"id":1629,"name":"StorageSlot","nameLocations":["524:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":2860,"src":"524:11:8"},"nodeType":"UsingForDirective","src":"518:30:8","typeName":{"id":1630,"name":"bytes32","nodeType":"ElementaryTypeName","src":"540:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":1663,"nodeType":"Block","src":"1628:83:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1653,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"1656:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1652,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"1649:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1649:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1656,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"1669:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1655,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"1664:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1658,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"1677:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1651,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"1638:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1638:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1660,"nodeType":"ExpressionStatement","src":"1638:44:8"},{"expression":{"id":1661,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"1699:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1650,"id":1662,"nodeType":"Return","src":"1692:12:8"}]},"documentation":{"id":1632,"nodeType":"StructuredDocumentation","src":"554:915:8","text":" @dev Sort an array of uint256 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":1664,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1483:4:8","nodeType":"FunctionDefinition","parameters":{"id":1646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1635,"mutability":"mutable","name":"array","nameLocation":"1514:5:8","nodeType":"VariableDeclaration","scope":1664,"src":"1497:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1633,"name":"uint256","nodeType":"ElementaryTypeName","src":"1497:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1634,"nodeType":"ArrayTypeName","src":"1497:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1645,"mutability":"mutable","name":"comp","nameLocation":"1576:4:8","nodeType":"VariableDeclaration","scope":1664,"src":"1529:51:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":1644,"nodeType":"FunctionTypeName","parameterTypes":{"id":1640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1644,"src":"1538:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1636,"name":"uint256","nodeType":"ElementaryTypeName","src":"1538:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1644,"src":"1547:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1638,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1537:18:8"},"returnParameterTypes":{"id":1643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1642,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1644,"src":"1570:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1641,"name":"bool","nodeType":"ElementaryTypeName","src":"1570:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1569:6:8"},"src":"1529:51:8","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"1487:99:8"},"returnParameters":{"id":1650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1664,"src":"1610:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1647,"name":"uint256","nodeType":"ElementaryTypeName","src":"1610:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1648,"nodeType":"ArrayTypeName","src":"1610:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1609:18:8"},"scope":2492,"src":"1474:237:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1682,"nodeType":"Block","src":"1894:66:8","statements":[{"expression":{"arguments":[{"id":1675,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"1909:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":1676,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"1916:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$2524_$","typeString":"type(library Comparators)"}},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1928:2:8","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":2509,"src":"1916:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1674,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[1664,1683,1715,1736,1768,1789],"referencedDeclaration":1664,"src":"1904:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1904:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1679,"nodeType":"ExpressionStatement","src":"1904:27:8"},{"expression":{"id":1680,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"1948:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1673,"id":1681,"nodeType":"Return","src":"1941:12:8"}]},"documentation":{"id":1665,"nodeType":"StructuredDocumentation","src":"1717:93:8","text":" @dev Variant of {sort} that sorts an array of uint256 in increasing order."},"id":1683,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1824:4:8","nodeType":"FunctionDefinition","parameters":{"id":1669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1668,"mutability":"mutable","name":"array","nameLocation":"1846:5:8","nodeType":"VariableDeclaration","scope":1683,"src":"1829:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1666,"name":"uint256","nodeType":"ElementaryTypeName","src":"1829:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1667,"nodeType":"ArrayTypeName","src":"1829:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1828:24:8"},"returnParameters":{"id":1673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1683,"src":"1876:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1670,"name":"uint256","nodeType":"ElementaryTypeName","src":"1876:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1671,"nodeType":"ArrayTypeName","src":"1876:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1875:18:8"},"scope":2492,"src":"1815:145:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1714,"nodeType":"Block","src":"3040:97:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1705,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"3075:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":1704,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[1940,1952],"referencedDeclaration":1940,"src":"3055:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3055:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":1708,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"3102:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}],"id":1707,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[1978,2004],"referencedDeclaration":1978,"src":"3083:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (address,address) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1703,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[1664,1683,1715,1736,1768,1789],"referencedDeclaration":1664,"src":"3050:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3050:58:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1711,"nodeType":"ExpressionStatement","src":"3050:58:8"},{"expression":{"id":1712,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"3125:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":1702,"id":1713,"nodeType":"Return","src":"3118:12:8"}]},"documentation":{"id":1684,"nodeType":"StructuredDocumentation","src":"1966:915:8","text":" @dev Sort an array of address (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":1715,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"2895:4:8","nodeType":"FunctionDefinition","parameters":{"id":1698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1687,"mutability":"mutable","name":"array","nameLocation":"2926:5:8","nodeType":"VariableDeclaration","scope":1715,"src":"2909:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1685,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1686,"nodeType":"ArrayTypeName","src":"2909:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1697,"mutability":"mutable","name":"comp","nameLocation":"2988:4:8","nodeType":"VariableDeclaration","scope":1715,"src":"2941:51:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":1696,"nodeType":"FunctionTypeName","parameterTypes":{"id":1692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1696,"src":"2950:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1688,"name":"address","nodeType":"ElementaryTypeName","src":"2950:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1696,"src":"2959:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1690,"name":"address","nodeType":"ElementaryTypeName","src":"2959:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2949:18:8"},"returnParameterTypes":{"id":1695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1696,"src":"2982:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1693,"name":"bool","nodeType":"ElementaryTypeName","src":"2982:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2981:6:8"},"src":"2941:51:8","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"2899:99:8"},"returnParameters":{"id":1702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1715,"src":"3022:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1699,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1700,"nodeType":"ArrayTypeName","src":"3022:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3021:18:8"},"scope":2492,"src":"2886:251:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1735,"nodeType":"Block","src":"3320:87:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1727,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"3355:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":1726,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[1940,1952],"referencedDeclaration":1940,"src":"3335:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3335:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":1729,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"3363:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$2524_$","typeString":"type(library Comparators)"}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3375:2:8","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":2509,"src":"3363:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1725,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[1664,1683,1715,1736,1768,1789],"referencedDeclaration":1664,"src":"3330:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3330:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1732,"nodeType":"ExpressionStatement","src":"3330:48:8"},{"expression":{"id":1733,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"3395:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":1724,"id":1734,"nodeType":"Return","src":"3388:12:8"}]},"documentation":{"id":1716,"nodeType":"StructuredDocumentation","src":"3143:93:8","text":" @dev Variant of {sort} that sorts an array of address in increasing order."},"id":1736,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"3250:4:8","nodeType":"FunctionDefinition","parameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"mutability":"mutable","name":"array","nameLocation":"3272:5:8","nodeType":"VariableDeclaration","scope":1736,"src":"3255:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1717,"name":"address","nodeType":"ElementaryTypeName","src":"3255:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1718,"nodeType":"ArrayTypeName","src":"3255:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3254:24:8"},"returnParameters":{"id":1724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1736,"src":"3302:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1721,"name":"address","nodeType":"ElementaryTypeName","src":"3302:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1722,"nodeType":"ArrayTypeName","src":"3302:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3301:18:8"},"scope":2492,"src":"3241:166:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1767,"nodeType":"Block","src":"4487:97:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1758,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"4522:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":1757,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[1940,1952],"referencedDeclaration":1952,"src":"4502:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":1761,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"4549:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}],"id":1760,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[1978,2004],"referencedDeclaration":2004,"src":"4530:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (bytes32,bytes32) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4530:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1756,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[1664,1683,1715,1736,1768,1789],"referencedDeclaration":1664,"src":"4497:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4497:58:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1764,"nodeType":"ExpressionStatement","src":"4497:58:8"},{"expression":{"id":1765,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"4572:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":1755,"id":1766,"nodeType":"Return","src":"4565:12:8"}]},"documentation":{"id":1737,"nodeType":"StructuredDocumentation","src":"3413:915:8","text":" @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":1768,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4342:4:8","nodeType":"FunctionDefinition","parameters":{"id":1751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1740,"mutability":"mutable","name":"array","nameLocation":"4373:5:8","nodeType":"VariableDeclaration","scope":1768,"src":"4356:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1738,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4356:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1739,"nodeType":"ArrayTypeName","src":"4356:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1750,"mutability":"mutable","name":"comp","nameLocation":"4435:4:8","nodeType":"VariableDeclaration","scope":1768,"src":"4388:51:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":1749,"nodeType":"FunctionTypeName","parameterTypes":{"id":1745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1749,"src":"4397:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1741,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4397:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1749,"src":"4406:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1743,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4406:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4396:18:8"},"returnParameterTypes":{"id":1748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1749,"src":"4429:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1746,"name":"bool","nodeType":"ElementaryTypeName","src":"4429:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4428:6:8"},"src":"4388:51:8","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"4346:99:8"},"returnParameters":{"id":1755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1754,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1768,"src":"4469:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1752,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1753,"nodeType":"ArrayTypeName","src":"4469:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4468:18:8"},"scope":2492,"src":"4333:251:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1788,"nodeType":"Block","src":"4767:87:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1780,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"4802:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":1779,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[1940,1952],"referencedDeclaration":1952,"src":"4782:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":1782,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"4810:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$2524_$","typeString":"type(library Comparators)"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:2:8","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":2509,"src":"4810:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1778,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[1664,1683,1715,1736,1768,1789],"referencedDeclaration":1664,"src":"4777:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4777:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1785,"nodeType":"ExpressionStatement","src":"4777:48:8"},{"expression":{"id":1786,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"4842:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":1777,"id":1787,"nodeType":"Return","src":"4835:12:8"}]},"documentation":{"id":1769,"nodeType":"StructuredDocumentation","src":"4590:93:8","text":" @dev Variant of {sort} that sorts an array of bytes32 in increasing order."},"id":1789,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4697:4:8","nodeType":"FunctionDefinition","parameters":{"id":1773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1772,"mutability":"mutable","name":"array","nameLocation":"4719:5:8","nodeType":"VariableDeclaration","scope":1789,"src":"4702:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1770,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4702:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1771,"nodeType":"ArrayTypeName","src":"4702:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4701:24:8"},"returnParameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1789,"src":"4749:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1774,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4749:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1775,"nodeType":"ArrayTypeName","src":"4749:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4748:18:8"},"scope":2492,"src":"4688:166:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1876,"nodeType":"Block","src":"5470:889:8","statements":[{"id":1875,"nodeType":"UncheckedBlock","src":"5480:873:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1807,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"5508:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1808,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"5514:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5508:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30783430","id":1810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5522:4:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"5508:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1813,"nodeType":"IfStatement","src":"5504:31:8","trueBody":{"functionReturnParameters":1806,"id":1812,"nodeType":"Return","src":"5528:7:8"}},{"assignments":[1815],"declarations":[{"constant":false,"id":1815,"mutability":"mutable","name":"pivot","nameLocation":"5599:5:8","nodeType":"VariableDeclaration","scope":1875,"src":"5591:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1814,"name":"uint256","nodeType":"ElementaryTypeName","src":"5591:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1819,"initialValue":{"arguments":[{"id":1817,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"5614:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1816,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"5607:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5607:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5591:29:8"},{"assignments":[1821],"declarations":[{"constant":false,"id":1821,"mutability":"mutable","name":"pos","nameLocation":"5715:3:8","nodeType":"VariableDeclaration","scope":1875,"src":"5707:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1820,"name":"uint256","nodeType":"ElementaryTypeName","src":"5707:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1823,"initialValue":{"id":1822,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"5721:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5707:19:8"},{"body":{"id":1854,"nodeType":"Block","src":"5795:331:8","statements":[{"condition":{"arguments":[{"arguments":[{"id":1839,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"5829:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1838,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"5822:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5822:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1841,"name":"pivot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"5834:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1837,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"5817:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5817:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1853,"nodeType":"IfStatement","src":"5813:299:8","trueBody":{"id":1852,"nodeType":"Block","src":"5842:270:8","statements":[{"expression":{"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1843,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"6046:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":1844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6053:4:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6046:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1846,"nodeType":"ExpressionStatement","src":"6046:11:8"},{"expression":{"arguments":[{"id":1848,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"6085:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1849,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"6090:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1847,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"6079:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6079:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1851,"nodeType":"ExpressionStatement","src":"6079:14:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1830,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"5773:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1831,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"5778:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5773:8:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1855,"initializationExpression":{"assignments":[1825],"declarations":[{"constant":false,"id":1825,"mutability":"mutable","name":"it","nameLocation":"5754:2:8","nodeType":"VariableDeclaration","scope":1855,"src":"5746:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1824,"name":"uint256","nodeType":"ElementaryTypeName","src":"5746:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1829,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1826,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"5759:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":1827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5767:4:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5759:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5746:25:8"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1833,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"5783:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":1834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5789:4:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5783:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1836,"nodeType":"ExpressionStatement","src":"5783:10:8"},"nodeType":"ForStatement","src":"5741:385:8"},{"expression":{"arguments":[{"id":1857,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"6146:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1858,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"6153:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1856,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"6140:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1860,"nodeType":"ExpressionStatement","src":"6140:17:8"},{"expression":{"arguments":[{"id":1862,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"6207:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1863,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"6214:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1864,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"6219:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1861,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"6196:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1866,"nodeType":"ExpressionStatement","src":"6196:28:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1868,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"6284:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":1869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6290:4:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6284:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1871,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"6296:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1872,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"6301:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1867,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"6273:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6273:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1874,"nodeType":"ExpressionStatement","src":"6273:33:8"}]}]},"documentation":{"id":1790,"nodeType":"StructuredDocumentation","src":"4860:491:8","text":" @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n at end (exclusive). Sorting follows the `comp` comparator.\n Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n be used only if the limits are within a memory array."},"id":1877,"implemented":true,"kind":"function","modifiers":[],"name":"_quickSort","nameLocation":"5365:10:8","nodeType":"FunctionDefinition","parameters":{"id":1805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1792,"mutability":"mutable","name":"begin","nameLocation":"5384:5:8","nodeType":"VariableDeclaration","scope":1877,"src":"5376:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1791,"name":"uint256","nodeType":"ElementaryTypeName","src":"5376:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1794,"mutability":"mutable","name":"end","nameLocation":"5399:3:8","nodeType":"VariableDeclaration","scope":1877,"src":"5391:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1793,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1804,"mutability":"mutable","name":"comp","nameLocation":"5451:4:8","nodeType":"VariableDeclaration","scope":1877,"src":"5404:51:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":1803,"nodeType":"FunctionTypeName","parameterTypes":{"id":1799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1803,"src":"5413:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1795,"name":"uint256","nodeType":"ElementaryTypeName","src":"5413:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1803,"src":"5422:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1797,"name":"uint256","nodeType":"ElementaryTypeName","src":"5422:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5412:18:8"},"returnParameterTypes":{"id":1802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1801,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1803,"src":"5445:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1800,"name":"bool","nodeType":"ElementaryTypeName","src":"5445:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5444:6:8"},"src":"5404:51:8","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"5375:81:8"},"returnParameters":{"id":1806,"nodeType":"ParameterList","parameters":[],"src":"5470:0:8"},"scope":2492,"src":"5356:1003:8","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1887,"nodeType":"Block","src":"6532:88:8","statements":[{"AST":{"nativeSrc":"6567:47:8","nodeType":"YulBlock","src":"6567:47:8","statements":[{"nativeSrc":"6581:23:8","nodeType":"YulAssignment","src":"6581:23:8","value":{"arguments":[{"name":"array","nativeSrc":"6592:5:8","nodeType":"YulIdentifier","src":"6592:5:8"},{"kind":"number","nativeSrc":"6599:4:8","nodeType":"YulLiteral","src":"6599:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6588:3:8","nodeType":"YulIdentifier","src":"6588:3:8"},"nativeSrc":"6588:16:8","nodeType":"YulFunctionCall","src":"6588:16:8"},"variableNames":[{"name":"ptr","nativeSrc":"6581:3:8","nodeType":"YulIdentifier","src":"6581:3:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1881,"isOffset":false,"isSlot":false,"src":"6592:5:8","valueSize":1},{"declaration":1884,"isOffset":false,"isSlot":false,"src":"6581:3:8","valueSize":1}],"flags":["memory-safe"],"id":1886,"nodeType":"InlineAssembly","src":"6542:72:8"}]},"documentation":{"id":1878,"nodeType":"StructuredDocumentation","src":"6365:87:8","text":" @dev Pointer to the memory location of the first element of `array`."},"id":1888,"implemented":true,"kind":"function","modifiers":[],"name":"_begin","nameLocation":"6466:6:8","nodeType":"FunctionDefinition","parameters":{"id":1882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1881,"mutability":"mutable","name":"array","nameLocation":"6490:5:8","nodeType":"VariableDeclaration","scope":1888,"src":"6473:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1879,"name":"uint256","nodeType":"ElementaryTypeName","src":"6473:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1880,"nodeType":"ArrayTypeName","src":"6473:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6472:24:8"},"returnParameters":{"id":1885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1884,"mutability":"mutable","name":"ptr","nameLocation":"6527:3:8","nodeType":"VariableDeclaration","scope":1888,"src":"6519:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1883,"name":"uint256","nodeType":"ElementaryTypeName","src":"6519:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6518:13:8"},"scope":2492,"src":"6457:163:8","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1907,"nodeType":"Block","src":"6892:93:8","statements":[{"id":1906,"nodeType":"UncheckedBlock","src":"6902:77:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1898,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"6940:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1897,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"6933:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6933:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1900,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"6949:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6955:6:8","memberName":"length","nodeType":"MemberAccess","src":"6949:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783230","id":1902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6964:4:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6949:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6933:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1896,"id":1905,"nodeType":"Return","src":"6926:42:8"}]}]},"documentation":{"id":1889,"nodeType":"StructuredDocumentation","src":"6626:188:8","text":" @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n that comes just after the last element of the array."},"id":1908,"implemented":true,"kind":"function","modifiers":[],"name":"_end","nameLocation":"6828:4:8","nodeType":"FunctionDefinition","parameters":{"id":1893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1892,"mutability":"mutable","name":"array","nameLocation":"6850:5:8","nodeType":"VariableDeclaration","scope":1908,"src":"6833:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1890,"name":"uint256","nodeType":"ElementaryTypeName","src":"6833:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1891,"nodeType":"ArrayTypeName","src":"6833:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6832:24:8"},"returnParameters":{"id":1896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1895,"mutability":"mutable","name":"ptr","nameLocation":"6887:3:8","nodeType":"VariableDeclaration","scope":1908,"src":"6879:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1894,"name":"uint256","nodeType":"ElementaryTypeName","src":"6879:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6878:13:8"},"scope":2492,"src":"6819:166:8","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1917,"nodeType":"Block","src":"7136:68:8","statements":[{"AST":{"nativeSrc":"7155:43:8","nodeType":"YulBlock","src":"7155:43:8","statements":[{"nativeSrc":"7169:19:8","nodeType":"YulAssignment","src":"7169:19:8","value":{"arguments":[{"name":"ptr","nativeSrc":"7184:3:8","nodeType":"YulIdentifier","src":"7184:3:8"}],"functionName":{"name":"mload","nativeSrc":"7178:5:8","nodeType":"YulIdentifier","src":"7178:5:8"},"nativeSrc":"7178:10:8","nodeType":"YulFunctionCall","src":"7178:10:8"},"variableNames":[{"name":"value","nativeSrc":"7169:5:8","nodeType":"YulIdentifier","src":"7169:5:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1911,"isOffset":false,"isSlot":false,"src":"7184:3:8","valueSize":1},{"declaration":1914,"isOffset":false,"isSlot":false,"src":"7169:5:8","valueSize":1}],"id":1916,"nodeType":"InlineAssembly","src":"7146:52:8"}]},"documentation":{"id":1909,"nodeType":"StructuredDocumentation","src":"6991:74:8","text":" @dev Load memory word (as a uint256) at location `ptr`."},"id":1918,"implemented":true,"kind":"function","modifiers":[],"name":"_mload","nameLocation":"7079:6:8","nodeType":"FunctionDefinition","parameters":{"id":1912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1911,"mutability":"mutable","name":"ptr","nameLocation":"7094:3:8","nodeType":"VariableDeclaration","scope":1918,"src":"7086:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1910,"name":"uint256","nodeType":"ElementaryTypeName","src":"7086:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7085:13:8"},"returnParameters":{"id":1915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1914,"mutability":"mutable","name":"value","nameLocation":"7129:5:8","nodeType":"VariableDeclaration","scope":1918,"src":"7121:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1913,"name":"uint256","nodeType":"ElementaryTypeName","src":"7121:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7120:15:8"},"scope":2492,"src":"7070:134:8","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1927,"nodeType":"Block","src":"7348:178:8","statements":[{"AST":{"nativeSrc":"7367:153:8","nodeType":"YulBlock","src":"7367:153:8","statements":[{"nativeSrc":"7381:25:8","nodeType":"YulVariableDeclaration","src":"7381:25:8","value":{"arguments":[{"name":"ptr1","nativeSrc":"7401:4:8","nodeType":"YulIdentifier","src":"7401:4:8"}],"functionName":{"name":"mload","nativeSrc":"7395:5:8","nodeType":"YulIdentifier","src":"7395:5:8"},"nativeSrc":"7395:11:8","nodeType":"YulFunctionCall","src":"7395:11:8"},"variables":[{"name":"value1","nativeSrc":"7385:6:8","nodeType":"YulTypedName","src":"7385:6:8","type":""}]},{"nativeSrc":"7419:25:8","nodeType":"YulVariableDeclaration","src":"7419:25:8","value":{"arguments":[{"name":"ptr2","nativeSrc":"7439:4:8","nodeType":"YulIdentifier","src":"7439:4:8"}],"functionName":{"name":"mload","nativeSrc":"7433:5:8","nodeType":"YulIdentifier","src":"7433:5:8"},"nativeSrc":"7433:11:8","nodeType":"YulFunctionCall","src":"7433:11:8"},"variables":[{"name":"value2","nativeSrc":"7423:6:8","nodeType":"YulTypedName","src":"7423:6:8","type":""}]},{"expression":{"arguments":[{"name":"ptr1","nativeSrc":"7464:4:8","nodeType":"YulIdentifier","src":"7464:4:8"},{"name":"value2","nativeSrc":"7470:6:8","nodeType":"YulIdentifier","src":"7470:6:8"}],"functionName":{"name":"mstore","nativeSrc":"7457:6:8","nodeType":"YulIdentifier","src":"7457:6:8"},"nativeSrc":"7457:20:8","nodeType":"YulFunctionCall","src":"7457:20:8"},"nativeSrc":"7457:20:8","nodeType":"YulExpressionStatement","src":"7457:20:8"},{"expression":{"arguments":[{"name":"ptr2","nativeSrc":"7497:4:8","nodeType":"YulIdentifier","src":"7497:4:8"},{"name":"value1","nativeSrc":"7503:6:8","nodeType":"YulIdentifier","src":"7503:6:8"}],"functionName":{"name":"mstore","nativeSrc":"7490:6:8","nodeType":"YulIdentifier","src":"7490:6:8"},"nativeSrc":"7490:20:8","nodeType":"YulFunctionCall","src":"7490:20:8"},"nativeSrc":"7490:20:8","nodeType":"YulExpressionStatement","src":"7490:20:8"}]},"evmVersion":"paris","externalReferences":[{"declaration":1921,"isOffset":false,"isSlot":false,"src":"7401:4:8","valueSize":1},{"declaration":1921,"isOffset":false,"isSlot":false,"src":"7464:4:8","valueSize":1},{"declaration":1923,"isOffset":false,"isSlot":false,"src":"7439:4:8","valueSize":1},{"declaration":1923,"isOffset":false,"isSlot":false,"src":"7497:4:8","valueSize":1}],"id":1926,"nodeType":"InlineAssembly","src":"7358:162:8"}]},"documentation":{"id":1919,"nodeType":"StructuredDocumentation","src":"7210:77:8","text":" @dev Swaps the elements memory location `ptr1` and `ptr2`."},"id":1928,"implemented":true,"kind":"function","modifiers":[],"name":"_swap","nameLocation":"7301:5:8","nodeType":"FunctionDefinition","parameters":{"id":1924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1921,"mutability":"mutable","name":"ptr1","nameLocation":"7315:4:8","nodeType":"VariableDeclaration","scope":1928,"src":"7307:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1920,"name":"uint256","nodeType":"ElementaryTypeName","src":"7307:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1923,"mutability":"mutable","name":"ptr2","nameLocation":"7329:4:8","nodeType":"VariableDeclaration","scope":1928,"src":"7321:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1922,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7306:28:8"},"returnParameters":{"id":1925,"nodeType":"ParameterList","parameters":[],"src":"7348:0:8"},"scope":2492,"src":"7292:234:8","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1939,"nodeType":"Block","src":"7713:64:8","statements":[{"AST":{"nativeSrc":"7732:39:8","nodeType":"YulBlock","src":"7732:39:8","statements":[{"nativeSrc":"7746:15:8","nodeType":"YulAssignment","src":"7746:15:8","value":{"name":"input","nativeSrc":"7756:5:8","nodeType":"YulIdentifier","src":"7756:5:8"},"variableNames":[{"name":"output","nativeSrc":"7746:6:8","nodeType":"YulIdentifier","src":"7746:6:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1932,"isOffset":false,"isSlot":false,"src":"7756:5:8","valueSize":1},{"declaration":1936,"isOffset":false,"isSlot":false,"src":"7746:6:8","valueSize":1}],"id":1938,"nodeType":"InlineAssembly","src":"7723:48:8"}]},"documentation":{"id":1929,"nodeType":"StructuredDocumentation","src":"7532:76:8","text":"@dev Helper: low level cast address memory array to uint256 memory array"},"id":1940,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7622:19:8","nodeType":"FunctionDefinition","parameters":{"id":1933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1932,"mutability":"mutable","name":"input","nameLocation":"7659:5:8","nodeType":"VariableDeclaration","scope":1940,"src":"7642:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1930,"name":"address","nodeType":"ElementaryTypeName","src":"7642:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1931,"nodeType":"ArrayTypeName","src":"7642:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"7641:24:8"},"returnParameters":{"id":1937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1936,"mutability":"mutable","name":"output","nameLocation":"7705:6:8","nodeType":"VariableDeclaration","scope":1940,"src":"7688:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1934,"name":"uint256","nodeType":"ElementaryTypeName","src":"7688:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1935,"nodeType":"ArrayTypeName","src":"7688:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7687:25:8"},"scope":2492,"src":"7613:164:8","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1951,"nodeType":"Block","src":"7964:64:8","statements":[{"AST":{"nativeSrc":"7983:39:8","nodeType":"YulBlock","src":"7983:39:8","statements":[{"nativeSrc":"7997:15:8","nodeType":"YulAssignment","src":"7997:15:8","value":{"name":"input","nativeSrc":"8007:5:8","nodeType":"YulIdentifier","src":"8007:5:8"},"variableNames":[{"name":"output","nativeSrc":"7997:6:8","nodeType":"YulIdentifier","src":"7997:6:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1944,"isOffset":false,"isSlot":false,"src":"8007:5:8","valueSize":1},{"declaration":1948,"isOffset":false,"isSlot":false,"src":"7997:6:8","valueSize":1}],"id":1950,"nodeType":"InlineAssembly","src":"7974:48:8"}]},"documentation":{"id":1941,"nodeType":"StructuredDocumentation","src":"7783:76:8","text":"@dev Helper: low level cast bytes32 memory array to uint256 memory array"},"id":1952,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7873:19:8","nodeType":"FunctionDefinition","parameters":{"id":1945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1944,"mutability":"mutable","name":"input","nameLocation":"7910:5:8","nodeType":"VariableDeclaration","scope":1952,"src":"7893:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1942,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7893:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1943,"nodeType":"ArrayTypeName","src":"7893:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7892:24:8"},"returnParameters":{"id":1949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1948,"mutability":"mutable","name":"output","nameLocation":"7956:6:8","nodeType":"VariableDeclaration","scope":1952,"src":"7939:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1946,"name":"uint256","nodeType":"ElementaryTypeName","src":"7939:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1947,"nodeType":"ArrayTypeName","src":"7939:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7938:25:8"},"scope":2492,"src":"7864:164:8","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1977,"nodeType":"Block","src":"8290:64:8","statements":[{"AST":{"nativeSrc":"8309:39:8","nodeType":"YulBlock","src":"8309:39:8","statements":[{"nativeSrc":"8323:15:8","nodeType":"YulAssignment","src":"8323:15:8","value":{"name":"input","nativeSrc":"8333:5:8","nodeType":"YulIdentifier","src":"8333:5:8"},"variableNames":[{"name":"output","nativeSrc":"8323:6:8","nodeType":"YulIdentifier","src":"8323:6:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1963,"isOffset":false,"isSlot":false,"src":"8333:5:8","valueSize":1},{"declaration":1974,"isOffset":false,"isSlot":false,"src":"8323:6:8","valueSize":1}],"id":1976,"nodeType":"InlineAssembly","src":"8300:48:8"}]},"documentation":{"id":1953,"nodeType":"StructuredDocumentation","src":"8034:78:8","text":"@dev Helper: low level cast address comp function to uint256 comp function"},"id":1978,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8126:18:8","nodeType":"FunctionDefinition","parameters":{"id":1964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1963,"mutability":"mutable","name":"input","nameLocation":"8201:5:8","nodeType":"VariableDeclaration","scope":1978,"src":"8154:52:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":1962,"nodeType":"FunctionTypeName","parameterTypes":{"id":1958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1962,"src":"8163:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1954,"name":"address","nodeType":"ElementaryTypeName","src":"8163:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1962,"src":"8172:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1956,"name":"address","nodeType":"ElementaryTypeName","src":"8172:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8162:18:8"},"returnParameterTypes":{"id":1961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1960,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1962,"src":"8195:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1959,"name":"bool","nodeType":"ElementaryTypeName","src":"8195:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8194:6:8"},"src":"8154:52:8","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8144:68:8"},"returnParameters":{"id":1975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1974,"mutability":"mutable","name":"output","nameLocation":"8282:6:8","nodeType":"VariableDeclaration","scope":1978,"src":"8235:53:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":1973,"nodeType":"FunctionTypeName","parameterTypes":{"id":1969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1973,"src":"8244:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1965,"name":"uint256","nodeType":"ElementaryTypeName","src":"8244:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1973,"src":"8253:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1967,"name":"uint256","nodeType":"ElementaryTypeName","src":"8253:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8243:18:8"},"returnParameterTypes":{"id":1972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1973,"src":"8276:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1970,"name":"bool","nodeType":"ElementaryTypeName","src":"8276:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8275:6:8"},"src":"8235:53:8","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8234:55:8"},"scope":2492,"src":"8117:237:8","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2003,"nodeType":"Block","src":"8616:64:8","statements":[{"AST":{"nativeSrc":"8635:39:8","nodeType":"YulBlock","src":"8635:39:8","statements":[{"nativeSrc":"8649:15:8","nodeType":"YulAssignment","src":"8649:15:8","value":{"name":"input","nativeSrc":"8659:5:8","nodeType":"YulIdentifier","src":"8659:5:8"},"variableNames":[{"name":"output","nativeSrc":"8649:6:8","nodeType":"YulIdentifier","src":"8649:6:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1989,"isOffset":false,"isSlot":false,"src":"8659:5:8","valueSize":1},{"declaration":2000,"isOffset":false,"isSlot":false,"src":"8649:6:8","valueSize":1}],"id":2002,"nodeType":"InlineAssembly","src":"8626:48:8"}]},"documentation":{"id":1979,"nodeType":"StructuredDocumentation","src":"8360:78:8","text":"@dev Helper: low level cast bytes32 comp function to uint256 comp function"},"id":2004,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8452:18:8","nodeType":"FunctionDefinition","parameters":{"id":1990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1989,"mutability":"mutable","name":"input","nameLocation":"8527:5:8","nodeType":"VariableDeclaration","scope":2004,"src":"8480:52:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":1988,"nodeType":"FunctionTypeName","parameterTypes":{"id":1984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1988,"src":"8489:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1980,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8489:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1983,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1988,"src":"8498:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1982,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8498:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8488:18:8"},"returnParameterTypes":{"id":1987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1988,"src":"8521:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1985,"name":"bool","nodeType":"ElementaryTypeName","src":"8521:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8520:6:8"},"src":"8480:52:8","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8470:68:8"},"returnParameters":{"id":2001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2000,"mutability":"mutable","name":"output","nameLocation":"8608:6:8","nodeType":"VariableDeclaration","scope":2004,"src":"8561:53:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":1999,"nodeType":"FunctionTypeName","parameterTypes":{"id":1995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1992,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1999,"src":"8570:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1991,"name":"uint256","nodeType":"ElementaryTypeName","src":"8570:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1994,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1999,"src":"8579:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1993,"name":"uint256","nodeType":"ElementaryTypeName","src":"8579:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8569:18:8"},"returnParameterTypes":{"id":1998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1999,"src":"8602:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1996,"name":"bool","nodeType":"ElementaryTypeName","src":"8602:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8601:6:8"},"src":"8561:53:8","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8560:55:8"},"scope":2492,"src":"8443:237:8","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2086,"nodeType":"Block","src":"9405:834:8","statements":[{"assignments":[2016],"declarations":[{"constant":false,"id":2016,"mutability":"mutable","name":"low","nameLocation":"9423:3:8","nodeType":"VariableDeclaration","scope":2086,"src":"9415:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2015,"name":"uint256","nodeType":"ElementaryTypeName","src":"9415:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2018,"initialValue":{"hexValue":"30","id":2017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9429:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9415:15:8"},{"assignments":[2020],"declarations":[{"constant":false,"id":2020,"mutability":"mutable","name":"high","nameLocation":"9448:4:8","nodeType":"VariableDeclaration","scope":2086,"src":"9440:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2019,"name":"uint256","nodeType":"ElementaryTypeName","src":"9440:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2023,"initialValue":{"expression":{"id":2021,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"9455:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9461:6:8","memberName":"length","nodeType":"MemberAccess","src":"9455:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9440:27:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2024,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"9482:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9490:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9482:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2030,"nodeType":"IfStatement","src":"9478:48:8","trueBody":{"id":2029,"nodeType":"Block","src":"9493:33:8","statements":[{"expression":{"hexValue":"30","id":2027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9514:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2014,"id":2028,"nodeType":"Return","src":"9507:8:8"}]}},{"body":{"id":2062,"nodeType":"Block","src":"9555:423:8","statements":[{"assignments":[2035],"declarations":[{"constant":false,"id":2035,"mutability":"mutable","name":"mid","nameLocation":"9577:3:8","nodeType":"VariableDeclaration","scope":2062,"src":"9569:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2034,"name":"uint256","nodeType":"ElementaryTypeName","src":"9569:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2041,"initialValue":{"arguments":[{"id":2038,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"9596:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2039,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"9601:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2036,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"9583:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5702_$","typeString":"type(library Math)"}},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9588:7:8","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4354,"src":"9583:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9583:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9569:37:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2043,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"9844:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":2044,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"9851:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2042,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2367,2393,2419],"referencedDeclaration":2419,"src":"9831:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$2751_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9831:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2751_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2046,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9856:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2750,"src":"9831:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2047,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"9864:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9831:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2060,"nodeType":"Block","src":"9922:46:8","statements":[{"expression":{"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2054,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"9940:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2055,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"9946:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9952:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9940:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2059,"nodeType":"ExpressionStatement","src":"9940:13:8"}]},"id":2061,"nodeType":"IfStatement","src":"9827:141:8","trueBody":{"id":2053,"nodeType":"Block","src":"9873:43:8","statements":[{"expression":{"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2049,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"9891:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2050,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"9898:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9891:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2052,"nodeType":"ExpressionStatement","src":"9891:10:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2031,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"9543:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2032,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"9549:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9543:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2063,"nodeType":"WhileStatement","src":"9536:442:8"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2064,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"10095:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10101:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10095:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2068,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"10119:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2069,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"10126:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10126:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2067,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2367,2393,2419],"referencedDeclaration":2419,"src":"10106:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$2751_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2751_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2073,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10135:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2750,"src":"10106:34:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2074,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"10144:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10106:45:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10095:56:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2084,"nodeType":"Block","src":"10198:35:8","statements":[{"expression":{"id":2082,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"10219:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2014,"id":2083,"nodeType":"Return","src":"10212:10:8"}]},"id":2085,"nodeType":"IfStatement","src":"10091:142:8","trueBody":{"id":2081,"nodeType":"Block","src":"10153:39:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2077,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"10174:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10180:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10174:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2014,"id":2080,"nodeType":"Return","src":"10167:14:8"}]}}]},"documentation":{"id":2005,"nodeType":"StructuredDocumentation","src":"8686:616:8","text":" @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n NOTE: The `array` is expected to be sorted in ascending order, and to\n contain no repeated elements.\n IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n support for repeated elements in the array. The {lowerBound} function should\n be used instead."},"id":2087,"implemented":true,"kind":"function","modifiers":[],"name":"findUpperBound","nameLocation":"9316:14:8","nodeType":"FunctionDefinition","parameters":{"id":2011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2008,"mutability":"mutable","name":"array","nameLocation":"9349:5:8","nodeType":"VariableDeclaration","scope":2087,"src":"9331:23:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2006,"name":"uint256","nodeType":"ElementaryTypeName","src":"9331:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2007,"nodeType":"ArrayTypeName","src":"9331:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2010,"mutability":"mutable","name":"element","nameLocation":"9364:7:8","nodeType":"VariableDeclaration","scope":2087,"src":"9356:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2009,"name":"uint256","nodeType":"ElementaryTypeName","src":"9356:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9330:42:8"},"returnParameters":{"id":2014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2087,"src":"9396:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2012,"name":"uint256","nodeType":"ElementaryTypeName","src":"9396:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9395:9:8"},"scope":2492,"src":"9307:932:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2150,"nodeType":"Block","src":"10756:709:8","statements":[{"assignments":[2099],"declarations":[{"constant":false,"id":2099,"mutability":"mutable","name":"low","nameLocation":"10774:3:8","nodeType":"VariableDeclaration","scope":2150,"src":"10766:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2098,"name":"uint256","nodeType":"ElementaryTypeName","src":"10766:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2101,"initialValue":{"hexValue":"30","id":2100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10780:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10766:15:8"},{"assignments":[2103],"declarations":[{"constant":false,"id":2103,"mutability":"mutable","name":"high","nameLocation":"10799:4:8","nodeType":"VariableDeclaration","scope":2150,"src":"10791:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2102,"name":"uint256","nodeType":"ElementaryTypeName","src":"10791:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2106,"initialValue":{"expression":{"id":2104,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"10806:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10812:6:8","memberName":"length","nodeType":"MemberAccess","src":"10806:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10791:27:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2107,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"10833:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10833:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2113,"nodeType":"IfStatement","src":"10829:48:8","trueBody":{"id":2112,"nodeType":"Block","src":"10844:33:8","statements":[{"expression":{"hexValue":"30","id":2110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10865:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2097,"id":2111,"nodeType":"Return","src":"10858:8:8"}]}},{"body":{"id":2146,"nodeType":"Block","src":"10906:532:8","statements":[{"assignments":[2118],"declarations":[{"constant":false,"id":2118,"mutability":"mutable","name":"mid","nameLocation":"10928:3:8","nodeType":"VariableDeclaration","scope":2146,"src":"10920:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2117,"name":"uint256","nodeType":"ElementaryTypeName","src":"10920:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2124,"initialValue":{"arguments":[{"id":2121,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"10947:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2122,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"10952:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2119,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"10934:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5702_$","typeString":"type(library Math)"}},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10939:7:8","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4354,"src":"10934:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10934:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10920:37:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2126,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"11195:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":2127,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"11202:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2125,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2367,2393,2419],"referencedDeclaration":2419,"src":"11182:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$2751_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11182:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2751_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2129,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11207:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2750,"src":"11182:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2130,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"11215:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11182:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2144,"nodeType":"Block","src":"11385:43:8","statements":[{"expression":{"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2140,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"11403:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2141,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"11410:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11403:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2143,"nodeType":"ExpressionStatement","src":"11403:10:8"}]},"id":2145,"nodeType":"IfStatement","src":"11178:250:8","trueBody":{"id":2139,"nodeType":"Block","src":"11224:155:8","statements":[{"id":2138,"nodeType":"UncheckedBlock","src":"11301:64:8","statements":[{"expression":{"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2132,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"11333:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2133,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"11339:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11345:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11339:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11333:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2137,"nodeType":"ExpressionStatement","src":"11333:13:8"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2114,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"10894:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2115,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"10900:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10894:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2147,"nodeType":"WhileStatement","src":"10887:551:8"},{"expression":{"id":2148,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"11455:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2097,"id":2149,"nodeType":"Return","src":"11448:10:8"}]},"documentation":{"id":2088,"nodeType":"StructuredDocumentation","src":"10245:412:8","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value greater or equal than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound]."},"id":2151,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBound","nameLocation":"10671:10:8","nodeType":"FunctionDefinition","parameters":{"id":2094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2091,"mutability":"mutable","name":"array","nameLocation":"10700:5:8","nodeType":"VariableDeclaration","scope":2151,"src":"10682:23:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2089,"name":"uint256","nodeType":"ElementaryTypeName","src":"10682:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2090,"nodeType":"ArrayTypeName","src":"10682:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2093,"mutability":"mutable","name":"element","nameLocation":"10715:7:8","nodeType":"VariableDeclaration","scope":2151,"src":"10707:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2092,"name":"uint256","nodeType":"ElementaryTypeName","src":"10707:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10681:42:8"},"returnParameters":{"id":2097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2151,"src":"10747:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2095,"name":"uint256","nodeType":"ElementaryTypeName","src":"10747:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10746:9:8"},"scope":2492,"src":"10662:803:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2214,"nodeType":"Block","src":"11982:709:8","statements":[{"assignments":[2163],"declarations":[{"constant":false,"id":2163,"mutability":"mutable","name":"low","nameLocation":"12000:3:8","nodeType":"VariableDeclaration","scope":2214,"src":"11992:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2162,"name":"uint256","nodeType":"ElementaryTypeName","src":"11992:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2165,"initialValue":{"hexValue":"30","id":2164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12006:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11992:15:8"},{"assignments":[2167],"declarations":[{"constant":false,"id":2167,"mutability":"mutable","name":"high","nameLocation":"12025:4:8","nodeType":"VariableDeclaration","scope":2214,"src":"12017:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2166,"name":"uint256","nodeType":"ElementaryTypeName","src":"12017:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2170,"initialValue":{"expression":{"id":2168,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"12032:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12038:6:8","memberName":"length","nodeType":"MemberAccess","src":"12032:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12017:27:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2171,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"12059:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12059:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2177,"nodeType":"IfStatement","src":"12055:48:8","trueBody":{"id":2176,"nodeType":"Block","src":"12070:33:8","statements":[{"expression":{"hexValue":"30","id":2174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12091:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2161,"id":2175,"nodeType":"Return","src":"12084:8:8"}]}},{"body":{"id":2210,"nodeType":"Block","src":"12132:532:8","statements":[{"assignments":[2182],"declarations":[{"constant":false,"id":2182,"mutability":"mutable","name":"mid","nameLocation":"12154:3:8","nodeType":"VariableDeclaration","scope":2210,"src":"12146:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2181,"name":"uint256","nodeType":"ElementaryTypeName","src":"12146:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2188,"initialValue":{"arguments":[{"id":2185,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"12173:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2186,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"12178:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2183,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"12160:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5702_$","typeString":"type(library Math)"}},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12165:7:8","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4354,"src":"12160:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12160:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12146:37:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2190,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"12421:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":2191,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"12428:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2189,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2367,2393,2419],"referencedDeclaration":2419,"src":"12408:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$2751_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12408:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2751_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2193,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12433:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2750,"src":"12408:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2194,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"12441:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12408:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2208,"nodeType":"Block","src":"12499:155:8","statements":[{"id":2207,"nodeType":"UncheckedBlock","src":"12576:64:8","statements":[{"expression":{"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2201,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"12608:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2202,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"12614:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12614:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12608:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2206,"nodeType":"ExpressionStatement","src":"12608:13:8"}]}]},"id":2209,"nodeType":"IfStatement","src":"12404:250:8","trueBody":{"id":2200,"nodeType":"Block","src":"12450:43:8","statements":[{"expression":{"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2196,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"12468:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2197,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"12475:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12468:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2199,"nodeType":"ExpressionStatement","src":"12468:10:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2178,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"12120:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2179,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"12126:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12120:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2211,"nodeType":"WhileStatement","src":"12113:551:8"},{"expression":{"id":2212,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"12681:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2161,"id":2213,"nodeType":"Return","src":"12674:10:8"}]},"documentation":{"id":2152,"nodeType":"StructuredDocumentation","src":"11471:412:8","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value strictly greater than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound]."},"id":2215,"implemented":true,"kind":"function","modifiers":[],"name":"upperBound","nameLocation":"11897:10:8","nodeType":"FunctionDefinition","parameters":{"id":2158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2155,"mutability":"mutable","name":"array","nameLocation":"11926:5:8","nodeType":"VariableDeclaration","scope":2215,"src":"11908:23:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2153,"name":"uint256","nodeType":"ElementaryTypeName","src":"11908:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2154,"nodeType":"ArrayTypeName","src":"11908:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2157,"mutability":"mutable","name":"element","nameLocation":"11941:7:8","nodeType":"VariableDeclaration","scope":2215,"src":"11933:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2156,"name":"uint256","nodeType":"ElementaryTypeName","src":"11933:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11907:42:8"},"returnParameters":{"id":2161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2215,"src":"11973:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2159,"name":"uint256","nodeType":"ElementaryTypeName","src":"11973:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11972:9:8"},"scope":2492,"src":"11888:803:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2277,"nodeType":"Block","src":"12875:709:8","statements":[{"assignments":[2227],"declarations":[{"constant":false,"id":2227,"mutability":"mutable","name":"low","nameLocation":"12893:3:8","nodeType":"VariableDeclaration","scope":2277,"src":"12885:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2226,"name":"uint256","nodeType":"ElementaryTypeName","src":"12885:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2229,"initialValue":{"hexValue":"30","id":2228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12899:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12885:15:8"},{"assignments":[2231],"declarations":[{"constant":false,"id":2231,"mutability":"mutable","name":"high","nameLocation":"12918:4:8","nodeType":"VariableDeclaration","scope":2277,"src":"12910:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2230,"name":"uint256","nodeType":"ElementaryTypeName","src":"12910:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2234,"initialValue":{"expression":{"id":2232,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"12925:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12931:6:8","memberName":"length","nodeType":"MemberAccess","src":"12925:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12910:27:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2235,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"12952:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12960:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12952:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2241,"nodeType":"IfStatement","src":"12948:48:8","trueBody":{"id":2240,"nodeType":"Block","src":"12963:33:8","statements":[{"expression":{"hexValue":"30","id":2238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12984:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2225,"id":2239,"nodeType":"Return","src":"12977:8:8"}]}},{"body":{"id":2273,"nodeType":"Block","src":"13025:532:8","statements":[{"assignments":[2246],"declarations":[{"constant":false,"id":2246,"mutability":"mutable","name":"mid","nameLocation":"13047:3:8","nodeType":"VariableDeclaration","scope":2273,"src":"13039:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2245,"name":"uint256","nodeType":"ElementaryTypeName","src":"13039:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2252,"initialValue":{"arguments":[{"id":2249,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"13066:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2250,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"13071:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2247,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"13053:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5702_$","typeString":"type(library Math)"}},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13058:7:8","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4354,"src":"13053:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13053:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13039:37:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2254,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"13320:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2255,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"13327:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2253,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[2432,2445,2458],"referencedDeclaration":2458,"src":"13301:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13301:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2257,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"13334:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13301:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2271,"nodeType":"Block","src":"13504:43:8","statements":[{"expression":{"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2267,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"13522:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2268,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"13529:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13522:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2270,"nodeType":"ExpressionStatement","src":"13522:10:8"}]},"id":2272,"nodeType":"IfStatement","src":"13297:250:8","trueBody":{"id":2266,"nodeType":"Block","src":"13343:155:8","statements":[{"id":2265,"nodeType":"UncheckedBlock","src":"13420:64:8","statements":[{"expression":{"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2259,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"13452:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2260,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"13458:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13464:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13458:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13452:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2264,"nodeType":"ExpressionStatement","src":"13452:13:8"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2242,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"13013:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2243,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"13019:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13013:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2274,"nodeType":"WhileStatement","src":"13006:551:8"},{"expression":{"id":2275,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"13574:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2225,"id":2276,"nodeType":"Return","src":"13567:10:8"}]},"documentation":{"id":2216,"nodeType":"StructuredDocumentation","src":"12697:74:8","text":" @dev Same as {lowerBound}, but with an array in memory."},"id":2278,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBoundMemory","nameLocation":"12785:16:8","nodeType":"FunctionDefinition","parameters":{"id":2222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2219,"mutability":"mutable","name":"array","nameLocation":"12819:5:8","nodeType":"VariableDeclaration","scope":2278,"src":"12802:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2217,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2218,"nodeType":"ArrayTypeName","src":"12802:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2221,"mutability":"mutable","name":"element","nameLocation":"12834:7:8","nodeType":"VariableDeclaration","scope":2278,"src":"12826:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2220,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12801:41:8"},"returnParameters":{"id":2225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2278,"src":"12866:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2223,"name":"uint256","nodeType":"ElementaryTypeName","src":"12866:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12865:9:8"},"scope":2492,"src":"12776:808:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2340,"nodeType":"Block","src":"13768:709:8","statements":[{"assignments":[2290],"declarations":[{"constant":false,"id":2290,"mutability":"mutable","name":"low","nameLocation":"13786:3:8","nodeType":"VariableDeclaration","scope":2340,"src":"13778:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2289,"name":"uint256","nodeType":"ElementaryTypeName","src":"13778:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2292,"initialValue":{"hexValue":"30","id":2291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13792:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13778:15:8"},{"assignments":[2294],"declarations":[{"constant":false,"id":2294,"mutability":"mutable","name":"high","nameLocation":"13811:4:8","nodeType":"VariableDeclaration","scope":2340,"src":"13803:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2293,"name":"uint256","nodeType":"ElementaryTypeName","src":"13803:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2297,"initialValue":{"expression":{"id":2295,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"13818:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13824:6:8","memberName":"length","nodeType":"MemberAccess","src":"13818:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13803:27:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2298,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"13845:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13853:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13845:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2304,"nodeType":"IfStatement","src":"13841:48:8","trueBody":{"id":2303,"nodeType":"Block","src":"13856:33:8","statements":[{"expression":{"hexValue":"30","id":2301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13877:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2288,"id":2302,"nodeType":"Return","src":"13870:8:8"}]}},{"body":{"id":2336,"nodeType":"Block","src":"13918:532:8","statements":[{"assignments":[2309],"declarations":[{"constant":false,"id":2309,"mutability":"mutable","name":"mid","nameLocation":"13940:3:8","nodeType":"VariableDeclaration","scope":2336,"src":"13932:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2308,"name":"uint256","nodeType":"ElementaryTypeName","src":"13932:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2315,"initialValue":{"arguments":[{"id":2312,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"13959:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2313,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"13964:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2310,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"13946:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5702_$","typeString":"type(library Math)"}},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13951:7:8","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4354,"src":"13946:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13946:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13932:37:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2317,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"14213:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2318,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"14220:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2316,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[2432,2445,2458],"referencedDeclaration":2458,"src":"14194:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14194:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2320,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"14227:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14194:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2334,"nodeType":"Block","src":"14285:155:8","statements":[{"id":2333,"nodeType":"UncheckedBlock","src":"14362:64:8","statements":[{"expression":{"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2327,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"14394:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2328,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"14400:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14406:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14400:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14394:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2332,"nodeType":"ExpressionStatement","src":"14394:13:8"}]}]},"id":2335,"nodeType":"IfStatement","src":"14190:250:8","trueBody":{"id":2326,"nodeType":"Block","src":"14236:43:8","statements":[{"expression":{"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2322,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"14254:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2323,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"14261:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14254:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2325,"nodeType":"ExpressionStatement","src":"14254:10:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2305,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"13906:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2306,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"13912:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13906:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2337,"nodeType":"WhileStatement","src":"13899:551:8"},{"expression":{"id":2338,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"14467:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2288,"id":2339,"nodeType":"Return","src":"14460:10:8"}]},"documentation":{"id":2279,"nodeType":"StructuredDocumentation","src":"13590:74:8","text":" @dev Same as {upperBound}, but with an array in memory."},"id":2341,"implemented":true,"kind":"function","modifiers":[],"name":"upperBoundMemory","nameLocation":"13678:16:8","nodeType":"FunctionDefinition","parameters":{"id":2285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2282,"mutability":"mutable","name":"array","nameLocation":"13712:5:8","nodeType":"VariableDeclaration","scope":2341,"src":"13695:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2280,"name":"uint256","nodeType":"ElementaryTypeName","src":"13695:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2281,"nodeType":"ArrayTypeName","src":"13695:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2284,"mutability":"mutable","name":"element","nameLocation":"13727:7:8","nodeType":"VariableDeclaration","scope":2341,"src":"13719:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2283,"name":"uint256","nodeType":"ElementaryTypeName","src":"13719:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13694:41:8"},"returnParameters":{"id":2288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2341,"src":"13759:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2286,"name":"uint256","nodeType":"ElementaryTypeName","src":"13759:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13758:9:8"},"scope":2492,"src":"13669:808:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2366,"nodeType":"Block","src":"14793:167:8","statements":[{"assignments":[2354],"declarations":[{"constant":false,"id":2354,"mutability":"mutable","name":"slot","nameLocation":"14811:4:8","nodeType":"VariableDeclaration","scope":2366,"src":"14803:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2353,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14803:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2355,"nodeType":"VariableDeclarationStatement","src":"14803:12:8"},{"AST":{"nativeSrc":"14850:40:8","nodeType":"YulBlock","src":"14850:40:8","statements":[{"nativeSrc":"14864:16:8","nodeType":"YulAssignment","src":"14864:16:8","value":{"name":"arr.slot","nativeSrc":"14872:8:8","nodeType":"YulIdentifier","src":"14872:8:8"},"variableNames":[{"name":"slot","nativeSrc":"14864:4:8","nodeType":"YulIdentifier","src":"14864:4:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2345,"isOffset":false,"isSlot":true,"src":"14872:8:8","suffix":"slot","valueSize":1},{"declaration":2354,"isOffset":false,"isSlot":false,"src":"14864:4:8","valueSize":1}],"flags":["memory-safe"],"id":2356,"nodeType":"InlineAssembly","src":"14825:65:8"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2361,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"14932:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2357,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"14906:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14911:11:8","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":2651,"src":"14906:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14925:6:8","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":2641,"src":"14906:25:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14937:14:8","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2771,"src":"14906:45:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2742_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2742_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"functionReturnParameters":2352,"id":2365,"nodeType":"Return","src":"14899:54:8"}]},"documentation":{"id":2342,"nodeType":"StructuredDocumentation","src":"14483:191:8","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2367,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"14688:12:8","nodeType":"FunctionDefinition","parameters":{"id":2348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2345,"mutability":"mutable","name":"arr","nameLocation":"14719:3:8","nodeType":"VariableDeclaration","scope":2367,"src":"14701:21:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2343,"name":"address","nodeType":"ElementaryTypeName","src":"14701:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2344,"nodeType":"ArrayTypeName","src":"14701:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2347,"mutability":"mutable","name":"pos","nameLocation":"14732:3:8","nodeType":"VariableDeclaration","scope":2367,"src":"14724:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2346,"name":"uint256","nodeType":"ElementaryTypeName","src":"14724:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14700:36:8"},"returnParameters":{"id":2352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2367,"src":"14760:31:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2742_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2350,"nodeType":"UserDefinedTypeName","pathNode":{"id":2349,"name":"StorageSlot.AddressSlot","nameLocations":["14760:11:8","14772:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":2742,"src":"14760:23:8"},"referencedDeclaration":2742,"src":"14760:23:8","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2742_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"14759:33:8"},"scope":2492,"src":"14679:281:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2392,"nodeType":"Block","src":"15276:167:8","statements":[{"assignments":[2380],"declarations":[{"constant":false,"id":2380,"mutability":"mutable","name":"slot","nameLocation":"15294:4:8","nodeType":"VariableDeclaration","scope":2392,"src":"15286:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2379,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15286:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2381,"nodeType":"VariableDeclarationStatement","src":"15286:12:8"},{"AST":{"nativeSrc":"15333:40:8","nodeType":"YulBlock","src":"15333:40:8","statements":[{"nativeSrc":"15347:16:8","nodeType":"YulAssignment","src":"15347:16:8","value":{"name":"arr.slot","nativeSrc":"15355:8:8","nodeType":"YulIdentifier","src":"15355:8:8"},"variableNames":[{"name":"slot","nativeSrc":"15347:4:8","nodeType":"YulIdentifier","src":"15347:4:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2371,"isOffset":false,"isSlot":true,"src":"15355:8:8","suffix":"slot","valueSize":1},{"declaration":2380,"isOffset":false,"isSlot":false,"src":"15347:4:8","valueSize":1}],"flags":["memory-safe"],"id":2382,"nodeType":"InlineAssembly","src":"15308:65:8"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2387,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"15415:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2383,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"15389:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15394:11:8","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":2651,"src":"15389:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15408:6:8","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":2641,"src":"15389:25:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15420:14:8","memberName":"getBytes32Slot","nodeType":"MemberAccess","referencedDeclaration":2793,"src":"15389:45:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$2748_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"}},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2748_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot storage pointer"}},"functionReturnParameters":2378,"id":2391,"nodeType":"Return","src":"15382:54:8"}]},"documentation":{"id":2368,"nodeType":"StructuredDocumentation","src":"14966:191:8","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2393,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15171:12:8","nodeType":"FunctionDefinition","parameters":{"id":2374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2371,"mutability":"mutable","name":"arr","nameLocation":"15202:3:8","nodeType":"VariableDeclaration","scope":2393,"src":"15184:21:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2369,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15184:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2370,"nodeType":"ArrayTypeName","src":"15184:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2373,"mutability":"mutable","name":"pos","nameLocation":"15215:3:8","nodeType":"VariableDeclaration","scope":2393,"src":"15207:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2372,"name":"uint256","nodeType":"ElementaryTypeName","src":"15207:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15183:36:8"},"returnParameters":{"id":2378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2393,"src":"15243:31:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2748_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2376,"nodeType":"UserDefinedTypeName","pathNode":{"id":2375,"name":"StorageSlot.Bytes32Slot","nameLocations":["15243:11:8","15255:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":2748,"src":"15243:23:8"},"referencedDeclaration":2748,"src":"15243:23:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2748_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"15242:33:8"},"scope":2492,"src":"15162:281:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2418,"nodeType":"Block","src":"15759:167:8","statements":[{"assignments":[2406],"declarations":[{"constant":false,"id":2406,"mutability":"mutable","name":"slot","nameLocation":"15777:4:8","nodeType":"VariableDeclaration","scope":2418,"src":"15769:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2405,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15769:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2407,"nodeType":"VariableDeclarationStatement","src":"15769:12:8"},{"AST":{"nativeSrc":"15816:40:8","nodeType":"YulBlock","src":"15816:40:8","statements":[{"nativeSrc":"15830:16:8","nodeType":"YulAssignment","src":"15830:16:8","value":{"name":"arr.slot","nativeSrc":"15838:8:8","nodeType":"YulIdentifier","src":"15838:8:8"},"variableNames":[{"name":"slot","nativeSrc":"15830:4:8","nodeType":"YulIdentifier","src":"15830:4:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2397,"isOffset":false,"isSlot":true,"src":"15838:8:8","suffix":"slot","valueSize":1},{"declaration":2406,"isOffset":false,"isSlot":false,"src":"15830:4:8","valueSize":1}],"flags":["memory-safe"],"id":2408,"nodeType":"InlineAssembly","src":"15791:65:8"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2413,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"15898:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2409,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"15872:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15877:11:8","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":2651,"src":"15872:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15891:6:8","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":2641,"src":"15872:25:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15903:14:8","memberName":"getUint256Slot","nodeType":"MemberAccess","referencedDeclaration":2804,"src":"15872:45:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$2751_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2751_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"functionReturnParameters":2404,"id":2417,"nodeType":"Return","src":"15865:54:8"}]},"documentation":{"id":2394,"nodeType":"StructuredDocumentation","src":"15449:191:8","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2419,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15654:12:8","nodeType":"FunctionDefinition","parameters":{"id":2400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2397,"mutability":"mutable","name":"arr","nameLocation":"15685:3:8","nodeType":"VariableDeclaration","scope":2419,"src":"15667:21:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2395,"name":"uint256","nodeType":"ElementaryTypeName","src":"15667:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2396,"nodeType":"ArrayTypeName","src":"15667:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2399,"mutability":"mutable","name":"pos","nameLocation":"15698:3:8","nodeType":"VariableDeclaration","scope":2419,"src":"15690:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2398,"name":"uint256","nodeType":"ElementaryTypeName","src":"15690:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15666:36:8"},"returnParameters":{"id":2404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2419,"src":"15726:31:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2751_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2402,"nodeType":"UserDefinedTypeName","pathNode":{"id":2401,"name":"StorageSlot.Uint256Slot","nameLocations":["15726:11:8","15738:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":2751,"src":"15726:23:8"},"referencedDeclaration":2751,"src":"15726:23:8","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2751_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"15725:33:8"},"scope":2492,"src":"15645:281:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2431,"nodeType":"Block","src":"16227:98:8","statements":[{"AST":{"nativeSrc":"16246:73:8","nodeType":"YulBlock","src":"16246:73:8","statements":[{"nativeSrc":"16260:49:8","nodeType":"YulAssignment","src":"16260:49:8","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"16281:3:8","nodeType":"YulIdentifier","src":"16281:3:8"},{"kind":"number","nativeSrc":"16286:4:8","nodeType":"YulLiteral","src":"16286:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16277:3:8","nodeType":"YulIdentifier","src":"16277:3:8"},"nativeSrc":"16277:14:8","nodeType":"YulFunctionCall","src":"16277:14:8"},{"arguments":[{"name":"pos","nativeSrc":"16297:3:8","nodeType":"YulIdentifier","src":"16297:3:8"},{"kind":"number","nativeSrc":"16302:4:8","nodeType":"YulLiteral","src":"16302:4:8","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"16293:3:8","nodeType":"YulIdentifier","src":"16293:3:8"},"nativeSrc":"16293:14:8","nodeType":"YulFunctionCall","src":"16293:14:8"}],"functionName":{"name":"add","nativeSrc":"16273:3:8","nodeType":"YulIdentifier","src":"16273:3:8"},"nativeSrc":"16273:35:8","nodeType":"YulFunctionCall","src":"16273:35:8"}],"functionName":{"name":"mload","nativeSrc":"16267:5:8","nodeType":"YulIdentifier","src":"16267:5:8"},"nativeSrc":"16267:42:8","nodeType":"YulFunctionCall","src":"16267:42:8"},"variableNames":[{"name":"res","nativeSrc":"16260:3:8","nodeType":"YulIdentifier","src":"16260:3:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2423,"isOffset":false,"isSlot":false,"src":"16281:3:8","valueSize":1},{"declaration":2425,"isOffset":false,"isSlot":false,"src":"16297:3:8","valueSize":1},{"declaration":2428,"isOffset":false,"isSlot":false,"src":"16260:3:8","valueSize":1}],"id":2430,"nodeType":"InlineAssembly","src":"16237:82:8"}]},"documentation":{"id":2420,"nodeType":"StructuredDocumentation","src":"15932:191:8","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2432,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16137:18:8","nodeType":"FunctionDefinition","parameters":{"id":2426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2423,"mutability":"mutable","name":"arr","nameLocation":"16173:3:8","nodeType":"VariableDeclaration","scope":2432,"src":"16156:20:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2421,"name":"address","nodeType":"ElementaryTypeName","src":"16156:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2422,"nodeType":"ArrayTypeName","src":"16156:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2425,"mutability":"mutable","name":"pos","nameLocation":"16186:3:8","nodeType":"VariableDeclaration","scope":2432,"src":"16178:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2424,"name":"uint256","nodeType":"ElementaryTypeName","src":"16178:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16155:35:8"},"returnParameters":{"id":2429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2428,"mutability":"mutable","name":"res","nameLocation":"16222:3:8","nodeType":"VariableDeclaration","scope":2432,"src":"16214:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2427,"name":"address","nodeType":"ElementaryTypeName","src":"16214:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16213:13:8"},"scope":2492,"src":"16128:197:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2444,"nodeType":"Block","src":"16626:98:8","statements":[{"AST":{"nativeSrc":"16645:73:8","nodeType":"YulBlock","src":"16645:73:8","statements":[{"nativeSrc":"16659:49:8","nodeType":"YulAssignment","src":"16659:49:8","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"16680:3:8","nodeType":"YulIdentifier","src":"16680:3:8"},{"kind":"number","nativeSrc":"16685:4:8","nodeType":"YulLiteral","src":"16685:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16676:3:8","nodeType":"YulIdentifier","src":"16676:3:8"},"nativeSrc":"16676:14:8","nodeType":"YulFunctionCall","src":"16676:14:8"},{"arguments":[{"name":"pos","nativeSrc":"16696:3:8","nodeType":"YulIdentifier","src":"16696:3:8"},{"kind":"number","nativeSrc":"16701:4:8","nodeType":"YulLiteral","src":"16701:4:8","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"16692:3:8","nodeType":"YulIdentifier","src":"16692:3:8"},"nativeSrc":"16692:14:8","nodeType":"YulFunctionCall","src":"16692:14:8"}],"functionName":{"name":"add","nativeSrc":"16672:3:8","nodeType":"YulIdentifier","src":"16672:3:8"},"nativeSrc":"16672:35:8","nodeType":"YulFunctionCall","src":"16672:35:8"}],"functionName":{"name":"mload","nativeSrc":"16666:5:8","nodeType":"YulIdentifier","src":"16666:5:8"},"nativeSrc":"16666:42:8","nodeType":"YulFunctionCall","src":"16666:42:8"},"variableNames":[{"name":"res","nativeSrc":"16659:3:8","nodeType":"YulIdentifier","src":"16659:3:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2436,"isOffset":false,"isSlot":false,"src":"16680:3:8","valueSize":1},{"declaration":2438,"isOffset":false,"isSlot":false,"src":"16696:3:8","valueSize":1},{"declaration":2441,"isOffset":false,"isSlot":false,"src":"16659:3:8","valueSize":1}],"id":2443,"nodeType":"InlineAssembly","src":"16636:82:8"}]},"documentation":{"id":2433,"nodeType":"StructuredDocumentation","src":"16331:191:8","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2445,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16536:18:8","nodeType":"FunctionDefinition","parameters":{"id":2439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2436,"mutability":"mutable","name":"arr","nameLocation":"16572:3:8","nodeType":"VariableDeclaration","scope":2445,"src":"16555:20:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2434,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16555:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2435,"nodeType":"ArrayTypeName","src":"16555:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2438,"mutability":"mutable","name":"pos","nameLocation":"16585:3:8","nodeType":"VariableDeclaration","scope":2445,"src":"16577:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2437,"name":"uint256","nodeType":"ElementaryTypeName","src":"16577:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16554:35:8"},"returnParameters":{"id":2442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2441,"mutability":"mutable","name":"res","nameLocation":"16621:3:8","nodeType":"VariableDeclaration","scope":2445,"src":"16613:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2440,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16613:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16612:13:8"},"scope":2492,"src":"16527:197:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2457,"nodeType":"Block","src":"17025:98:8","statements":[{"AST":{"nativeSrc":"17044:73:8","nodeType":"YulBlock","src":"17044:73:8","statements":[{"nativeSrc":"17058:49:8","nodeType":"YulAssignment","src":"17058:49:8","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"17079:3:8","nodeType":"YulIdentifier","src":"17079:3:8"},{"kind":"number","nativeSrc":"17084:4:8","nodeType":"YulLiteral","src":"17084:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17075:3:8","nodeType":"YulIdentifier","src":"17075:3:8"},"nativeSrc":"17075:14:8","nodeType":"YulFunctionCall","src":"17075:14:8"},{"arguments":[{"name":"pos","nativeSrc":"17095:3:8","nodeType":"YulIdentifier","src":"17095:3:8"},{"kind":"number","nativeSrc":"17100:4:8","nodeType":"YulLiteral","src":"17100:4:8","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"17091:3:8","nodeType":"YulIdentifier","src":"17091:3:8"},"nativeSrc":"17091:14:8","nodeType":"YulFunctionCall","src":"17091:14:8"}],"functionName":{"name":"add","nativeSrc":"17071:3:8","nodeType":"YulIdentifier","src":"17071:3:8"},"nativeSrc":"17071:35:8","nodeType":"YulFunctionCall","src":"17071:35:8"}],"functionName":{"name":"mload","nativeSrc":"17065:5:8","nodeType":"YulIdentifier","src":"17065:5:8"},"nativeSrc":"17065:42:8","nodeType":"YulFunctionCall","src":"17065:42:8"},"variableNames":[{"name":"res","nativeSrc":"17058:3:8","nodeType":"YulIdentifier","src":"17058:3:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2449,"isOffset":false,"isSlot":false,"src":"17079:3:8","valueSize":1},{"declaration":2451,"isOffset":false,"isSlot":false,"src":"17095:3:8","valueSize":1},{"declaration":2454,"isOffset":false,"isSlot":false,"src":"17058:3:8","valueSize":1}],"id":2456,"nodeType":"InlineAssembly","src":"17035:82:8"}]},"documentation":{"id":2446,"nodeType":"StructuredDocumentation","src":"16730:191:8","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2458,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16935:18:8","nodeType":"FunctionDefinition","parameters":{"id":2452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2449,"mutability":"mutable","name":"arr","nameLocation":"16971:3:8","nodeType":"VariableDeclaration","scope":2458,"src":"16954:20:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2447,"name":"uint256","nodeType":"ElementaryTypeName","src":"16954:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2448,"nodeType":"ArrayTypeName","src":"16954:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2451,"mutability":"mutable","name":"pos","nameLocation":"16984:3:8","nodeType":"VariableDeclaration","scope":2458,"src":"16976:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2450,"name":"uint256","nodeType":"ElementaryTypeName","src":"16976:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16953:35:8"},"returnParameters":{"id":2455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2454,"mutability":"mutable","name":"res","nameLocation":"17020:3:8","nodeType":"VariableDeclaration","scope":2458,"src":"17012:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2453,"name":"uint256","nodeType":"ElementaryTypeName","src":"17012:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17011:13:8"},"scope":2492,"src":"16926:197:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2468,"nodeType":"Block","src":"17440:88:8","statements":[{"AST":{"nativeSrc":"17475:47:8","nodeType":"YulBlock","src":"17475:47:8","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"17496:10:8","nodeType":"YulIdentifier","src":"17496:10:8"},{"name":"len","nativeSrc":"17508:3:8","nodeType":"YulIdentifier","src":"17508:3:8"}],"functionName":{"name":"sstore","nativeSrc":"17489:6:8","nodeType":"YulIdentifier","src":"17489:6:8"},"nativeSrc":"17489:23:8","nodeType":"YulFunctionCall","src":"17489:23:8"},"nativeSrc":"17489:23:8","nodeType":"YulExpressionStatement","src":"17489:23:8"}]},"evmVersion":"paris","externalReferences":[{"declaration":2462,"isOffset":false,"isSlot":true,"src":"17496:10:8","suffix":"slot","valueSize":1},{"declaration":2464,"isOffset":false,"isSlot":false,"src":"17508:3:8","valueSize":1}],"flags":["memory-safe"],"id":2467,"nodeType":"InlineAssembly","src":"17450:72:8"}]},"documentation":{"id":2459,"nodeType":"StructuredDocumentation","src":"17129:234:8","text":" @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":2469,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17377:15:8","nodeType":"FunctionDefinition","parameters":{"id":2465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2462,"mutability":"mutable","name":"array","nameLocation":"17411:5:8","nodeType":"VariableDeclaration","scope":2469,"src":"17393:23:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2460,"name":"address","nodeType":"ElementaryTypeName","src":"17393:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2461,"nodeType":"ArrayTypeName","src":"17393:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2464,"mutability":"mutable","name":"len","nameLocation":"17426:3:8","nodeType":"VariableDeclaration","scope":2469,"src":"17418:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2463,"name":"uint256","nodeType":"ElementaryTypeName","src":"17418:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17392:38:8"},"returnParameters":{"id":2466,"nodeType":"ParameterList","parameters":[],"src":"17440:0:8"},"scope":2492,"src":"17368:160:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2479,"nodeType":"Block","src":"17845:88:8","statements":[{"AST":{"nativeSrc":"17880:47:8","nodeType":"YulBlock","src":"17880:47:8","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"17901:10:8","nodeType":"YulIdentifier","src":"17901:10:8"},{"name":"len","nativeSrc":"17913:3:8","nodeType":"YulIdentifier","src":"17913:3:8"}],"functionName":{"name":"sstore","nativeSrc":"17894:6:8","nodeType":"YulIdentifier","src":"17894:6:8"},"nativeSrc":"17894:23:8","nodeType":"YulFunctionCall","src":"17894:23:8"},"nativeSrc":"17894:23:8","nodeType":"YulExpressionStatement","src":"17894:23:8"}]},"evmVersion":"paris","externalReferences":[{"declaration":2473,"isOffset":false,"isSlot":true,"src":"17901:10:8","suffix":"slot","valueSize":1},{"declaration":2475,"isOffset":false,"isSlot":false,"src":"17913:3:8","valueSize":1}],"flags":["memory-safe"],"id":2478,"nodeType":"InlineAssembly","src":"17855:72:8"}]},"documentation":{"id":2470,"nodeType":"StructuredDocumentation","src":"17534:234:8","text":" @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":2480,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17782:15:8","nodeType":"FunctionDefinition","parameters":{"id":2476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2473,"mutability":"mutable","name":"array","nameLocation":"17816:5:8","nodeType":"VariableDeclaration","scope":2480,"src":"17798:23:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2471,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17798:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2472,"nodeType":"ArrayTypeName","src":"17798:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2475,"mutability":"mutable","name":"len","nameLocation":"17831:3:8","nodeType":"VariableDeclaration","scope":2480,"src":"17823:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2474,"name":"uint256","nodeType":"ElementaryTypeName","src":"17823:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17797:38:8"},"returnParameters":{"id":2477,"nodeType":"ParameterList","parameters":[],"src":"17845:0:8"},"scope":2492,"src":"17773:160:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2490,"nodeType":"Block","src":"18250:88:8","statements":[{"AST":{"nativeSrc":"18285:47:8","nodeType":"YulBlock","src":"18285:47:8","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"18306:10:8","nodeType":"YulIdentifier","src":"18306:10:8"},{"name":"len","nativeSrc":"18318:3:8","nodeType":"YulIdentifier","src":"18318:3:8"}],"functionName":{"name":"sstore","nativeSrc":"18299:6:8","nodeType":"YulIdentifier","src":"18299:6:8"},"nativeSrc":"18299:23:8","nodeType":"YulFunctionCall","src":"18299:23:8"},"nativeSrc":"18299:23:8","nodeType":"YulExpressionStatement","src":"18299:23:8"}]},"evmVersion":"paris","externalReferences":[{"declaration":2484,"isOffset":false,"isSlot":true,"src":"18306:10:8","suffix":"slot","valueSize":1},{"declaration":2486,"isOffset":false,"isSlot":false,"src":"18318:3:8","valueSize":1}],"flags":["memory-safe"],"id":2489,"nodeType":"InlineAssembly","src":"18260:72:8"}]},"documentation":{"id":2481,"nodeType":"StructuredDocumentation","src":"17939:234:8","text":" @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":2491,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"18187:15:8","nodeType":"FunctionDefinition","parameters":{"id":2487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2484,"mutability":"mutable","name":"array","nameLocation":"18221:5:8","nodeType":"VariableDeclaration","scope":2491,"src":"18203:23:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2482,"name":"uint256","nodeType":"ElementaryTypeName","src":"18203:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2483,"nodeType":"ArrayTypeName","src":"18203:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2486,"mutability":"mutable","name":"len","nameLocation":"18236:3:8","nodeType":"VariableDeclaration","scope":2491,"src":"18228:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2485,"name":"uint256","nodeType":"ElementaryTypeName","src":"18228:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18202:38:8"},"returnParameters":{"id":2488,"nodeType":"ParameterList","parameters":[],"src":"18250:0:8"},"scope":2492,"src":"18178:160:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2493,"src":"459:17881:8","usedErrors":[],"usedEvents":[]}],"src":"183:18158:8"},"id":8},"@openzeppelin/contracts/utils/Comparators.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","exportedSymbols":{"Comparators":[2524]},"id":2525,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2494,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"Comparators","contractDependencies":[],"contractKind":"library","documentation":{"id":2495,"nodeType":"StructuredDocumentation","src":"131:92:9","text":" @dev Provides a set of functions to compare values.\n _Available since v5.1._"},"fullyImplemented":true,"id":2524,"linearizedBaseContracts":[2524],"name":"Comparators","nameLocation":"232:11:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":2508,"nodeType":"Block","src":"313:29:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2504,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"330:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2505,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"334:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"330:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2503,"id":2507,"nodeType":"Return","src":"323:12:9"}]},"id":2509,"implemented":true,"kind":"function","modifiers":[],"name":"lt","nameLocation":"259:2:9","nodeType":"FunctionDefinition","parameters":{"id":2500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2497,"mutability":"mutable","name":"a","nameLocation":"270:1:9","nodeType":"VariableDeclaration","scope":2509,"src":"262:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2496,"name":"uint256","nodeType":"ElementaryTypeName","src":"262:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2499,"mutability":"mutable","name":"b","nameLocation":"281:1:9","nodeType":"VariableDeclaration","scope":2509,"src":"273:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2498,"name":"uint256","nodeType":"ElementaryTypeName","src":"273:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"261:22:9"},"returnParameters":{"id":2503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2509,"src":"307:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2501,"name":"bool","nodeType":"ElementaryTypeName","src":"307:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"306:6:9"},"scope":2524,"src":"250:92:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2522,"nodeType":"Block","src":"411:29:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2518,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"428:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2519,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"432:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"428:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2517,"id":2521,"nodeType":"Return","src":"421:12:9"}]},"id":2523,"implemented":true,"kind":"function","modifiers":[],"name":"gt","nameLocation":"357:2:9","nodeType":"FunctionDefinition","parameters":{"id":2514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2511,"mutability":"mutable","name":"a","nameLocation":"368:1:9","nodeType":"VariableDeclaration","scope":2523,"src":"360:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2510,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2513,"mutability":"mutable","name":"b","nameLocation":"379:1:9","nodeType":"VariableDeclaration","scope":2523,"src":"371:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2512,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"359:22:9"},"returnParameters":{"id":2517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2523,"src":"405:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2515,"name":"bool","nodeType":"ElementaryTypeName","src":"405:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"404:6:9"},"scope":2524,"src":"348:92:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2525,"src":"224:218:9","usedErrors":[],"usedEvents":[]}],"src":"105:338:9"},"id":9},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2554]},"id":2555,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2526,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:10"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2527,"nodeType":"StructuredDocumentation","src":"127:496:10","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2554,"linearizedBaseContracts":[2554],"name":"Context","nameLocation":"642:7:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":2535,"nodeType":"Block","src":"718:34:10","statements":[{"expression":{"expression":{"id":2532,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:10","memberName":"sender","nodeType":"MemberAccess","src":"735:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2531,"id":2534,"nodeType":"Return","src":"728:17:10"}]},"id":2536,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:10","nodeType":"FunctionDefinition","parameters":{"id":2528,"nodeType":"ParameterList","parameters":[],"src":"675:2:10"},"returnParameters":{"id":2531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2536,"src":"709:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2529,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:10"},"scope":2554,"src":"656:96:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2544,"nodeType":"Block","src":"825:32:10","statements":[{"expression":{"expression":{"id":2541,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:10","memberName":"data","nodeType":"MemberAccess","src":"842:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2540,"id":2543,"nodeType":"Return","src":"835:15:10"}]},"id":2545,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:10","nodeType":"FunctionDefinition","parameters":{"id":2537,"nodeType":"ParameterList","parameters":[],"src":"775:2:10"},"returnParameters":{"id":2540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2545,"src":"809:14:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2538,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:10"},"scope":2554,"src":"758:99:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2552,"nodeType":"Block","src":"935:25:10","statements":[{"expression":{"hexValue":"30","id":2550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2549,"id":2551,"nodeType":"Return","src":"945:8:10"}]},"id":2553,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:10","nodeType":"FunctionDefinition","parameters":{"id":2546,"nodeType":"ParameterList","parameters":[],"src":"892:2:10"},"returnParameters":{"id":2549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2553,"src":"926:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2547,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:10"},"scope":2554,"src":"863:97:10","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2555,"src":"624:338:10","usedErrors":[],"usedEvents":[]}],"src":"101:862:10"},"id":10},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[2606]},"id":2607,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2556,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":2557,"nodeType":"StructuredDocumentation","src":"125:489:11","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":2606,"linearizedBaseContracts":[2606],"name":"Panic","nameLocation":"665:5:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2558,"nodeType":"StructuredDocumentation","src":"677:36:11","text":"@dev generic / unspecified error"},"id":2561,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:11","nodeType":"VariableDeclaration","scope":2606,"src":"718:40:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2559,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":2560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":2562,"nodeType":"StructuredDocumentation","src":"764:37:11","text":"@dev used by the assert() builtin"},"id":2565,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:11","nodeType":"VariableDeclaration","scope":2606,"src":"806:39:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2563,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":2564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":2566,"nodeType":"StructuredDocumentation","src":"851:41:11","text":"@dev arithmetic underflow or overflow"},"id":2569,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:11","nodeType":"VariableDeclaration","scope":2606,"src":"897:47:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2567,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":2568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:11","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":2570,"nodeType":"StructuredDocumentation","src":"950:35:11","text":"@dev division or modulo by zero"},"id":2573,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:11","nodeType":"VariableDeclaration","scope":2606,"src":"990:49:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2571,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":2572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:11","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":2574,"nodeType":"StructuredDocumentation","src":"1045:30:11","text":"@dev enum conversion error"},"id":2577,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:11","nodeType":"VariableDeclaration","scope":2606,"src":"1080:54:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2575,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":2576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:11","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":2578,"nodeType":"StructuredDocumentation","src":"1140:36:11","text":"@dev invalid encoding in storage"},"id":2581,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:11","nodeType":"VariableDeclaration","scope":2606,"src":"1181:55:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2579,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":2580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:11","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":2582,"nodeType":"StructuredDocumentation","src":"1242:24:11","text":"@dev empty array pop"},"id":2585,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:11","nodeType":"VariableDeclaration","scope":2606,"src":"1271:48:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2583,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":2584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:11","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":2586,"nodeType":"StructuredDocumentation","src":"1325:35:11","text":"@dev array out of bounds access"},"id":2589,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:11","nodeType":"VariableDeclaration","scope":2606,"src":"1365:52:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2587,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":2588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:11","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":2590,"nodeType":"StructuredDocumentation","src":"1423:65:11","text":"@dev resource error (too large allocation or too large array)"},"id":2593,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:11","nodeType":"VariableDeclaration","scope":2606,"src":"1493:47:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2591,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":2592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:11","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":2594,"nodeType":"StructuredDocumentation","src":"1546:42:11","text":"@dev calling invalid internal function"},"id":2597,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:11","nodeType":"VariableDeclaration","scope":2606,"src":"1593:58:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2595,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":2596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:11","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":2604,"nodeType":"Block","src":"1819:151:11","statements":[{"AST":{"nativeSrc":"1854:110:11","nodeType":"YulBlock","src":"1854:110:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:11","nodeType":"YulLiteral","src":"1875:4:11","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:11","nodeType":"YulLiteral","src":"1881:10:11","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:11","nodeType":"YulIdentifier","src":"1868:6:11"},"nativeSrc":"1868:24:11","nodeType":"YulFunctionCall","src":"1868:24:11"},"nativeSrc":"1868:24:11","nodeType":"YulExpressionStatement","src":"1868:24:11"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:11","nodeType":"YulLiteral","src":"1912:4:11","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:11","nodeType":"YulIdentifier","src":"1918:4:11"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:11","nodeType":"YulIdentifier","src":"1905:6:11"},"nativeSrc":"1905:18:11","nodeType":"YulFunctionCall","src":"1905:18:11"},"nativeSrc":"1905:18:11","nodeType":"YulExpressionStatement","src":"1905:18:11"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:11","nodeType":"YulLiteral","src":"1943:4:11","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:11","nodeType":"YulLiteral","src":"1949:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:11","nodeType":"YulIdentifier","src":"1936:6:11"},"nativeSrc":"1936:18:11","nodeType":"YulFunctionCall","src":"1936:18:11"},"nativeSrc":"1936:18:11","nodeType":"YulExpressionStatement","src":"1936:18:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":2600,"isOffset":false,"isSlot":false,"src":"1918:4:11","valueSize":1}],"flags":["memory-safe"],"id":2603,"nodeType":"InlineAssembly","src":"1829:135:11"}]},"documentation":{"id":2598,"nodeType":"StructuredDocumentation","src":"1658:113:11","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":2605,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:11","nodeType":"FunctionDefinition","parameters":{"id":2601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2600,"mutability":"mutable","name":"code","nameLocation":"1799:4:11","nodeType":"VariableDeclaration","scope":2605,"src":"1791:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2599,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:11"},"returnParameters":{"id":2602,"nodeType":"ParameterList","parameters":[],"src":"1819:0:11"},"scope":2606,"src":"1776:194:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2607,"src":"657:1315:11","usedErrors":[],"usedEvents":[]}],"src":"99:1874:11"},"id":11},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","exportedSymbols":{"SlotDerivation":[2736]},"id":2737,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2608,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"199:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"SlotDerivation","contractDependencies":[],"contractKind":"library","documentation":{"id":2609,"nodeType":"StructuredDocumentation","src":"225:1372:12","text":" @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n the solidity language / compiler.\n See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n Example usage:\n ```solidity\n contract Example {\n     // Add the library methods\n     using StorageSlot for bytes32;\n     using SlotDerivation for bytes32;\n     // Declare a namespace\n     string private constant _NAMESPACE = \"<namespace>\" // eg. OpenZeppelin.Slot\n     function setValueInNamespace(uint256 key, address newValue) internal {\n         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n     }\n     function getValueInNamespace(uint256 key) internal view returns (address) {\n         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n     }\n }\n ```\n TIP: Consider using this library along with {StorageSlot}.\n NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n upgrade safety will ignore the slots accessed through this library.\n _Available since v5.1._"},"fullyImplemented":true,"id":2736,"linearizedBaseContracts":[2736],"name":"SlotDerivation","nameLocation":"1606:14:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":2618,"nodeType":"Block","src":"1789:194:12","statements":[{"AST":{"nativeSrc":"1824:153:12","nodeType":"YulBlock","src":"1824:153:12","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1845:4:12","nodeType":"YulLiteral","src":"1845:4:12","type":"","value":"0x00"},{"arguments":[{"arguments":[{"arguments":[{"name":"namespace","nativeSrc":"1869:9:12","nodeType":"YulIdentifier","src":"1869:9:12"},{"kind":"number","nativeSrc":"1880:4:12","nodeType":"YulLiteral","src":"1880:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1865:3:12","nodeType":"YulIdentifier","src":"1865:3:12"},"nativeSrc":"1865:20:12","nodeType":"YulFunctionCall","src":"1865:20:12"},{"arguments":[{"name":"namespace","nativeSrc":"1893:9:12","nodeType":"YulIdentifier","src":"1893:9:12"}],"functionName":{"name":"mload","nativeSrc":"1887:5:12","nodeType":"YulIdentifier","src":"1887:5:12"},"nativeSrc":"1887:16:12","nodeType":"YulFunctionCall","src":"1887:16:12"}],"functionName":{"name":"keccak256","nativeSrc":"1855:9:12","nodeType":"YulIdentifier","src":"1855:9:12"},"nativeSrc":"1855:49:12","nodeType":"YulFunctionCall","src":"1855:49:12"},{"kind":"number","nativeSrc":"1906:1:12","nodeType":"YulLiteral","src":"1906:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1851:3:12","nodeType":"YulIdentifier","src":"1851:3:12"},"nativeSrc":"1851:57:12","nodeType":"YulFunctionCall","src":"1851:57:12"}],"functionName":{"name":"mstore","nativeSrc":"1838:6:12","nodeType":"YulIdentifier","src":"1838:6:12"},"nativeSrc":"1838:71:12","nodeType":"YulFunctionCall","src":"1838:71:12"},"nativeSrc":"1838:71:12","nodeType":"YulExpressionStatement","src":"1838:71:12"},{"nativeSrc":"1922:45:12","nodeType":"YulAssignment","src":"1922:45:12","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1944:4:12","nodeType":"YulLiteral","src":"1944:4:12","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1950:4:12","nodeType":"YulLiteral","src":"1950:4:12","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"1934:9:12","nodeType":"YulIdentifier","src":"1934:9:12"},"nativeSrc":"1934:21:12","nodeType":"YulFunctionCall","src":"1934:21:12"},{"arguments":[{"kind":"number","nativeSrc":"1961:4:12","nodeType":"YulLiteral","src":"1961:4:12","type":"","value":"0xff"}],"functionName":{"name":"not","nativeSrc":"1957:3:12","nodeType":"YulIdentifier","src":"1957:3:12"},"nativeSrc":"1957:9:12","nodeType":"YulFunctionCall","src":"1957:9:12"}],"functionName":{"name":"and","nativeSrc":"1930:3:12","nodeType":"YulIdentifier","src":"1930:3:12"},"nativeSrc":"1930:37:12","nodeType":"YulFunctionCall","src":"1930:37:12"},"variableNames":[{"name":"slot","nativeSrc":"1922:4:12","nodeType":"YulIdentifier","src":"1922:4:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2612,"isOffset":false,"isSlot":false,"src":"1869:9:12","valueSize":1},{"declaration":2612,"isOffset":false,"isSlot":false,"src":"1893:9:12","valueSize":1},{"declaration":2615,"isOffset":false,"isSlot":false,"src":"1922:4:12","valueSize":1}],"flags":["memory-safe"],"id":2617,"nodeType":"InlineAssembly","src":"1799:178:12"}]},"documentation":{"id":2610,"nodeType":"StructuredDocumentation","src":"1627:74:12","text":" @dev Derive an ERC-7201 slot from a string (namespace)."},"id":2619,"implemented":true,"kind":"function","modifiers":[],"name":"erc7201Slot","nameLocation":"1715:11:12","nodeType":"FunctionDefinition","parameters":{"id":2613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2612,"mutability":"mutable","name":"namespace","nameLocation":"1741:9:12","nodeType":"VariableDeclaration","scope":2619,"src":"1727:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2611,"name":"string","nodeType":"ElementaryTypeName","src":"1727:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1726:25:12"},"returnParameters":{"id":2616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2615,"mutability":"mutable","name":"slot","nameLocation":"1783:4:12","nodeType":"VariableDeclaration","scope":2619,"src":"1775:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2614,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1775:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1774:14:12"},"scope":2736,"src":"1706:277:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2640,"nodeType":"Block","src":"2175:86:12","statements":[{"id":2639,"nodeType":"UncheckedBlock","src":"2185:70:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2633,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"2232:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2224:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2631,"name":"uint256","nodeType":"ElementaryTypeName","src":"2224:7:12","typeDescriptions":{}}},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2224:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2635,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"2240:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2224:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2216:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2629,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2216:7:12","typeDescriptions":{}}},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2216:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2628,"id":2638,"nodeType":"Return","src":"2209:35:12"}]}]},"documentation":{"id":2620,"nodeType":"StructuredDocumentation","src":"1989:99:12","text":" @dev Add an offset to a slot to get the n-th element of a structure or an array."},"id":2641,"implemented":true,"kind":"function","modifiers":[],"name":"offset","nameLocation":"2102:6:12","nodeType":"FunctionDefinition","parameters":{"id":2625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2622,"mutability":"mutable","name":"slot","nameLocation":"2117:4:12","nodeType":"VariableDeclaration","scope":2641,"src":"2109:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2621,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2109:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2624,"mutability":"mutable","name":"pos","nameLocation":"2131:3:12","nodeType":"VariableDeclaration","scope":2641,"src":"2123:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2623,"name":"uint256","nodeType":"ElementaryTypeName","src":"2123:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2108:27:12"},"returnParameters":{"id":2628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2627,"mutability":"mutable","name":"result","nameLocation":"2167:6:12","nodeType":"VariableDeclaration","scope":2641,"src":"2159:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2626,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2159:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2158:16:12"},"scope":2736,"src":"2093:168:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2650,"nodeType":"Block","src":"2464:127:12","statements":[{"AST":{"nativeSrc":"2499:86:12","nodeType":"YulBlock","src":"2499:86:12","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2520:4:12","nodeType":"YulLiteral","src":"2520:4:12","type":"","value":"0x00"},{"name":"slot","nativeSrc":"2526:4:12","nodeType":"YulIdentifier","src":"2526:4:12"}],"functionName":{"name":"mstore","nativeSrc":"2513:6:12","nodeType":"YulIdentifier","src":"2513:6:12"},"nativeSrc":"2513:18:12","nodeType":"YulFunctionCall","src":"2513:18:12"},"nativeSrc":"2513:18:12","nodeType":"YulExpressionStatement","src":"2513:18:12"},{"nativeSrc":"2544:31:12","nodeType":"YulAssignment","src":"2544:31:12","value":{"arguments":[{"kind":"number","nativeSrc":"2564:4:12","nodeType":"YulLiteral","src":"2564:4:12","type":"","value":"0x00"},{"kind":"number","nativeSrc":"2570:4:12","nodeType":"YulLiteral","src":"2570:4:12","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2554:9:12","nodeType":"YulIdentifier","src":"2554:9:12"},"nativeSrc":"2554:21:12","nodeType":"YulFunctionCall","src":"2554:21:12"},"variableNames":[{"name":"result","nativeSrc":"2544:6:12","nodeType":"YulIdentifier","src":"2544:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2647,"isOffset":false,"isSlot":false,"src":"2544:6:12","valueSize":1},{"declaration":2644,"isOffset":false,"isSlot":false,"src":"2526:4:12","valueSize":1}],"flags":["memory-safe"],"id":2649,"nodeType":"InlineAssembly","src":"2474:111:12"}]},"documentation":{"id":2642,"nodeType":"StructuredDocumentation","src":"2267:118:12","text":" @dev Derive the location of the first element in an array from the slot where the length is stored."},"id":2651,"implemented":true,"kind":"function","modifiers":[],"name":"deriveArray","nameLocation":"2399:11:12","nodeType":"FunctionDefinition","parameters":{"id":2645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2644,"mutability":"mutable","name":"slot","nameLocation":"2419:4:12","nodeType":"VariableDeclaration","scope":2651,"src":"2411:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2643,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2411:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2410:14:12"},"returnParameters":{"id":2648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2647,"mutability":"mutable","name":"result","nameLocation":"2456:6:12","nodeType":"VariableDeclaration","scope":2651,"src":"2448:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2646,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2448:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2447:16:12"},"scope":2736,"src":"2390:201:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2662,"nodeType":"Block","src":"2769:179:12","statements":[{"AST":{"nativeSrc":"2804:138:12","nodeType":"YulBlock","src":"2804:138:12","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2825:4:12","nodeType":"YulLiteral","src":"2825:4:12","type":"","value":"0x00"},{"arguments":[{"name":"key","nativeSrc":"2835:3:12","nodeType":"YulIdentifier","src":"2835:3:12"},{"arguments":[{"kind":"number","nativeSrc":"2844:2:12","nodeType":"YulLiteral","src":"2844:2:12","type":"","value":"96"},{"arguments":[{"kind":"number","nativeSrc":"2852:1:12","nodeType":"YulLiteral","src":"2852:1:12","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2848:3:12","nodeType":"YulIdentifier","src":"2848:3:12"},"nativeSrc":"2848:6:12","nodeType":"YulFunctionCall","src":"2848:6:12"}],"functionName":{"name":"shr","nativeSrc":"2840:3:12","nodeType":"YulIdentifier","src":"2840:3:12"},"nativeSrc":"2840:15:12","nodeType":"YulFunctionCall","src":"2840:15:12"}],"functionName":{"name":"and","nativeSrc":"2831:3:12","nodeType":"YulIdentifier","src":"2831:3:12"},"nativeSrc":"2831:25:12","nodeType":"YulFunctionCall","src":"2831:25:12"}],"functionName":{"name":"mstore","nativeSrc":"2818:6:12","nodeType":"YulIdentifier","src":"2818:6:12"},"nativeSrc":"2818:39:12","nodeType":"YulFunctionCall","src":"2818:39:12"},"nativeSrc":"2818:39:12","nodeType":"YulExpressionStatement","src":"2818:39:12"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2877:4:12","nodeType":"YulLiteral","src":"2877:4:12","type":"","value":"0x20"},{"name":"slot","nativeSrc":"2883:4:12","nodeType":"YulIdentifier","src":"2883:4:12"}],"functionName":{"name":"mstore","nativeSrc":"2870:6:12","nodeType":"YulIdentifier","src":"2870:6:12"},"nativeSrc":"2870:18:12","nodeType":"YulFunctionCall","src":"2870:18:12"},"nativeSrc":"2870:18:12","nodeType":"YulExpressionStatement","src":"2870:18:12"},{"nativeSrc":"2901:31:12","nodeType":"YulAssignment","src":"2901:31:12","value":{"arguments":[{"kind":"number","nativeSrc":"2921:4:12","nodeType":"YulLiteral","src":"2921:4:12","type":"","value":"0x00"},{"kind":"number","nativeSrc":"2927:4:12","nodeType":"YulLiteral","src":"2927:4:12","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"2911:9:12","nodeType":"YulIdentifier","src":"2911:9:12"},"nativeSrc":"2911:21:12","nodeType":"YulFunctionCall","src":"2911:21:12"},"variableNames":[{"name":"result","nativeSrc":"2901:6:12","nodeType":"YulIdentifier","src":"2901:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2656,"isOffset":false,"isSlot":false,"src":"2835:3:12","valueSize":1},{"declaration":2659,"isOffset":false,"isSlot":false,"src":"2901:6:12","valueSize":1},{"declaration":2654,"isOffset":false,"isSlot":false,"src":"2883:4:12","valueSize":1}],"flags":["memory-safe"],"id":2661,"nodeType":"InlineAssembly","src":"2779:163:12"}]},"documentation":{"id":2652,"nodeType":"StructuredDocumentation","src":"2597:78:12","text":" @dev Derive the location of a mapping element from the key."},"id":2663,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"2689:13:12","nodeType":"FunctionDefinition","parameters":{"id":2657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2654,"mutability":"mutable","name":"slot","nameLocation":"2711:4:12","nodeType":"VariableDeclaration","scope":2663,"src":"2703:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2653,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2656,"mutability":"mutable","name":"key","nameLocation":"2725:3:12","nodeType":"VariableDeclaration","scope":2663,"src":"2717:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2655,"name":"address","nodeType":"ElementaryTypeName","src":"2717:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2702:27:12"},"returnParameters":{"id":2660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2659,"mutability":"mutable","name":"result","nameLocation":"2761:6:12","nodeType":"VariableDeclaration","scope":2663,"src":"2753:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2658,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2753:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2752:16:12"},"scope":2736,"src":"2680:268:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2674,"nodeType":"Block","src":"3123:173:12","statements":[{"AST":{"nativeSrc":"3158:132:12","nodeType":"YulBlock","src":"3158:132:12","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3179:4:12","nodeType":"YulLiteral","src":"3179:4:12","type":"","value":"0x00"},{"arguments":[{"arguments":[{"name":"key","nativeSrc":"3199:3:12","nodeType":"YulIdentifier","src":"3199:3:12"}],"functionName":{"name":"iszero","nativeSrc":"3192:6:12","nodeType":"YulIdentifier","src":"3192:6:12"},"nativeSrc":"3192:11:12","nodeType":"YulFunctionCall","src":"3192:11:12"}],"functionName":{"name":"iszero","nativeSrc":"3185:6:12","nodeType":"YulIdentifier","src":"3185:6:12"},"nativeSrc":"3185:19:12","nodeType":"YulFunctionCall","src":"3185:19:12"}],"functionName":{"name":"mstore","nativeSrc":"3172:6:12","nodeType":"YulIdentifier","src":"3172:6:12"},"nativeSrc":"3172:33:12","nodeType":"YulFunctionCall","src":"3172:33:12"},"nativeSrc":"3172:33:12","nodeType":"YulExpressionStatement","src":"3172:33:12"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3225:4:12","nodeType":"YulLiteral","src":"3225:4:12","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3231:4:12","nodeType":"YulIdentifier","src":"3231:4:12"}],"functionName":{"name":"mstore","nativeSrc":"3218:6:12","nodeType":"YulIdentifier","src":"3218:6:12"},"nativeSrc":"3218:18:12","nodeType":"YulFunctionCall","src":"3218:18:12"},"nativeSrc":"3218:18:12","nodeType":"YulExpressionStatement","src":"3218:18:12"},{"nativeSrc":"3249:31:12","nodeType":"YulAssignment","src":"3249:31:12","value":{"arguments":[{"kind":"number","nativeSrc":"3269:4:12","nodeType":"YulLiteral","src":"3269:4:12","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3275:4:12","nodeType":"YulLiteral","src":"3275:4:12","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3259:9:12","nodeType":"YulIdentifier","src":"3259:9:12"},"nativeSrc":"3259:21:12","nodeType":"YulFunctionCall","src":"3259:21:12"},"variableNames":[{"name":"result","nativeSrc":"3249:6:12","nodeType":"YulIdentifier","src":"3249:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2668,"isOffset":false,"isSlot":false,"src":"3199:3:12","valueSize":1},{"declaration":2671,"isOffset":false,"isSlot":false,"src":"3249:6:12","valueSize":1},{"declaration":2666,"isOffset":false,"isSlot":false,"src":"3231:4:12","valueSize":1}],"flags":["memory-safe"],"id":2673,"nodeType":"InlineAssembly","src":"3133:157:12"}]},"documentation":{"id":2664,"nodeType":"StructuredDocumentation","src":"2954:78:12","text":" @dev Derive the location of a mapping element from the key."},"id":2675,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3046:13:12","nodeType":"FunctionDefinition","parameters":{"id":2669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2666,"mutability":"mutable","name":"slot","nameLocation":"3068:4:12","nodeType":"VariableDeclaration","scope":2675,"src":"3060:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2665,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3060:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2668,"mutability":"mutable","name":"key","nameLocation":"3079:3:12","nodeType":"VariableDeclaration","scope":2675,"src":"3074:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2667,"name":"bool","nodeType":"ElementaryTypeName","src":"3074:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3059:24:12"},"returnParameters":{"id":2672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2671,"mutability":"mutable","name":"result","nameLocation":"3115:6:12","nodeType":"VariableDeclaration","scope":2675,"src":"3107:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2670,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3107:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3106:16:12"},"scope":2736,"src":"3037:259:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2686,"nodeType":"Block","src":"3474:157:12","statements":[{"AST":{"nativeSrc":"3509:116:12","nodeType":"YulBlock","src":"3509:116:12","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3530:4:12","nodeType":"YulLiteral","src":"3530:4:12","type":"","value":"0x00"},{"name":"key","nativeSrc":"3536:3:12","nodeType":"YulIdentifier","src":"3536:3:12"}],"functionName":{"name":"mstore","nativeSrc":"3523:6:12","nodeType":"YulIdentifier","src":"3523:6:12"},"nativeSrc":"3523:17:12","nodeType":"YulFunctionCall","src":"3523:17:12"},"nativeSrc":"3523:17:12","nodeType":"YulExpressionStatement","src":"3523:17:12"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3560:4:12","nodeType":"YulLiteral","src":"3560:4:12","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3566:4:12","nodeType":"YulIdentifier","src":"3566:4:12"}],"functionName":{"name":"mstore","nativeSrc":"3553:6:12","nodeType":"YulIdentifier","src":"3553:6:12"},"nativeSrc":"3553:18:12","nodeType":"YulFunctionCall","src":"3553:18:12"},"nativeSrc":"3553:18:12","nodeType":"YulExpressionStatement","src":"3553:18:12"},{"nativeSrc":"3584:31:12","nodeType":"YulAssignment","src":"3584:31:12","value":{"arguments":[{"kind":"number","nativeSrc":"3604:4:12","nodeType":"YulLiteral","src":"3604:4:12","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3610:4:12","nodeType":"YulLiteral","src":"3610:4:12","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3594:9:12","nodeType":"YulIdentifier","src":"3594:9:12"},"nativeSrc":"3594:21:12","nodeType":"YulFunctionCall","src":"3594:21:12"},"variableNames":[{"name":"result","nativeSrc":"3584:6:12","nodeType":"YulIdentifier","src":"3584:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2680,"isOffset":false,"isSlot":false,"src":"3536:3:12","valueSize":1},{"declaration":2683,"isOffset":false,"isSlot":false,"src":"3584:6:12","valueSize":1},{"declaration":2678,"isOffset":false,"isSlot":false,"src":"3566:4:12","valueSize":1}],"flags":["memory-safe"],"id":2685,"nodeType":"InlineAssembly","src":"3484:141:12"}]},"documentation":{"id":2676,"nodeType":"StructuredDocumentation","src":"3302:78:12","text":" @dev Derive the location of a mapping element from the key."},"id":2687,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3394:13:12","nodeType":"FunctionDefinition","parameters":{"id":2681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2678,"mutability":"mutable","name":"slot","nameLocation":"3416:4:12","nodeType":"VariableDeclaration","scope":2687,"src":"3408:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2677,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3408:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2680,"mutability":"mutable","name":"key","nameLocation":"3430:3:12","nodeType":"VariableDeclaration","scope":2687,"src":"3422:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2679,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3422:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3407:27:12"},"returnParameters":{"id":2684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2683,"mutability":"mutable","name":"result","nameLocation":"3466:6:12","nodeType":"VariableDeclaration","scope":2687,"src":"3458:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2682,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3458:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3457:16:12"},"scope":2736,"src":"3385:246:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2698,"nodeType":"Block","src":"3809:157:12","statements":[{"AST":{"nativeSrc":"3844:116:12","nodeType":"YulBlock","src":"3844:116:12","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3865:4:12","nodeType":"YulLiteral","src":"3865:4:12","type":"","value":"0x00"},{"name":"key","nativeSrc":"3871:3:12","nodeType":"YulIdentifier","src":"3871:3:12"}],"functionName":{"name":"mstore","nativeSrc":"3858:6:12","nodeType":"YulIdentifier","src":"3858:6:12"},"nativeSrc":"3858:17:12","nodeType":"YulFunctionCall","src":"3858:17:12"},"nativeSrc":"3858:17:12","nodeType":"YulExpressionStatement","src":"3858:17:12"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3895:4:12","nodeType":"YulLiteral","src":"3895:4:12","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3901:4:12","nodeType":"YulIdentifier","src":"3901:4:12"}],"functionName":{"name":"mstore","nativeSrc":"3888:6:12","nodeType":"YulIdentifier","src":"3888:6:12"},"nativeSrc":"3888:18:12","nodeType":"YulFunctionCall","src":"3888:18:12"},"nativeSrc":"3888:18:12","nodeType":"YulExpressionStatement","src":"3888:18:12"},{"nativeSrc":"3919:31:12","nodeType":"YulAssignment","src":"3919:31:12","value":{"arguments":[{"kind":"number","nativeSrc":"3939:4:12","nodeType":"YulLiteral","src":"3939:4:12","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3945:4:12","nodeType":"YulLiteral","src":"3945:4:12","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3929:9:12","nodeType":"YulIdentifier","src":"3929:9:12"},"nativeSrc":"3929:21:12","nodeType":"YulFunctionCall","src":"3929:21:12"},"variableNames":[{"name":"result","nativeSrc":"3919:6:12","nodeType":"YulIdentifier","src":"3919:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2692,"isOffset":false,"isSlot":false,"src":"3871:3:12","valueSize":1},{"declaration":2695,"isOffset":false,"isSlot":false,"src":"3919:6:12","valueSize":1},{"declaration":2690,"isOffset":false,"isSlot":false,"src":"3901:4:12","valueSize":1}],"flags":["memory-safe"],"id":2697,"nodeType":"InlineAssembly","src":"3819:141:12"}]},"documentation":{"id":2688,"nodeType":"StructuredDocumentation","src":"3637:78:12","text":" @dev Derive the location of a mapping element from the key."},"id":2699,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3729:13:12","nodeType":"FunctionDefinition","parameters":{"id":2693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2690,"mutability":"mutable","name":"slot","nameLocation":"3751:4:12","nodeType":"VariableDeclaration","scope":2699,"src":"3743:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2689,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3743:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2692,"mutability":"mutable","name":"key","nameLocation":"3765:3:12","nodeType":"VariableDeclaration","scope":2699,"src":"3757:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2691,"name":"uint256","nodeType":"ElementaryTypeName","src":"3757:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3742:27:12"},"returnParameters":{"id":2696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2695,"mutability":"mutable","name":"result","nameLocation":"3801:6:12","nodeType":"VariableDeclaration","scope":2699,"src":"3793:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2694,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3793:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3792:16:12"},"scope":2736,"src":"3720:246:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2710,"nodeType":"Block","src":"4143:157:12","statements":[{"AST":{"nativeSrc":"4178:116:12","nodeType":"YulBlock","src":"4178:116:12","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4199:4:12","nodeType":"YulLiteral","src":"4199:4:12","type":"","value":"0x00"},{"name":"key","nativeSrc":"4205:3:12","nodeType":"YulIdentifier","src":"4205:3:12"}],"functionName":{"name":"mstore","nativeSrc":"4192:6:12","nodeType":"YulIdentifier","src":"4192:6:12"},"nativeSrc":"4192:17:12","nodeType":"YulFunctionCall","src":"4192:17:12"},"nativeSrc":"4192:17:12","nodeType":"YulExpressionStatement","src":"4192:17:12"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4229:4:12","nodeType":"YulLiteral","src":"4229:4:12","type":"","value":"0x20"},{"name":"slot","nativeSrc":"4235:4:12","nodeType":"YulIdentifier","src":"4235:4:12"}],"functionName":{"name":"mstore","nativeSrc":"4222:6:12","nodeType":"YulIdentifier","src":"4222:6:12"},"nativeSrc":"4222:18:12","nodeType":"YulFunctionCall","src":"4222:18:12"},"nativeSrc":"4222:18:12","nodeType":"YulExpressionStatement","src":"4222:18:12"},{"nativeSrc":"4253:31:12","nodeType":"YulAssignment","src":"4253:31:12","value":{"arguments":[{"kind":"number","nativeSrc":"4273:4:12","nodeType":"YulLiteral","src":"4273:4:12","type":"","value":"0x00"},{"kind":"number","nativeSrc":"4279:4:12","nodeType":"YulLiteral","src":"4279:4:12","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"4263:9:12","nodeType":"YulIdentifier","src":"4263:9:12"},"nativeSrc":"4263:21:12","nodeType":"YulFunctionCall","src":"4263:21:12"},"variableNames":[{"name":"result","nativeSrc":"4253:6:12","nodeType":"YulIdentifier","src":"4253:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2704,"isOffset":false,"isSlot":false,"src":"4205:3:12","valueSize":1},{"declaration":2707,"isOffset":false,"isSlot":false,"src":"4253:6:12","valueSize":1},{"declaration":2702,"isOffset":false,"isSlot":false,"src":"4235:4:12","valueSize":1}],"flags":["memory-safe"],"id":2709,"nodeType":"InlineAssembly","src":"4153:141:12"}]},"documentation":{"id":2700,"nodeType":"StructuredDocumentation","src":"3972:78:12","text":" @dev Derive the location of a mapping element from the key."},"id":2711,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4064:13:12","nodeType":"FunctionDefinition","parameters":{"id":2705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2702,"mutability":"mutable","name":"slot","nameLocation":"4086:4:12","nodeType":"VariableDeclaration","scope":2711,"src":"4078:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2701,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4078:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2704,"mutability":"mutable","name":"key","nameLocation":"4099:3:12","nodeType":"VariableDeclaration","scope":2711,"src":"4092:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2703,"name":"int256","nodeType":"ElementaryTypeName","src":"4092:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4077:26:12"},"returnParameters":{"id":2708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2707,"mutability":"mutable","name":"result","nameLocation":"4135:6:12","nodeType":"VariableDeclaration","scope":2711,"src":"4127:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2706,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4127:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4126:16:12"},"scope":2736,"src":"4055:245:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2722,"nodeType":"Block","src":"4484:326:12","statements":[{"AST":{"nativeSrc":"4519:285:12","nodeType":"YulBlock","src":"4519:285:12","statements":[{"nativeSrc":"4533:24:12","nodeType":"YulVariableDeclaration","src":"4533:24:12","value":{"arguments":[{"name":"key","nativeSrc":"4553:3:12","nodeType":"YulIdentifier","src":"4553:3:12"}],"functionName":{"name":"mload","nativeSrc":"4547:5:12","nodeType":"YulIdentifier","src":"4547:5:12"},"nativeSrc":"4547:10:12","nodeType":"YulFunctionCall","src":"4547:10:12"},"variables":[{"name":"length","nativeSrc":"4537:6:12","nodeType":"YulTypedName","src":"4537:6:12","type":""}]},{"nativeSrc":"4570:27:12","nodeType":"YulVariableDeclaration","src":"4570:27:12","value":{"arguments":[{"name":"key","nativeSrc":"4587:3:12","nodeType":"YulIdentifier","src":"4587:3:12"},{"kind":"number","nativeSrc":"4592:4:12","nodeType":"YulLiteral","src":"4592:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4583:3:12","nodeType":"YulIdentifier","src":"4583:3:12"},"nativeSrc":"4583:14:12","nodeType":"YulFunctionCall","src":"4583:14:12"},"variables":[{"name":"begin","nativeSrc":"4574:5:12","nodeType":"YulTypedName","src":"4574:5:12","type":""}]},{"nativeSrc":"4610:29:12","nodeType":"YulVariableDeclaration","src":"4610:29:12","value":{"arguments":[{"name":"begin","nativeSrc":"4625:5:12","nodeType":"YulIdentifier","src":"4625:5:12"},{"name":"length","nativeSrc":"4632:6:12","nodeType":"YulIdentifier","src":"4632:6:12"}],"functionName":{"name":"add","nativeSrc":"4621:3:12","nodeType":"YulIdentifier","src":"4621:3:12"},"nativeSrc":"4621:18:12","nodeType":"YulFunctionCall","src":"4621:18:12"},"variables":[{"name":"end","nativeSrc":"4614:3:12","nodeType":"YulTypedName","src":"4614:3:12","type":""}]},{"nativeSrc":"4652:23:12","nodeType":"YulVariableDeclaration","src":"4652:23:12","value":{"arguments":[{"name":"end","nativeSrc":"4671:3:12","nodeType":"YulIdentifier","src":"4671:3:12"}],"functionName":{"name":"mload","nativeSrc":"4665:5:12","nodeType":"YulIdentifier","src":"4665:5:12"},"nativeSrc":"4665:10:12","nodeType":"YulFunctionCall","src":"4665:10:12"},"variables":[{"name":"cache","nativeSrc":"4656:5:12","nodeType":"YulTypedName","src":"4656:5:12","type":""}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"4695:3:12","nodeType":"YulIdentifier","src":"4695:3:12"},{"name":"slot","nativeSrc":"4700:4:12","nodeType":"YulIdentifier","src":"4700:4:12"}],"functionName":{"name":"mstore","nativeSrc":"4688:6:12","nodeType":"YulIdentifier","src":"4688:6:12"},"nativeSrc":"4688:17:12","nodeType":"YulFunctionCall","src":"4688:17:12"},"nativeSrc":"4688:17:12","nodeType":"YulExpressionStatement","src":"4688:17:12"},{"nativeSrc":"4718:45:12","nodeType":"YulAssignment","src":"4718:45:12","value":{"arguments":[{"name":"begin","nativeSrc":"4738:5:12","nodeType":"YulIdentifier","src":"4738:5:12"},{"arguments":[{"name":"length","nativeSrc":"4749:6:12","nodeType":"YulIdentifier","src":"4749:6:12"},{"kind":"number","nativeSrc":"4757:4:12","nodeType":"YulLiteral","src":"4757:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4745:3:12","nodeType":"YulIdentifier","src":"4745:3:12"},"nativeSrc":"4745:17:12","nodeType":"YulFunctionCall","src":"4745:17:12"}],"functionName":{"name":"keccak256","nativeSrc":"4728:9:12","nodeType":"YulIdentifier","src":"4728:9:12"},"nativeSrc":"4728:35:12","nodeType":"YulFunctionCall","src":"4728:35:12"},"variableNames":[{"name":"result","nativeSrc":"4718:6:12","nodeType":"YulIdentifier","src":"4718:6:12"}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"4783:3:12","nodeType":"YulIdentifier","src":"4783:3:12"},{"name":"cache","nativeSrc":"4788:5:12","nodeType":"YulIdentifier","src":"4788:5:12"}],"functionName":{"name":"mstore","nativeSrc":"4776:6:12","nodeType":"YulIdentifier","src":"4776:6:12"},"nativeSrc":"4776:18:12","nodeType":"YulFunctionCall","src":"4776:18:12"},"nativeSrc":"4776:18:12","nodeType":"YulExpressionStatement","src":"4776:18:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":2716,"isOffset":false,"isSlot":false,"src":"4553:3:12","valueSize":1},{"declaration":2716,"isOffset":false,"isSlot":false,"src":"4587:3:12","valueSize":1},{"declaration":2719,"isOffset":false,"isSlot":false,"src":"4718:6:12","valueSize":1},{"declaration":2714,"isOffset":false,"isSlot":false,"src":"4700:4:12","valueSize":1}],"flags":["memory-safe"],"id":2721,"nodeType":"InlineAssembly","src":"4494:310:12"}]},"documentation":{"id":2712,"nodeType":"StructuredDocumentation","src":"4306:78:12","text":" @dev Derive the location of a mapping element from the key."},"id":2723,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4398:13:12","nodeType":"FunctionDefinition","parameters":{"id":2717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2714,"mutability":"mutable","name":"slot","nameLocation":"4420:4:12","nodeType":"VariableDeclaration","scope":2723,"src":"4412:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2713,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4412:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2716,"mutability":"mutable","name":"key","nameLocation":"4440:3:12","nodeType":"VariableDeclaration","scope":2723,"src":"4426:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2715,"name":"string","nodeType":"ElementaryTypeName","src":"4426:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4411:33:12"},"returnParameters":{"id":2720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2719,"mutability":"mutable","name":"result","nameLocation":"4476:6:12","nodeType":"VariableDeclaration","scope":2723,"src":"4468:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2718,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4468:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4467:16:12"},"scope":2736,"src":"4389:421:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2734,"nodeType":"Block","src":"4993:326:12","statements":[{"AST":{"nativeSrc":"5028:285:12","nodeType":"YulBlock","src":"5028:285:12","statements":[{"nativeSrc":"5042:24:12","nodeType":"YulVariableDeclaration","src":"5042:24:12","value":{"arguments":[{"name":"key","nativeSrc":"5062:3:12","nodeType":"YulIdentifier","src":"5062:3:12"}],"functionName":{"name":"mload","nativeSrc":"5056:5:12","nodeType":"YulIdentifier","src":"5056:5:12"},"nativeSrc":"5056:10:12","nodeType":"YulFunctionCall","src":"5056:10:12"},"variables":[{"name":"length","nativeSrc":"5046:6:12","nodeType":"YulTypedName","src":"5046:6:12","type":""}]},{"nativeSrc":"5079:27:12","nodeType":"YulVariableDeclaration","src":"5079:27:12","value":{"arguments":[{"name":"key","nativeSrc":"5096:3:12","nodeType":"YulIdentifier","src":"5096:3:12"},{"kind":"number","nativeSrc":"5101:4:12","nodeType":"YulLiteral","src":"5101:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5092:3:12","nodeType":"YulIdentifier","src":"5092:3:12"},"nativeSrc":"5092:14:12","nodeType":"YulFunctionCall","src":"5092:14:12"},"variables":[{"name":"begin","nativeSrc":"5083:5:12","nodeType":"YulTypedName","src":"5083:5:12","type":""}]},{"nativeSrc":"5119:29:12","nodeType":"YulVariableDeclaration","src":"5119:29:12","value":{"arguments":[{"name":"begin","nativeSrc":"5134:5:12","nodeType":"YulIdentifier","src":"5134:5:12"},{"name":"length","nativeSrc":"5141:6:12","nodeType":"YulIdentifier","src":"5141:6:12"}],"functionName":{"name":"add","nativeSrc":"5130:3:12","nodeType":"YulIdentifier","src":"5130:3:12"},"nativeSrc":"5130:18:12","nodeType":"YulFunctionCall","src":"5130:18:12"},"variables":[{"name":"end","nativeSrc":"5123:3:12","nodeType":"YulTypedName","src":"5123:3:12","type":""}]},{"nativeSrc":"5161:23:12","nodeType":"YulVariableDeclaration","src":"5161:23:12","value":{"arguments":[{"name":"end","nativeSrc":"5180:3:12","nodeType":"YulIdentifier","src":"5180:3:12"}],"functionName":{"name":"mload","nativeSrc":"5174:5:12","nodeType":"YulIdentifier","src":"5174:5:12"},"nativeSrc":"5174:10:12","nodeType":"YulFunctionCall","src":"5174:10:12"},"variables":[{"name":"cache","nativeSrc":"5165:5:12","nodeType":"YulTypedName","src":"5165:5:12","type":""}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"5204:3:12","nodeType":"YulIdentifier","src":"5204:3:12"},{"name":"slot","nativeSrc":"5209:4:12","nodeType":"YulIdentifier","src":"5209:4:12"}],"functionName":{"name":"mstore","nativeSrc":"5197:6:12","nodeType":"YulIdentifier","src":"5197:6:12"},"nativeSrc":"5197:17:12","nodeType":"YulFunctionCall","src":"5197:17:12"},"nativeSrc":"5197:17:12","nodeType":"YulExpressionStatement","src":"5197:17:12"},{"nativeSrc":"5227:45:12","nodeType":"YulAssignment","src":"5227:45:12","value":{"arguments":[{"name":"begin","nativeSrc":"5247:5:12","nodeType":"YulIdentifier","src":"5247:5:12"},{"arguments":[{"name":"length","nativeSrc":"5258:6:12","nodeType":"YulIdentifier","src":"5258:6:12"},{"kind":"number","nativeSrc":"5266:4:12","nodeType":"YulLiteral","src":"5266:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5254:3:12","nodeType":"YulIdentifier","src":"5254:3:12"},"nativeSrc":"5254:17:12","nodeType":"YulFunctionCall","src":"5254:17:12"}],"functionName":{"name":"keccak256","nativeSrc":"5237:9:12","nodeType":"YulIdentifier","src":"5237:9:12"},"nativeSrc":"5237:35:12","nodeType":"YulFunctionCall","src":"5237:35:12"},"variableNames":[{"name":"result","nativeSrc":"5227:6:12","nodeType":"YulIdentifier","src":"5227:6:12"}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"5292:3:12","nodeType":"YulIdentifier","src":"5292:3:12"},{"name":"cache","nativeSrc":"5297:5:12","nodeType":"YulIdentifier","src":"5297:5:12"}],"functionName":{"name":"mstore","nativeSrc":"5285:6:12","nodeType":"YulIdentifier","src":"5285:6:12"},"nativeSrc":"5285:18:12","nodeType":"YulFunctionCall","src":"5285:18:12"},"nativeSrc":"5285:18:12","nodeType":"YulExpressionStatement","src":"5285:18:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":2728,"isOffset":false,"isSlot":false,"src":"5062:3:12","valueSize":1},{"declaration":2728,"isOffset":false,"isSlot":false,"src":"5096:3:12","valueSize":1},{"declaration":2731,"isOffset":false,"isSlot":false,"src":"5227:6:12","valueSize":1},{"declaration":2726,"isOffset":false,"isSlot":false,"src":"5209:4:12","valueSize":1}],"flags":["memory-safe"],"id":2733,"nodeType":"InlineAssembly","src":"5003:310:12"}]},"documentation":{"id":2724,"nodeType":"StructuredDocumentation","src":"4816:78:12","text":" @dev Derive the location of a mapping element from the key."},"id":2735,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4908:13:12","nodeType":"FunctionDefinition","parameters":{"id":2729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2726,"mutability":"mutable","name":"slot","nameLocation":"4930:4:12","nodeType":"VariableDeclaration","scope":2735,"src":"4922:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2725,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4922:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2728,"mutability":"mutable","name":"key","nameLocation":"4949:3:12","nodeType":"VariableDeclaration","scope":2735,"src":"4936:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2727,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4921:32:12"},"returnParameters":{"id":2732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2731,"mutability":"mutable","name":"result","nameLocation":"4985:6:12","nodeType":"VariableDeclaration","scope":2735,"src":"4977:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2730,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4977:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4976:16:12"},"scope":2736,"src":"4899:420:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2737,"src":"1598:3723:12","usedErrors":[],"usedEvents":[]}],"src":"199:5123:12"},"id":12},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2860]},"id":2861,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2738,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2739,"nodeType":"StructuredDocumentation","src":"219:1187:13","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":2860,"linearizedBaseContracts":[2860],"name":"StorageSlot","nameLocation":"1415:11:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2742,"members":[{"constant":false,"id":2741,"mutability":"mutable","name":"value","nameLocation":"1470:5:13","nodeType":"VariableDeclaration","scope":2742,"src":"1462:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2740,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:13","nodeType":"StructDefinition","scope":2860,"src":"1433:49:13","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2745,"members":[{"constant":false,"id":2744,"mutability":"mutable","name":"value","nameLocation":"1522:5:13","nodeType":"VariableDeclaration","scope":2745,"src":"1517:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2743,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:13","nodeType":"StructDefinition","scope":2860,"src":"1488:46:13","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2748,"members":[{"constant":false,"id":2747,"mutability":"mutable","name":"value","nameLocation":"1577:5:13","nodeType":"VariableDeclaration","scope":2748,"src":"1569:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2746,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:13","nodeType":"StructDefinition","scope":2860,"src":"1540:49:13","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2751,"members":[{"constant":false,"id":2750,"mutability":"mutable","name":"value","nameLocation":"1632:5:13","nodeType":"VariableDeclaration","scope":2751,"src":"1624:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2749,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:13","nodeType":"StructDefinition","scope":2860,"src":"1595:49:13","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":2754,"members":[{"constant":false,"id":2753,"mutability":"mutable","name":"value","nameLocation":"1685:5:13","nodeType":"VariableDeclaration","scope":2754,"src":"1678:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2752,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:13","nodeType":"StructDefinition","scope":2860,"src":"1650:47:13","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2757,"members":[{"constant":false,"id":2756,"mutability":"mutable","name":"value","nameLocation":"1738:5:13","nodeType":"VariableDeclaration","scope":2757,"src":"1731:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2755,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:13","nodeType":"StructDefinition","scope":2860,"src":"1703:47:13","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2760,"members":[{"constant":false,"id":2759,"mutability":"mutable","name":"value","nameLocation":"1789:5:13","nodeType":"VariableDeclaration","scope":2760,"src":"1783:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2758,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:13","nodeType":"StructDefinition","scope":2860,"src":"1756:45:13","visibility":"public"},{"body":{"id":2770,"nodeType":"Block","src":"1983:79:13","statements":[{"AST":{"nativeSrc":"2018:38:13","nodeType":"YulBlock","src":"2018:38:13","statements":[{"nativeSrc":"2032:14:13","nodeType":"YulAssignment","src":"2032:14:13","value":{"name":"slot","nativeSrc":"2042:4:13","nodeType":"YulIdentifier","src":"2042:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:13","nodeType":"YulIdentifier","src":"2032:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2767,"isOffset":false,"isSlot":true,"src":"2032:6:13","suffix":"slot","valueSize":1},{"declaration":2763,"isOffset":false,"isSlot":false,"src":"2042:4:13","valueSize":1}],"flags":["memory-safe"],"id":2769,"nodeType":"InlineAssembly","src":"1993:63:13"}]},"documentation":{"id":2761,"nodeType":"StructuredDocumentation","src":"1807:87:13","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2771,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:13","nodeType":"FunctionDefinition","parameters":{"id":2764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2763,"mutability":"mutable","name":"slot","nameLocation":"1931:4:13","nodeType":"VariableDeclaration","scope":2771,"src":"1923:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2762,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:13"},"returnParameters":{"id":2768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2767,"mutability":"mutable","name":"r","nameLocation":"1980:1:13","nodeType":"VariableDeclaration","scope":2771,"src":"1960:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2742_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2766,"nodeType":"UserDefinedTypeName","pathNode":{"id":2765,"name":"AddressSlot","nameLocations":["1960:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":2742,"src":"1960:11:13"},"referencedDeclaration":2742,"src":"1960:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2742_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:13"},"scope":2860,"src":"1899:163:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2781,"nodeType":"Block","src":"2243:79:13","statements":[{"AST":{"nativeSrc":"2278:38:13","nodeType":"YulBlock","src":"2278:38:13","statements":[{"nativeSrc":"2292:14:13","nodeType":"YulAssignment","src":"2292:14:13","value":{"name":"slot","nativeSrc":"2302:4:13","nodeType":"YulIdentifier","src":"2302:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:13","nodeType":"YulIdentifier","src":"2292:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2778,"isOffset":false,"isSlot":true,"src":"2292:6:13","suffix":"slot","valueSize":1},{"declaration":2774,"isOffset":false,"isSlot":false,"src":"2302:4:13","valueSize":1}],"flags":["memory-safe"],"id":2780,"nodeType":"InlineAssembly","src":"2253:63:13"}]},"documentation":{"id":2772,"nodeType":"StructuredDocumentation","src":"2068:86:13","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":2782,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:13","nodeType":"FunctionDefinition","parameters":{"id":2775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2774,"mutability":"mutable","name":"slot","nameLocation":"2191:4:13","nodeType":"VariableDeclaration","scope":2782,"src":"2183:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2773,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:13"},"returnParameters":{"id":2779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2778,"mutability":"mutable","name":"r","nameLocation":"2240:1:13","nodeType":"VariableDeclaration","scope":2782,"src":"2220:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2745_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2777,"nodeType":"UserDefinedTypeName","pathNode":{"id":2776,"name":"BooleanSlot","nameLocations":["2220:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":2745,"src":"2220:11:13"},"referencedDeclaration":2745,"src":"2220:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2745_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:13"},"scope":2860,"src":"2159:163:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2792,"nodeType":"Block","src":"2503:79:13","statements":[{"AST":{"nativeSrc":"2538:38:13","nodeType":"YulBlock","src":"2538:38:13","statements":[{"nativeSrc":"2552:14:13","nodeType":"YulAssignment","src":"2552:14:13","value":{"name":"slot","nativeSrc":"2562:4:13","nodeType":"YulIdentifier","src":"2562:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:13","nodeType":"YulIdentifier","src":"2552:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2789,"isOffset":false,"isSlot":true,"src":"2552:6:13","suffix":"slot","valueSize":1},{"declaration":2785,"isOffset":false,"isSlot":false,"src":"2562:4:13","valueSize":1}],"flags":["memory-safe"],"id":2791,"nodeType":"InlineAssembly","src":"2513:63:13"}]},"documentation":{"id":2783,"nodeType":"StructuredDocumentation","src":"2328:86:13","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":2793,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:13","nodeType":"FunctionDefinition","parameters":{"id":2786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2785,"mutability":"mutable","name":"slot","nameLocation":"2451:4:13","nodeType":"VariableDeclaration","scope":2793,"src":"2443:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2784,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:13"},"returnParameters":{"id":2790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2789,"mutability":"mutable","name":"r","nameLocation":"2500:1:13","nodeType":"VariableDeclaration","scope":2793,"src":"2480:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2748_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2788,"nodeType":"UserDefinedTypeName","pathNode":{"id":2787,"name":"Bytes32Slot","nameLocations":["2480:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":2748,"src":"2480:11:13"},"referencedDeclaration":2748,"src":"2480:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2748_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:13"},"scope":2860,"src":"2419:163:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2803,"nodeType":"Block","src":"2763:79:13","statements":[{"AST":{"nativeSrc":"2798:38:13","nodeType":"YulBlock","src":"2798:38:13","statements":[{"nativeSrc":"2812:14:13","nodeType":"YulAssignment","src":"2812:14:13","value":{"name":"slot","nativeSrc":"2822:4:13","nodeType":"YulIdentifier","src":"2822:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:13","nodeType":"YulIdentifier","src":"2812:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2800,"isOffset":false,"isSlot":true,"src":"2812:6:13","suffix":"slot","valueSize":1},{"declaration":2796,"isOffset":false,"isSlot":false,"src":"2822:4:13","valueSize":1}],"flags":["memory-safe"],"id":2802,"nodeType":"InlineAssembly","src":"2773:63:13"}]},"documentation":{"id":2794,"nodeType":"StructuredDocumentation","src":"2588:86:13","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":2804,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:13","nodeType":"FunctionDefinition","parameters":{"id":2797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2796,"mutability":"mutable","name":"slot","nameLocation":"2711:4:13","nodeType":"VariableDeclaration","scope":2804,"src":"2703:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2795,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:13"},"returnParameters":{"id":2801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2800,"mutability":"mutable","name":"r","nameLocation":"2760:1:13","nodeType":"VariableDeclaration","scope":2804,"src":"2740:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2751_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2799,"nodeType":"UserDefinedTypeName","pathNode":{"id":2798,"name":"Uint256Slot","nameLocations":["2740:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":2751,"src":"2740:11:13"},"referencedDeclaration":2751,"src":"2740:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2751_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:13"},"scope":2860,"src":"2679:163:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2814,"nodeType":"Block","src":"3020:79:13","statements":[{"AST":{"nativeSrc":"3055:38:13","nodeType":"YulBlock","src":"3055:38:13","statements":[{"nativeSrc":"3069:14:13","nodeType":"YulAssignment","src":"3069:14:13","value":{"name":"slot","nativeSrc":"3079:4:13","nodeType":"YulIdentifier","src":"3079:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:13","nodeType":"YulIdentifier","src":"3069:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2811,"isOffset":false,"isSlot":true,"src":"3069:6:13","suffix":"slot","valueSize":1},{"declaration":2807,"isOffset":false,"isSlot":false,"src":"3079:4:13","valueSize":1}],"flags":["memory-safe"],"id":2813,"nodeType":"InlineAssembly","src":"3030:63:13"}]},"documentation":{"id":2805,"nodeType":"StructuredDocumentation","src":"2848:85:13","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":2815,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:13","nodeType":"FunctionDefinition","parameters":{"id":2808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2807,"mutability":"mutable","name":"slot","nameLocation":"2969:4:13","nodeType":"VariableDeclaration","scope":2815,"src":"2961:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2806,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:13"},"returnParameters":{"id":2812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2811,"mutability":"mutable","name":"r","nameLocation":"3017:1:13","nodeType":"VariableDeclaration","scope":2815,"src":"2998:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2754_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":2810,"nodeType":"UserDefinedTypeName","pathNode":{"id":2809,"name":"Int256Slot","nameLocations":["2998:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2754,"src":"2998:10:13"},"referencedDeclaration":2754,"src":"2998:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2754_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:13"},"scope":2860,"src":"2938:161:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2825,"nodeType":"Block","src":"3277:79:13","statements":[{"AST":{"nativeSrc":"3312:38:13","nodeType":"YulBlock","src":"3312:38:13","statements":[{"nativeSrc":"3326:14:13","nodeType":"YulAssignment","src":"3326:14:13","value":{"name":"slot","nativeSrc":"3336:4:13","nodeType":"YulIdentifier","src":"3336:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:13","nodeType":"YulIdentifier","src":"3326:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2822,"isOffset":false,"isSlot":true,"src":"3326:6:13","suffix":"slot","valueSize":1},{"declaration":2818,"isOffset":false,"isSlot":false,"src":"3336:4:13","valueSize":1}],"flags":["memory-safe"],"id":2824,"nodeType":"InlineAssembly","src":"3287:63:13"}]},"documentation":{"id":2816,"nodeType":"StructuredDocumentation","src":"3105:85:13","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":2826,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:13","nodeType":"FunctionDefinition","parameters":{"id":2819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2818,"mutability":"mutable","name":"slot","nameLocation":"3226:4:13","nodeType":"VariableDeclaration","scope":2826,"src":"3218:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2817,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:13"},"returnParameters":{"id":2823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2822,"mutability":"mutable","name":"r","nameLocation":"3274:1:13","nodeType":"VariableDeclaration","scope":2826,"src":"3255:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2757_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2821,"nodeType":"UserDefinedTypeName","pathNode":{"id":2820,"name":"StringSlot","nameLocations":["3255:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2757,"src":"3255:10:13"},"referencedDeclaration":2757,"src":"3255:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2757_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:13"},"scope":2860,"src":"3195:161:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2836,"nodeType":"Block","src":"3558:85:13","statements":[{"AST":{"nativeSrc":"3593:44:13","nodeType":"YulBlock","src":"3593:44:13","statements":[{"nativeSrc":"3607:20:13","nodeType":"YulAssignment","src":"3607:20:13","value":{"name":"store.slot","nativeSrc":"3617:10:13","nodeType":"YulIdentifier","src":"3617:10:13"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:13","nodeType":"YulIdentifier","src":"3607:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2833,"isOffset":false,"isSlot":true,"src":"3607:6:13","suffix":"slot","valueSize":1},{"declaration":2829,"isOffset":false,"isSlot":true,"src":"3617:10:13","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2835,"nodeType":"InlineAssembly","src":"3568:69:13"}]},"documentation":{"id":2827,"nodeType":"StructuredDocumentation","src":"3362:101:13","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2837,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:13","nodeType":"FunctionDefinition","parameters":{"id":2830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2829,"mutability":"mutable","name":"store","nameLocation":"3506:5:13","nodeType":"VariableDeclaration","scope":2837,"src":"3491:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2828,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:13"},"returnParameters":{"id":2834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2833,"mutability":"mutable","name":"r","nameLocation":"3555:1:13","nodeType":"VariableDeclaration","scope":2837,"src":"3536:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2757_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2832,"nodeType":"UserDefinedTypeName","pathNode":{"id":2831,"name":"StringSlot","nameLocations":["3536:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2757,"src":"3536:10:13"},"referencedDeclaration":2757,"src":"3536:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2757_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:13"},"scope":2860,"src":"3468:175:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2847,"nodeType":"Block","src":"3818:79:13","statements":[{"AST":{"nativeSrc":"3853:38:13","nodeType":"YulBlock","src":"3853:38:13","statements":[{"nativeSrc":"3867:14:13","nodeType":"YulAssignment","src":"3867:14:13","value":{"name":"slot","nativeSrc":"3877:4:13","nodeType":"YulIdentifier","src":"3877:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:13","nodeType":"YulIdentifier","src":"3867:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2844,"isOffset":false,"isSlot":true,"src":"3867:6:13","suffix":"slot","valueSize":1},{"declaration":2840,"isOffset":false,"isSlot":false,"src":"3877:4:13","valueSize":1}],"flags":["memory-safe"],"id":2846,"nodeType":"InlineAssembly","src":"3828:63:13"}]},"documentation":{"id":2838,"nodeType":"StructuredDocumentation","src":"3649:84:13","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":2848,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:13","nodeType":"FunctionDefinition","parameters":{"id":2841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2840,"mutability":"mutable","name":"slot","nameLocation":"3768:4:13","nodeType":"VariableDeclaration","scope":2848,"src":"3760:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2839,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:13"},"returnParameters":{"id":2845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2844,"mutability":"mutable","name":"r","nameLocation":"3815:1:13","nodeType":"VariableDeclaration","scope":2848,"src":"3797:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2760_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2843,"nodeType":"UserDefinedTypeName","pathNode":{"id":2842,"name":"BytesSlot","nameLocations":["3797:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":2760,"src":"3797:9:13"},"referencedDeclaration":2760,"src":"3797:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2760_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:13"},"scope":2860,"src":"3738:159:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2858,"nodeType":"Block","src":"4094:85:13","statements":[{"AST":{"nativeSrc":"4129:44:13","nodeType":"YulBlock","src":"4129:44:13","statements":[{"nativeSrc":"4143:20:13","nodeType":"YulAssignment","src":"4143:20:13","value":{"name":"store.slot","nativeSrc":"4153:10:13","nodeType":"YulIdentifier","src":"4153:10:13"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:13","nodeType":"YulIdentifier","src":"4143:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2855,"isOffset":false,"isSlot":true,"src":"4143:6:13","suffix":"slot","valueSize":1},{"declaration":2851,"isOffset":false,"isSlot":true,"src":"4153:10:13","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2857,"nodeType":"InlineAssembly","src":"4104:69:13"}]},"documentation":{"id":2849,"nodeType":"StructuredDocumentation","src":"3903:99:13","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2859,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:13","nodeType":"FunctionDefinition","parameters":{"id":2852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2851,"mutability":"mutable","name":"store","nameLocation":"4043:5:13","nodeType":"VariableDeclaration","scope":2859,"src":"4029:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2850,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:13"},"returnParameters":{"id":2856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2855,"mutability":"mutable","name":"r","nameLocation":"4091:1:13","nodeType":"VariableDeclaration","scope":2859,"src":"4073:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2760_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2854,"nodeType":"UserDefinedTypeName","pathNode":{"id":2853,"name":"BytesSlot","nameLocations":["4073:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":2760,"src":"4073:9:13"},"referencedDeclaration":2760,"src":"4073:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2760_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:13"},"scope":2860,"src":"4007:172:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2861,"src":"1407:2774:13","usedErrors":[],"usedEvents":[]}],"src":"193:3989:13"},"id":13},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5702],"SafeCast":[7467],"SignedMath":[7611],"Strings":[4060]},"id":4061,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2862,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2864,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4061,"sourceUnit":5703,"src":"127:37:14","symbolAliases":[{"foreign":{"id":2863,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"135:4:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":2866,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4061,"sourceUnit":7468,"src":"165:45:14","symbolAliases":[{"foreign":{"id":2865,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"173:8:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2868,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4061,"sourceUnit":7612,"src":"211:49:14","symbolAliases":[{"foreign":{"id":2867,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7611,"src":"219:10:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2869,"nodeType":"StructuredDocumentation","src":"262:34:14","text":" @dev String operations."},"fullyImplemented":true,"id":4060,"linearizedBaseContracts":[4060],"name":"Strings","nameLocation":"305:7:14","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2871,"libraryName":{"id":2870,"name":"SafeCast","nameLocations":["325:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":7467,"src":"325:8:14"},"nodeType":"UsingForDirective","src":"319:21:14"},{"constant":true,"id":2874,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:14","nodeType":"VariableDeclaration","scope":4060,"src":"346:56:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2872,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:14","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2877,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:14","nodeType":"VariableDeclaration","scope":4060,"src":"408:42:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2875,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:14","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":2878,"nodeType":"StructuredDocumentation","src":"457:81:14","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2884,"name":"StringsInsufficientHexLength","nameLocation":"549:28:14","nodeType":"ErrorDefinition","parameters":{"id":2883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2880,"mutability":"mutable","name":"value","nameLocation":"586:5:14","nodeType":"VariableDeclaration","scope":2884,"src":"578:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2879,"name":"uint256","nodeType":"ElementaryTypeName","src":"578:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2882,"mutability":"mutable","name":"length","nameLocation":"601:6:14","nodeType":"VariableDeclaration","scope":2884,"src":"593:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2881,"name":"uint256","nodeType":"ElementaryTypeName","src":"593:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"577:31:14"},"src":"543:66:14"},{"documentation":{"id":2885,"nodeType":"StructuredDocumentation","src":"615:108:14","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":2887,"name":"StringsInvalidChar","nameLocation":"734:18:14","nodeType":"ErrorDefinition","parameters":{"id":2886,"nodeType":"ParameterList","parameters":[],"src":"752:2:14"},"src":"728:27:14"},{"documentation":{"id":2888,"nodeType":"StructuredDocumentation","src":"761:84:14","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":2890,"name":"StringsInvalidAddressFormat","nameLocation":"856:27:14","nodeType":"ErrorDefinition","parameters":{"id":2889,"nodeType":"ParameterList","parameters":[],"src":"883:2:14"},"src":"850:36:14"},{"body":{"id":2937,"nodeType":"Block","src":"1058:561:14","statements":[{"id":2936,"nodeType":"UncheckedBlock","src":"1068:545:14","statements":[{"assignments":[2899],"declarations":[{"constant":false,"id":2899,"mutability":"mutable","name":"length","nameLocation":"1100:6:14","nodeType":"VariableDeclaration","scope":2936,"src":"1092:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2898,"name":"uint256","nodeType":"ElementaryTypeName","src":"1092:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2906,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"1120:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2900,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"1109:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5702_$","typeString":"type(library Math)"}},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1114:5:14","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5474,"src":"1109:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1109:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1129:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1109:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1092:38:14"},{"assignments":[2908],"declarations":[{"constant":false,"id":2908,"mutability":"mutable","name":"buffer","nameLocation":"1158:6:14","nodeType":"VariableDeclaration","scope":2936,"src":"1144:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2907,"name":"string","nodeType":"ElementaryTypeName","src":"1144:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2913,"initialValue":{"arguments":[{"id":2911,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"1178:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1167:10:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2909,"name":"string","nodeType":"ElementaryTypeName","src":"1171:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1167:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1144:41:14"},{"assignments":[2915],"declarations":[{"constant":false,"id":2915,"mutability":"mutable","name":"ptr","nameLocation":"1207:3:14","nodeType":"VariableDeclaration","scope":2936,"src":"1199:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2914,"name":"uint256","nodeType":"ElementaryTypeName","src":"1199:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2916,"nodeType":"VariableDeclarationStatement","src":"1199:11:14"},{"AST":{"nativeSrc":"1249:67:14","nodeType":"YulBlock","src":"1249:67:14","statements":[{"nativeSrc":"1267:35:14","nodeType":"YulAssignment","src":"1267:35:14","value":{"arguments":[{"name":"buffer","nativeSrc":"1278:6:14","nodeType":"YulIdentifier","src":"1278:6:14"},{"arguments":[{"kind":"number","nativeSrc":"1290:2:14","nodeType":"YulLiteral","src":"1290:2:14","type":"","value":"32"},{"name":"length","nativeSrc":"1294:6:14","nodeType":"YulIdentifier","src":"1294:6:14"}],"functionName":{"name":"add","nativeSrc":"1286:3:14","nodeType":"YulIdentifier","src":"1286:3:14"},"nativeSrc":"1286:15:14","nodeType":"YulFunctionCall","src":"1286:15:14"}],"functionName":{"name":"add","nativeSrc":"1274:3:14","nodeType":"YulIdentifier","src":"1274:3:14"},"nativeSrc":"1274:28:14","nodeType":"YulFunctionCall","src":"1274:28:14"},"variableNames":[{"name":"ptr","nativeSrc":"1267:3:14","nodeType":"YulIdentifier","src":"1267:3:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2908,"isOffset":false,"isSlot":false,"src":"1278:6:14","valueSize":1},{"declaration":2899,"isOffset":false,"isSlot":false,"src":"1294:6:14","valueSize":1},{"declaration":2915,"isOffset":false,"isSlot":false,"src":"1267:3:14","valueSize":1}],"flags":["memory-safe"],"id":2917,"nodeType":"InlineAssembly","src":"1224:92:14"},{"body":{"id":2932,"nodeType":"Block","src":"1342:234:14","statements":[{"expression":{"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1360:5:14","subExpression":{"id":2919,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"1360:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2921,"nodeType":"ExpressionStatement","src":"1360:5:14"},{"AST":{"nativeSrc":"1408:86:14","nodeType":"YulBlock","src":"1408:86:14","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1438:3:14","nodeType":"YulIdentifier","src":"1438:3:14"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1452:5:14","nodeType":"YulIdentifier","src":"1452:5:14"},{"kind":"number","nativeSrc":"1459:2:14","nodeType":"YulLiteral","src":"1459:2:14","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1448:3:14","nodeType":"YulIdentifier","src":"1448:3:14"},"nativeSrc":"1448:14:14","nodeType":"YulFunctionCall","src":"1448:14:14"},{"name":"HEX_DIGITS","nativeSrc":"1464:10:14","nodeType":"YulIdentifier","src":"1464:10:14"}],"functionName":{"name":"byte","nativeSrc":"1443:4:14","nodeType":"YulIdentifier","src":"1443:4:14"},"nativeSrc":"1443:32:14","nodeType":"YulFunctionCall","src":"1443:32:14"}],"functionName":{"name":"mstore8","nativeSrc":"1430:7:14","nodeType":"YulIdentifier","src":"1430:7:14"},"nativeSrc":"1430:46:14","nodeType":"YulFunctionCall","src":"1430:46:14"},"nativeSrc":"1430:46:14","nodeType":"YulExpressionStatement","src":"1430:46:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":2874,"isOffset":false,"isSlot":false,"src":"1464:10:14","valueSize":1},{"declaration":2915,"isOffset":false,"isSlot":false,"src":"1438:3:14","valueSize":1},{"declaration":2893,"isOffset":false,"isSlot":false,"src":"1452:5:14","valueSize":1}],"flags":["memory-safe"],"id":2922,"nodeType":"InlineAssembly","src":"1383:111:14"},{"expression":{"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2923,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"1511:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1520:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1511:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2926,"nodeType":"ExpressionStatement","src":"1511:11:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"1544:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1553:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1544:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2931,"nodeType":"IfStatement","src":"1540:21:14","trueBody":{"id":2930,"nodeType":"Break","src":"1556:5:14"}}]},"condition":{"hexValue":"74727565","id":2918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1336:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2933,"nodeType":"WhileStatement","src":"1329:247:14"},{"expression":{"id":2934,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"1596:6:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2897,"id":2935,"nodeType":"Return","src":"1589:13:14"}]}]},"documentation":{"id":2891,"nodeType":"StructuredDocumentation","src":"892:90:14","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2938,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"996:8:14","nodeType":"FunctionDefinition","parameters":{"id":2894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2893,"mutability":"mutable","name":"value","nameLocation":"1013:5:14","nodeType":"VariableDeclaration","scope":2938,"src":"1005:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2892,"name":"uint256","nodeType":"ElementaryTypeName","src":"1005:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1004:15:14"},"returnParameters":{"id":2897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2896,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2938,"src":"1043:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2895,"name":"string","nodeType":"ElementaryTypeName","src":"1043:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1042:15:14"},"scope":4060,"src":"987:632:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2963,"nodeType":"Block","src":"1795:92:14","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"1826:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1834:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1826:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1844:2:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1826:20:14","trueExpression":{"hexValue":"2d","id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1838:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"1872:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2956,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7611,"src":"1857:10:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7611_$","typeString":"type(library SignedMath)"}},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1868:3:14","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7610,"src":"1857:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1857:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2955,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"1848:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1848:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1812:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2946,"name":"string","nodeType":"ElementaryTypeName","src":"1812:6:14","typeDescriptions":{}}},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1819:6:14","memberName":"concat","nodeType":"MemberAccess","src":"1812:13:14","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1812:68:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2945,"id":2962,"nodeType":"Return","src":"1805:75:14"}]},"documentation":{"id":2939,"nodeType":"StructuredDocumentation","src":"1625:89:14","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2964,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1728:14:14","nodeType":"FunctionDefinition","parameters":{"id":2942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2941,"mutability":"mutable","name":"value","nameLocation":"1750:5:14","nodeType":"VariableDeclaration","scope":2964,"src":"1743:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2940,"name":"int256","nodeType":"ElementaryTypeName","src":"1743:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1742:14:14"},"returnParameters":{"id":2945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2964,"src":"1780:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2943,"name":"string","nodeType":"ElementaryTypeName","src":"1780:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1779:15:14"},"scope":4060,"src":"1719:168:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2983,"nodeType":"Block","src":"2066:100:14","statements":[{"id":2982,"nodeType":"UncheckedBlock","src":"2076:84:14","statements":[{"expression":{"arguments":[{"id":2973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"2119:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"2138:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2974,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"2126:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5702_$","typeString":"type(library Math)"}},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2131:6:14","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5645,"src":"2126:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2126:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2147:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2126:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2972,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2984,3067,3087],"referencedDeclaration":3067,"src":"2107:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2107:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2971,"id":2981,"nodeType":"Return","src":"2100:49:14"}]}]},"documentation":{"id":2965,"nodeType":"StructuredDocumentation","src":"1893:94:14","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2984,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2001:11:14","nodeType":"FunctionDefinition","parameters":{"id":2968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2967,"mutability":"mutable","name":"value","nameLocation":"2021:5:14","nodeType":"VariableDeclaration","scope":2984,"src":"2013:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2966,"name":"uint256","nodeType":"ElementaryTypeName","src":"2013:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2012:15:14"},"returnParameters":{"id":2971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2984,"src":"2051:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2969,"name":"string","nodeType":"ElementaryTypeName","src":"2051:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2050:15:14"},"scope":4060,"src":"1992:174:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3066,"nodeType":"Block","src":"2379:435:14","statements":[{"assignments":[2995],"declarations":[{"constant":false,"id":2995,"mutability":"mutable","name":"localValue","nameLocation":"2397:10:14","nodeType":"VariableDeclaration","scope":3066,"src":"2389:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2994,"name":"uint256","nodeType":"ElementaryTypeName","src":"2389:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2997,"initialValue":{"id":2996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"2410:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2389:26:14"},{"assignments":[2999],"declarations":[{"constant":false,"id":2999,"mutability":"mutable","name":"buffer","nameLocation":"2438:6:14","nodeType":"VariableDeclaration","scope":3066,"src":"2425:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2998,"name":"bytes","nodeType":"ElementaryTypeName","src":"2425:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3008,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2457:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3003,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"2461:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2457:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2457:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2447:9:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3000,"name":"bytes","nodeType":"ElementaryTypeName","src":"2451:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2425:47:14"},{"expression":{"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3009,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"2482:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3011,"indexExpression":{"hexValue":"30","id":3010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2489:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2482:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2494:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2482:15:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3014,"nodeType":"ExpressionStatement","src":"2482:15:14"},{"expression":{"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3015,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"2507:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3017,"indexExpression":{"hexValue":"31","id":3016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2514:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2507:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":3018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2519:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2507:15:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3020,"nodeType":"ExpressionStatement","src":"2507:15:14"},{"body":{"id":3049,"nodeType":"Block","src":"2577:95:14","statements":[{"expression":{"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3035,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"2591:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3037,"indexExpression":{"id":3036,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"2598:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2591:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3038,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"2603:10:14","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":3042,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3039,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"2614:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2627:3:14","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2614:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2603:28:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2591:40:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3044,"nodeType":"ExpressionStatement","src":"2591:40:14"},{"expression":{"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3045,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"2645:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2660:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2645:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3048,"nodeType":"ExpressionStatement","src":"2645:16:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3029,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"2565:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2569:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2565:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3050,"initializationExpression":{"assignments":[3022],"declarations":[{"constant":false,"id":3022,"mutability":"mutable","name":"i","nameLocation":"2545:1:14","nodeType":"VariableDeclaration","scope":3050,"src":"2537:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3021,"name":"uint256","nodeType":"ElementaryTypeName","src":"2537:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3028,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2549:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3024,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"2553:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2549:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2562:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2549:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2537:26:14"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2572:3:14","subExpression":{"id":3032,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"2574:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3034,"nodeType":"ExpressionStatement","src":"2572:3:14"},"nodeType":"ForStatement","src":"2532:140:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3051,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"2685:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2699:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2685:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3060,"nodeType":"IfStatement","src":"2681:96:14","trueBody":{"id":3059,"nodeType":"Block","src":"2702:75:14","statements":[{"errorCall":{"arguments":[{"id":3055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"2752:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3056,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"2759:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3054,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"2723:28:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3058,"nodeType":"RevertStatement","src":"2716:50:14"}]}},{"expression":{"arguments":[{"id":3063,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"2800:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2793:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3061,"name":"string","nodeType":"ElementaryTypeName","src":"2793:6:14","typeDescriptions":{}}},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2793:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2993,"id":3065,"nodeType":"Return","src":"2786:21:14"}]},"documentation":{"id":2985,"nodeType":"StructuredDocumentation","src":"2172:112:14","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3067,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2298:11:14","nodeType":"FunctionDefinition","parameters":{"id":2990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2987,"mutability":"mutable","name":"value","nameLocation":"2318:5:14","nodeType":"VariableDeclaration","scope":3067,"src":"2310:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2986,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2989,"mutability":"mutable","name":"length","nameLocation":"2333:6:14","nodeType":"VariableDeclaration","scope":3067,"src":"2325:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2988,"name":"uint256","nodeType":"ElementaryTypeName","src":"2325:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2309:31:14"},"returnParameters":{"id":2993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2992,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3067,"src":"2364:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2991,"name":"string","nodeType":"ElementaryTypeName","src":"2364:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2363:15:14"},"scope":4060,"src":"2289:525:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3086,"nodeType":"Block","src":"3046:75:14","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3080,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"3091:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3083:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3078,"name":"uint160","nodeType":"ElementaryTypeName","src":"3083:7:14","typeDescriptions":{}}},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3075:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3076,"name":"uint256","nodeType":"ElementaryTypeName","src":"3075:7:14","typeDescriptions":{}}},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3083,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"3099:14:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3075,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2984,3067,3087],"referencedDeclaration":3067,"src":"3063:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3063:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3074,"id":3085,"nodeType":"Return","src":"3056:58:14"}]},"documentation":{"id":3068,"nodeType":"StructuredDocumentation","src":"2820:148:14","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":3087,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2982:11:14","nodeType":"FunctionDefinition","parameters":{"id":3071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3070,"mutability":"mutable","name":"addr","nameLocation":"3002:4:14","nodeType":"VariableDeclaration","scope":3087,"src":"2994:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3069,"name":"address","nodeType":"ElementaryTypeName","src":"2994:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2993:14:14"},"returnParameters":{"id":3074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3087,"src":"3031:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3072,"name":"string","nodeType":"ElementaryTypeName","src":"3031:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3030:15:14"},"scope":4060,"src":"2973:148:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3151,"nodeType":"Block","src":"3378:642:14","statements":[{"assignments":[3096],"declarations":[{"constant":false,"id":3096,"mutability":"mutable","name":"buffer","nameLocation":"3401:6:14","nodeType":"VariableDeclaration","scope":3151,"src":"3388:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3095,"name":"bytes","nodeType":"ElementaryTypeName","src":"3388:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3103,"initialValue":{"arguments":[{"arguments":[{"id":3100,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"3428:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3099,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2984,3067,3087],"referencedDeclaration":3087,"src":"3416:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3410:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3097,"name":"bytes","nodeType":"ElementaryTypeName","src":"3410:5:14","typeDescriptions":{}}},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3410:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3388:46:14"},{"assignments":[3105],"declarations":[{"constant":false,"id":3105,"mutability":"mutable","name":"hashValue","nameLocation":"3527:9:14","nodeType":"VariableDeclaration","scope":3151,"src":"3519:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3104,"name":"uint256","nodeType":"ElementaryTypeName","src":"3519:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3106,"nodeType":"VariableDeclarationStatement","src":"3519:17:14"},{"AST":{"nativeSrc":"3571:78:14","nodeType":"YulBlock","src":"3571:78:14","statements":[{"nativeSrc":"3585:54:14","nodeType":"YulAssignment","src":"3585:54:14","value":{"arguments":[{"kind":"number","nativeSrc":"3602:2:14","nodeType":"YulLiteral","src":"3602:2:14","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3620:6:14","nodeType":"YulIdentifier","src":"3620:6:14"},{"kind":"number","nativeSrc":"3628:4:14","nodeType":"YulLiteral","src":"3628:4:14","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3616:3:14","nodeType":"YulIdentifier","src":"3616:3:14"},"nativeSrc":"3616:17:14","nodeType":"YulFunctionCall","src":"3616:17:14"},{"kind":"number","nativeSrc":"3635:2:14","nodeType":"YulLiteral","src":"3635:2:14","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3606:9:14","nodeType":"YulIdentifier","src":"3606:9:14"},"nativeSrc":"3606:32:14","nodeType":"YulFunctionCall","src":"3606:32:14"}],"functionName":{"name":"shr","nativeSrc":"3598:3:14","nodeType":"YulIdentifier","src":"3598:3:14"},"nativeSrc":"3598:41:14","nodeType":"YulFunctionCall","src":"3598:41:14"},"variableNames":[{"name":"hashValue","nativeSrc":"3585:9:14","nodeType":"YulIdentifier","src":"3585:9:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3096,"isOffset":false,"isSlot":false,"src":"3620:6:14","valueSize":1},{"declaration":3105,"isOffset":false,"isSlot":false,"src":"3585:9:14","valueSize":1}],"flags":["memory-safe"],"id":3107,"nodeType":"InlineAssembly","src":"3546:103:14"},{"body":{"id":3144,"nodeType":"Block","src":"3692:291:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3118,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"3798:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3810:3:14","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3798:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":3121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3816:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3798:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":3125,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"3827:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3127,"indexExpression":{"id":3126,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"3834:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3827:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3821:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3123,"name":"uint8","nodeType":"ElementaryTypeName","src":"3821:5:14","typeDescriptions":{}}},"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3840:2:14","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3821:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3798:44:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3139,"nodeType":"IfStatement","src":"3794:150:14","trueBody":{"id":3138,"nodeType":"Block","src":"3844:100:14","statements":[{"expression":{"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3132,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"3912:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3134,"indexExpression":{"id":3133,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"3919:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3912:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":3135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3925:4:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3912:17:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3137,"nodeType":"ExpressionStatement","src":"3912:17:14"}]}},{"expression":{"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3140,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"3957:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3971:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3957:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3143,"nodeType":"ExpressionStatement","src":"3957:15:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3112,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"3680:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3684:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3680:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3145,"initializationExpression":{"assignments":[3109],"declarations":[{"constant":false,"id":3109,"mutability":"mutable","name":"i","nameLocation":"3672:1:14","nodeType":"VariableDeclaration","scope":3145,"src":"3664:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3108,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3111,"initialValue":{"hexValue":"3431","id":3110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3676:2:14","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3664:14:14"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3687:3:14","subExpression":{"id":3115,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"3689:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3117,"nodeType":"ExpressionStatement","src":"3687:3:14"},"nodeType":"ForStatement","src":"3659:324:14"},{"expression":{"arguments":[{"id":3148,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"4006:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3999:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3146,"name":"string","nodeType":"ElementaryTypeName","src":"3999:6:14","typeDescriptions":{}}},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3999:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3094,"id":3150,"nodeType":"Return","src":"3992:21:14"}]},"documentation":{"id":3088,"nodeType":"StructuredDocumentation","src":"3127:165:14","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":3152,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3306:19:14","nodeType":"FunctionDefinition","parameters":{"id":3091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3090,"mutability":"mutable","name":"addr","nameLocation":"3334:4:14","nodeType":"VariableDeclaration","scope":3152,"src":"3326:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3089,"name":"address","nodeType":"ElementaryTypeName","src":"3326:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3325:14:14"},"returnParameters":{"id":3094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3152,"src":"3363:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3092,"name":"string","nodeType":"ElementaryTypeName","src":"3363:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3362:15:14"},"scope":4060,"src":"3297:723:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3188,"nodeType":"Block","src":"4175:104:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3164,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"4198:1:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3162,"name":"bytes","nodeType":"ElementaryTypeName","src":"4192:5:14","typeDescriptions":{}}},"id":3165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4201:6:14","memberName":"length","nodeType":"MemberAccess","src":"4192:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3169,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"4217:1:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4211:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3167,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:14","typeDescriptions":{}}},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4211:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4220:6:14","memberName":"length","nodeType":"MemberAccess","src":"4211:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4192:34:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3176,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"4246:1:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4240:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3174,"name":"bytes","nodeType":"ElementaryTypeName","src":"4240:5:14","typeDescriptions":{}}},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4240:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3173,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4230:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4230:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3182,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"4269:1:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3180,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:14","typeDescriptions":{}}},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3179,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4253:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4253:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4230:42:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4192:80:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3161,"id":3187,"nodeType":"Return","src":"4185:87:14"}]},"documentation":{"id":3153,"nodeType":"StructuredDocumentation","src":"4026:66:14","text":" @dev Returns true if the two strings are equal."},"id":3189,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4106:5:14","nodeType":"FunctionDefinition","parameters":{"id":3158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3155,"mutability":"mutable","name":"a","nameLocation":"4126:1:14","nodeType":"VariableDeclaration","scope":3189,"src":"4112:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3154,"name":"string","nodeType":"ElementaryTypeName","src":"4112:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3157,"mutability":"mutable","name":"b","nameLocation":"4143:1:14","nodeType":"VariableDeclaration","scope":3189,"src":"4129:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3156,"name":"string","nodeType":"ElementaryTypeName","src":"4129:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4111:34:14"},"returnParameters":{"id":3161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3189,"src":"4169:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3159,"name":"bool","nodeType":"ElementaryTypeName","src":"4169:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4168:6:14"},"scope":4060,"src":"4097:182:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3207,"nodeType":"Block","src":"4576:64:14","statements":[{"expression":{"arguments":[{"id":3198,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"4603:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4610:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3202,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"4619:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4613:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3200,"name":"bytes","nodeType":"ElementaryTypeName","src":"4613:5:14","typeDescriptions":{}}},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4613:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4626:6:14","memberName":"length","nodeType":"MemberAccess","src":"4613:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3197,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[3208,3239],"referencedDeclaration":3239,"src":"4593:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4593:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3196,"id":3206,"nodeType":"Return","src":"4586:47:14"}]},"documentation":{"id":3190,"nodeType":"StructuredDocumentation","src":"4285:214:14","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":3208,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4513:9:14","nodeType":"FunctionDefinition","parameters":{"id":3193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3192,"mutability":"mutable","name":"input","nameLocation":"4537:5:14","nodeType":"VariableDeclaration","scope":3208,"src":"4523:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3191,"name":"string","nodeType":"ElementaryTypeName","src":"4523:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4522:21:14"},"returnParameters":{"id":3196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3208,"src":"4567:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3194,"name":"uint256","nodeType":"ElementaryTypeName","src":"4567:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4566:9:14"},"scope":4060,"src":"4504:136:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3238,"nodeType":"Block","src":"5038:153:14","statements":[{"assignments":[3221,3223],"declarations":[{"constant":false,"id":3221,"mutability":"mutable","name":"success","nameLocation":"5054:7:14","nodeType":"VariableDeclaration","scope":3238,"src":"5049:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3220,"name":"bool","nodeType":"ElementaryTypeName","src":"5049:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3223,"mutability":"mutable","name":"value","nameLocation":"5071:5:14","nodeType":"VariableDeclaration","scope":3238,"src":"5063:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3222,"name":"uint256","nodeType":"ElementaryTypeName","src":"5063:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3229,"initialValue":{"arguments":[{"id":3225,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"5093:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3226,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"5100:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3227,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"5107:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3224,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[3260,3297],"referencedDeclaration":3297,"src":"5080:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5080:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5048:63:14"},{"condition":{"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5125:8:14","subExpression":{"id":3230,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"5126:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3235,"nodeType":"IfStatement","src":"5121:41:14","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3232,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"5142:18:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3234,"nodeType":"RevertStatement","src":"5135:27:14"}},{"expression":{"id":3236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"5179:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3219,"id":3237,"nodeType":"Return","src":"5172:12:14"}]},"documentation":{"id":3209,"nodeType":"StructuredDocumentation","src":"4646:287:14","text":" @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":3239,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4947:9:14","nodeType":"FunctionDefinition","parameters":{"id":3216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3211,"mutability":"mutable","name":"input","nameLocation":"4971:5:14","nodeType":"VariableDeclaration","scope":3239,"src":"4957:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3210,"name":"string","nodeType":"ElementaryTypeName","src":"4957:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3213,"mutability":"mutable","name":"begin","nameLocation":"4986:5:14","nodeType":"VariableDeclaration","scope":3239,"src":"4978:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3212,"name":"uint256","nodeType":"ElementaryTypeName","src":"4978:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3215,"mutability":"mutable","name":"end","nameLocation":"5001:3:14","nodeType":"VariableDeclaration","scope":3239,"src":"4993:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3214,"name":"uint256","nodeType":"ElementaryTypeName","src":"4993:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4956:49:14"},"returnParameters":{"id":3219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3239,"src":"5029:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3217,"name":"uint256","nodeType":"ElementaryTypeName","src":"5029:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5028:9:14"},"scope":4060,"src":"4938:253:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3259,"nodeType":"Block","src":"5512:83:14","statements":[{"expression":{"arguments":[{"id":3250,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"5558:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5565:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3254,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"5574:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5568:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3252,"name":"bytes","nodeType":"ElementaryTypeName","src":"5568:5:14","typeDescriptions":{}}},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5568:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5581:6:14","memberName":"length","nodeType":"MemberAccess","src":"5568:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3249,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3367,"src":"5529:28:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:59:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3248,"id":3258,"nodeType":"Return","src":"5522:66:14"}]},"documentation":{"id":3240,"nodeType":"StructuredDocumentation","src":"5197:215:14","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3260,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5426:12:14","nodeType":"FunctionDefinition","parameters":{"id":3243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3242,"mutability":"mutable","name":"input","nameLocation":"5453:5:14","nodeType":"VariableDeclaration","scope":3260,"src":"5439:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3241,"name":"string","nodeType":"ElementaryTypeName","src":"5439:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5438:21:14"},"returnParameters":{"id":3248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3245,"mutability":"mutable","name":"success","nameLocation":"5488:7:14","nodeType":"VariableDeclaration","scope":3260,"src":"5483:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3244,"name":"bool","nodeType":"ElementaryTypeName","src":"5483:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3247,"mutability":"mutable","name":"value","nameLocation":"5505:5:14","nodeType":"VariableDeclaration","scope":3260,"src":"5497:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3246,"name":"uint256","nodeType":"ElementaryTypeName","src":"5497:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5482:29:14"},"scope":4060,"src":"5417:178:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3296,"nodeType":"Block","src":"5997:144:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3274,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"6011:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3277,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"6023:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6017:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3275,"name":"bytes","nodeType":"ElementaryTypeName","src":"6017:5:14","typeDescriptions":{}}},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6017:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6030:6:14","memberName":"length","nodeType":"MemberAccess","src":"6017:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6011:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3281,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"6040:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3282,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"6048:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6040:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6011:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3289,"nodeType":"IfStatement","src":"6007:63:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6061:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6068:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3287,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6060:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3273,"id":3288,"nodeType":"Return","src":"6053:17:14"}},{"expression":{"arguments":[{"id":3291,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"6116:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3292,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"6123:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3293,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"6130:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3290,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3367,"src":"6087:28:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6087:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3273,"id":3295,"nodeType":"Return","src":"6080:54:14"}]},"documentation":{"id":3261,"nodeType":"StructuredDocumentation","src":"5601:238:14","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3297,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5853:12:14","nodeType":"FunctionDefinition","parameters":{"id":3268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3263,"mutability":"mutable","name":"input","nameLocation":"5889:5:14","nodeType":"VariableDeclaration","scope":3297,"src":"5875:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3262,"name":"string","nodeType":"ElementaryTypeName","src":"5875:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3265,"mutability":"mutable","name":"begin","nameLocation":"5912:5:14","nodeType":"VariableDeclaration","scope":3297,"src":"5904:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3264,"name":"uint256","nodeType":"ElementaryTypeName","src":"5904:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3267,"mutability":"mutable","name":"end","nameLocation":"5935:3:14","nodeType":"VariableDeclaration","scope":3297,"src":"5927:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3266,"name":"uint256","nodeType":"ElementaryTypeName","src":"5927:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5865:79:14"},"returnParameters":{"id":3273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3270,"mutability":"mutable","name":"success","nameLocation":"5973:7:14","nodeType":"VariableDeclaration","scope":3297,"src":"5968:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3269,"name":"bool","nodeType":"ElementaryTypeName","src":"5968:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3272,"mutability":"mutable","name":"value","nameLocation":"5990:5:14","nodeType":"VariableDeclaration","scope":3297,"src":"5982:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3271,"name":"uint256","nodeType":"ElementaryTypeName","src":"5982:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5967:29:14"},"scope":4060,"src":"5844:297:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3366,"nodeType":"Block","src":"6521:347:14","statements":[{"assignments":[3312],"declarations":[{"constant":false,"id":3312,"mutability":"mutable","name":"buffer","nameLocation":"6544:6:14","nodeType":"VariableDeclaration","scope":3366,"src":"6531:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3311,"name":"bytes","nodeType":"ElementaryTypeName","src":"6531:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3317,"initialValue":{"arguments":[{"id":3315,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"6559:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6553:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3313,"name":"bytes","nodeType":"ElementaryTypeName","src":"6553:5:14","typeDescriptions":{}}},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6553:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6531:34:14"},{"assignments":[3319],"declarations":[{"constant":false,"id":3319,"mutability":"mutable","name":"result","nameLocation":"6584:6:14","nodeType":"VariableDeclaration","scope":3366,"src":"6576:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3318,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3321,"initialValue":{"hexValue":"30","id":3320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6593:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6576:18:14"},{"body":{"id":3360,"nodeType":"Block","src":"6642:189:14","statements":[{"assignments":[3333],"declarations":[{"constant":false,"id":3333,"mutability":"mutable","name":"chr","nameLocation":"6662:3:14","nodeType":"VariableDeclaration","scope":3360,"src":"6656:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3332,"name":"uint8","nodeType":"ElementaryTypeName","src":"6656:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3343,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3338,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"6711:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3339,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3323,"src":"6719:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3337,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"6688:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6688:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6681:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3335,"name":"bytes1","nodeType":"ElementaryTypeName","src":"6681:6:14","typeDescriptions":{}}},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6681:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3334,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"6668:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6668:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"6656:67:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3344,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"6741:3:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":3345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6747:1:14","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"6741:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3351,"nodeType":"IfStatement","src":"6737:30:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6758:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6765:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3349,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6757:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3310,"id":3350,"nodeType":"Return","src":"6750:17:14"}},{"expression":{"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3352,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"6781:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":3353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6791:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"6781:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3355,"nodeType":"ExpressionStatement","src":"6781:12:14"},{"expression":{"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3356,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"6807:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3357,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"6817:3:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6807:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3359,"nodeType":"ExpressionStatement","src":"6807:13:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3326,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3323,"src":"6628:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3327,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"6632:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6628:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3361,"initializationExpression":{"assignments":[3323],"declarations":[{"constant":false,"id":3323,"mutability":"mutable","name":"i","nameLocation":"6617:1:14","nodeType":"VariableDeclaration","scope":3361,"src":"6609:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3322,"name":"uint256","nodeType":"ElementaryTypeName","src":"6609:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3325,"initialValue":{"id":3324,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3302,"src":"6621:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6609:17:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6637:3:14","subExpression":{"id":3329,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3323,"src":"6639:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3331,"nodeType":"ExpressionStatement","src":"6637:3:14"},"nodeType":"ForStatement","src":"6604:227:14"},{"expression":{"components":[{"hexValue":"74727565","id":3362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6848:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3363,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"6854:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3364,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6847:14:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3310,"id":3365,"nodeType":"Return","src":"6840:21:14"}]},"documentation":{"id":3298,"nodeType":"StructuredDocumentation","src":"6147:201:14","text":" @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3367,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6362:28:14","nodeType":"FunctionDefinition","parameters":{"id":3305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3300,"mutability":"mutable","name":"input","nameLocation":"6414:5:14","nodeType":"VariableDeclaration","scope":3367,"src":"6400:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3299,"name":"string","nodeType":"ElementaryTypeName","src":"6400:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3302,"mutability":"mutable","name":"begin","nameLocation":"6437:5:14","nodeType":"VariableDeclaration","scope":3367,"src":"6429:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3301,"name":"uint256","nodeType":"ElementaryTypeName","src":"6429:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3304,"mutability":"mutable","name":"end","nameLocation":"6460:3:14","nodeType":"VariableDeclaration","scope":3367,"src":"6452:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3303,"name":"uint256","nodeType":"ElementaryTypeName","src":"6452:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6390:79:14"},"returnParameters":{"id":3310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3307,"mutability":"mutable","name":"success","nameLocation":"6497:7:14","nodeType":"VariableDeclaration","scope":3367,"src":"6492:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3306,"name":"bool","nodeType":"ElementaryTypeName","src":"6492:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3309,"mutability":"mutable","name":"value","nameLocation":"6514:5:14","nodeType":"VariableDeclaration","scope":3367,"src":"6506:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3308,"name":"uint256","nodeType":"ElementaryTypeName","src":"6506:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6491:29:14"},"scope":4060,"src":"6353:515:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3385,"nodeType":"Block","src":"7165:63:14","statements":[{"expression":{"arguments":[{"id":3376,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"7191:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7198:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3380,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"7207:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7201:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3378,"name":"bytes","nodeType":"ElementaryTypeName","src":"7201:5:14","typeDescriptions":{}}},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7201:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7214:6:14","memberName":"length","nodeType":"MemberAccess","src":"7201:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3375,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[3386,3417],"referencedDeclaration":3417,"src":"7182:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7182:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3374,"id":3384,"nodeType":"Return","src":"7175:46:14"}]},"documentation":{"id":3368,"nodeType":"StructuredDocumentation","src":"6874:216:14","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":3386,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7104:8:14","nodeType":"FunctionDefinition","parameters":{"id":3371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3370,"mutability":"mutable","name":"input","nameLocation":"7127:5:14","nodeType":"VariableDeclaration","scope":3386,"src":"7113:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3369,"name":"string","nodeType":"ElementaryTypeName","src":"7113:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7112:21:14"},"returnParameters":{"id":3374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3386,"src":"7157:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3372,"name":"int256","nodeType":"ElementaryTypeName","src":"7157:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7156:8:14"},"scope":4060,"src":"7095:133:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3416,"nodeType":"Block","src":"7633:151:14","statements":[{"assignments":[3399,3401],"declarations":[{"constant":false,"id":3399,"mutability":"mutable","name":"success","nameLocation":"7649:7:14","nodeType":"VariableDeclaration","scope":3416,"src":"7644:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3398,"name":"bool","nodeType":"ElementaryTypeName","src":"7644:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3401,"mutability":"mutable","name":"value","nameLocation":"7665:5:14","nodeType":"VariableDeclaration","scope":3416,"src":"7658:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3400,"name":"int256","nodeType":"ElementaryTypeName","src":"7658:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3407,"initialValue":{"arguments":[{"id":3403,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"7686:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3404,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"7693:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3405,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"7700:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3402,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[3438,3480],"referencedDeclaration":3480,"src":"7674:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7674:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7643:61:14"},{"condition":{"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7718:8:14","subExpression":{"id":3408,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"7719:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3413,"nodeType":"IfStatement","src":"7714:41:14","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3410,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"7735:18:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7735:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3412,"nodeType":"RevertStatement","src":"7728:27:14"}},{"expression":{"id":3414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"7772:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3397,"id":3415,"nodeType":"Return","src":"7765:12:14"}]},"documentation":{"id":3387,"nodeType":"StructuredDocumentation","src":"7234:296:14","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":3417,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7544:8:14","nodeType":"FunctionDefinition","parameters":{"id":3394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3389,"mutability":"mutable","name":"input","nameLocation":"7567:5:14","nodeType":"VariableDeclaration","scope":3417,"src":"7553:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3388,"name":"string","nodeType":"ElementaryTypeName","src":"7553:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3391,"mutability":"mutable","name":"begin","nameLocation":"7582:5:14","nodeType":"VariableDeclaration","scope":3417,"src":"7574:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3390,"name":"uint256","nodeType":"ElementaryTypeName","src":"7574:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3393,"mutability":"mutable","name":"end","nameLocation":"7597:3:14","nodeType":"VariableDeclaration","scope":3417,"src":"7589:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3392,"name":"uint256","nodeType":"ElementaryTypeName","src":"7589:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7552:49:14"},"returnParameters":{"id":3397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3417,"src":"7625:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3395,"name":"int256","nodeType":"ElementaryTypeName","src":"7625:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7624:8:14"},"scope":4060,"src":"7535:249:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3437,"nodeType":"Block","src":"8175:82:14","statements":[{"expression":{"arguments":[{"id":3428,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"8220:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8227:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3432,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"8236:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8230:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3430,"name":"bytes","nodeType":"ElementaryTypeName","src":"8230:5:14","typeDescriptions":{}}},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8230:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8243:6:14","memberName":"length","nodeType":"MemberAccess","src":"8230:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3427,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"8192:27:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8192:58:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3426,"id":3436,"nodeType":"Return","src":"8185:65:14"}]},"documentation":{"id":3418,"nodeType":"StructuredDocumentation","src":"7790:287:14","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":3438,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8091:11:14","nodeType":"FunctionDefinition","parameters":{"id":3421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3420,"mutability":"mutable","name":"input","nameLocation":"8117:5:14","nodeType":"VariableDeclaration","scope":3438,"src":"8103:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3419,"name":"string","nodeType":"ElementaryTypeName","src":"8103:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8102:21:14"},"returnParameters":{"id":3426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3423,"mutability":"mutable","name":"success","nameLocation":"8152:7:14","nodeType":"VariableDeclaration","scope":3438,"src":"8147:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3422,"name":"bool","nodeType":"ElementaryTypeName","src":"8147:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3425,"mutability":"mutable","name":"value","nameLocation":"8168:5:14","nodeType":"VariableDeclaration","scope":3438,"src":"8161:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3424,"name":"int256","nodeType":"ElementaryTypeName","src":"8161:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8146:28:14"},"scope":4060,"src":"8082:175:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":3443,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8288:14:14","nodeType":"VariableDeclaration","scope":4060,"src":"8263:50:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3439,"name":"uint256","nodeType":"ElementaryTypeName","src":"8263:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":3442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8305:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":3441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8310:3:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8305:8:14","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":3479,"nodeType":"Block","src":"8779:143:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3457,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"8793:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3460,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"8805:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8799:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3458,"name":"bytes","nodeType":"ElementaryTypeName","src":"8799:5:14","typeDescriptions":{}}},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8799:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8812:6:14","memberName":"length","nodeType":"MemberAccess","src":"8799:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8793:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3464,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"8822:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3465,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"8830:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8822:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8793:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3472,"nodeType":"IfStatement","src":"8789:63:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8843:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8850:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3470,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8842:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3456,"id":3471,"nodeType":"Return","src":"8835:17:14"}},{"expression":{"arguments":[{"id":3474,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"8897:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3475,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"8904:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3476,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"8911:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3473,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"8869:27:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8869:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3456,"id":3478,"nodeType":"Return","src":"8862:53:14"}]},"documentation":{"id":3444,"nodeType":"StructuredDocumentation","src":"8320:303:14","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":3480,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8637:11:14","nodeType":"FunctionDefinition","parameters":{"id":3451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3446,"mutability":"mutable","name":"input","nameLocation":"8672:5:14","nodeType":"VariableDeclaration","scope":3480,"src":"8658:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3445,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3448,"mutability":"mutable","name":"begin","nameLocation":"8695:5:14","nodeType":"VariableDeclaration","scope":3480,"src":"8687:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3447,"name":"uint256","nodeType":"ElementaryTypeName","src":"8687:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3450,"mutability":"mutable","name":"end","nameLocation":"8718:3:14","nodeType":"VariableDeclaration","scope":3480,"src":"8710:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3449,"name":"uint256","nodeType":"ElementaryTypeName","src":"8710:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8648:79:14"},"returnParameters":{"id":3456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3453,"mutability":"mutable","name":"success","nameLocation":"8756:7:14","nodeType":"VariableDeclaration","scope":3480,"src":"8751:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3452,"name":"bool","nodeType":"ElementaryTypeName","src":"8751:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3455,"mutability":"mutable","name":"value","nameLocation":"8772:5:14","nodeType":"VariableDeclaration","scope":3480,"src":"8765:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3454,"name":"int256","nodeType":"ElementaryTypeName","src":"8765:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8750:28:14"},"scope":4060,"src":"8628:294:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3600,"nodeType":"Block","src":"9299:812:14","statements":[{"assignments":[3495],"declarations":[{"constant":false,"id":3495,"mutability":"mutable","name":"buffer","nameLocation":"9322:6:14","nodeType":"VariableDeclaration","scope":3600,"src":"9309:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3494,"name":"bytes","nodeType":"ElementaryTypeName","src":"9309:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3500,"initialValue":{"arguments":[{"id":3498,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"9337:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9331:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3496,"name":"bytes","nodeType":"ElementaryTypeName","src":"9331:5:14","typeDescriptions":{}}},"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9331:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9309:34:14"},{"assignments":[3502],"declarations":[{"constant":false,"id":3502,"mutability":"mutable","name":"sign","nameLocation":"9407:4:14","nodeType":"VariableDeclaration","scope":3600,"src":"9400:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3501,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9400:6:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3518,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3503,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"9414:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3504,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"9423:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9414:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":3513,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"9471:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3514,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"9479:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3512,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"9448:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9448:37:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9441:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3510,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9441:6:14","typeDescriptions":{}}},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9441:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9414:72:14","trueExpression":{"arguments":[{"hexValue":"30","id":3508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9436:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9429:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3506,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9429:6:14","typeDescriptions":{}}},"id":3509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9429:9:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9400:86:14"},{"assignments":[3520],"declarations":[{"constant":false,"id":3520,"mutability":"mutable","name":"positiveSign","nameLocation":"9572:12:14","nodeType":"VariableDeclaration","scope":3600,"src":"9567:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3519,"name":"bool","nodeType":"ElementaryTypeName","src":"9567:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3527,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3521,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"9587:4:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":3524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9602:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":3523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9595:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3522,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9595:6:14","typeDescriptions":{}}},"id":3525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9595:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9587:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9567:39:14"},{"assignments":[3529],"declarations":[{"constant":false,"id":3529,"mutability":"mutable","name":"negativeSign","nameLocation":"9621:12:14","nodeType":"VariableDeclaration","scope":3600,"src":"9616:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3528,"name":"bool","nodeType":"ElementaryTypeName","src":"9616:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3536,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3530,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"9636:4:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":3533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9651:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":3532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9644:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3531,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9644:6:14","typeDescriptions":{}}},"id":3534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9644:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9636:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9616:39:14"},{"assignments":[3538],"declarations":[{"constant":false,"id":3538,"mutability":"mutable","name":"offset","nameLocation":"9673:6:14","nodeType":"VariableDeclaration","scope":3600,"src":"9665:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3537,"name":"uint256","nodeType":"ElementaryTypeName","src":"9665:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3545,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3539,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"9683:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":3540,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"9699:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9683:28:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3542,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9682:30:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9713:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7466,"src":"9682:37:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9665:56:14"},{"assignments":[3547,3549],"declarations":[{"constant":false,"id":3547,"mutability":"mutable","name":"absSuccess","nameLocation":"9738:10:14","nodeType":"VariableDeclaration","scope":3600,"src":"9733:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3546,"name":"bool","nodeType":"ElementaryTypeName","src":"9733:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3549,"mutability":"mutable","name":"absValue","nameLocation":"9758:8:14","nodeType":"VariableDeclaration","scope":3600,"src":"9750:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3548,"name":"uint256","nodeType":"ElementaryTypeName","src":"9750:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3557,"initialValue":{"arguments":[{"id":3551,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"9783:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3552,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"9790:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3553,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"9798:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3555,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"9806:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3550,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[3260,3297],"referencedDeclaration":3297,"src":"9770:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9770:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9732:78:14"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3558,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"9825:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3559,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"9839:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3560,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"9850:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9825:39:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3578,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"9967:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3579,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"9981:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3581,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"9997:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3582,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"10009:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9997:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:56:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10095:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10102:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3596,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10094:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3493,"id":3597,"nodeType":"Return","src":"10087:17:14"},"id":3598,"nodeType":"IfStatement","src":"9963:141:14","trueBody":{"id":3593,"nodeType":"Block","src":"10025:56:14","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10047:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":3588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10058:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3587,"name":"int256","nodeType":"ElementaryTypeName","src":"10058:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":3586,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10053:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10053:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":3590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10066:3:14","memberName":"min","nodeType":"MemberAccess","src":"10053:16:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3591,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10046:24:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3493,"id":3592,"nodeType":"Return","src":"10039:31:14"}]}},"id":3599,"nodeType":"IfStatement","src":"9821:283:14","trueBody":{"id":3577,"nodeType":"Block","src":"9866:91:14","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9888:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":3564,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"9894:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":3572,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"9936:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9929:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3570,"name":"int256","nodeType":"ElementaryTypeName","src":"9929:6:14","typeDescriptions":{}}},"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9929:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9894:51:14","trueExpression":{"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"9909:17:14","subExpression":{"arguments":[{"id":3567,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"9917:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9910:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3565,"name":"int256","nodeType":"ElementaryTypeName","src":"9910:6:14","typeDescriptions":{}}},"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9910:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3575,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9887:59:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3493,"id":3576,"nodeType":"Return","src":"9880:66:14"}]}}]},"documentation":{"id":3481,"nodeType":"StructuredDocumentation","src":"8928:200:14","text":" @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3601,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9142:27:14","nodeType":"FunctionDefinition","parameters":{"id":3488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3483,"mutability":"mutable","name":"input","nameLocation":"9193:5:14","nodeType":"VariableDeclaration","scope":3601,"src":"9179:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3482,"name":"string","nodeType":"ElementaryTypeName","src":"9179:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3485,"mutability":"mutable","name":"begin","nameLocation":"9216:5:14","nodeType":"VariableDeclaration","scope":3601,"src":"9208:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3484,"name":"uint256","nodeType":"ElementaryTypeName","src":"9208:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3487,"mutability":"mutable","name":"end","nameLocation":"9239:3:14","nodeType":"VariableDeclaration","scope":3601,"src":"9231:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3486,"name":"uint256","nodeType":"ElementaryTypeName","src":"9231:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9169:79:14"},"returnParameters":{"id":3493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3490,"mutability":"mutable","name":"success","nameLocation":"9276:7:14","nodeType":"VariableDeclaration","scope":3601,"src":"9271:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3489,"name":"bool","nodeType":"ElementaryTypeName","src":"9271:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3492,"mutability":"mutable","name":"value","nameLocation":"9292:5:14","nodeType":"VariableDeclaration","scope":3601,"src":"9285:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3491,"name":"int256","nodeType":"ElementaryTypeName","src":"9285:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9270:28:14"},"scope":4060,"src":"9133:978:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3619,"nodeType":"Block","src":"10456:67:14","statements":[{"expression":{"arguments":[{"id":3610,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"10486:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10493:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3614,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"10502:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10496:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3612,"name":"bytes","nodeType":"ElementaryTypeName","src":"10496:5:14","typeDescriptions":{}}},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10496:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10509:6:14","memberName":"length","nodeType":"MemberAccess","src":"10496:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3609,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[3620,3651],"referencedDeclaration":3651,"src":"10473:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10473:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3608,"id":3618,"nodeType":"Return","src":"10466:50:14"}]},"documentation":{"id":3602,"nodeType":"StructuredDocumentation","src":"10117:259:14","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3620,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10390:12:14","nodeType":"FunctionDefinition","parameters":{"id":3605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3604,"mutability":"mutable","name":"input","nameLocation":"10417:5:14","nodeType":"VariableDeclaration","scope":3620,"src":"10403:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3603,"name":"string","nodeType":"ElementaryTypeName","src":"10403:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10402:21:14"},"returnParameters":{"id":3608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3620,"src":"10447:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3606,"name":"uint256","nodeType":"ElementaryTypeName","src":"10447:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10446:9:14"},"scope":4060,"src":"10381:142:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3650,"nodeType":"Block","src":"10937:156:14","statements":[{"assignments":[3633,3635],"declarations":[{"constant":false,"id":3633,"mutability":"mutable","name":"success","nameLocation":"10953:7:14","nodeType":"VariableDeclaration","scope":3650,"src":"10948:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3632,"name":"bool","nodeType":"ElementaryTypeName","src":"10948:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3635,"mutability":"mutable","name":"value","nameLocation":"10970:5:14","nodeType":"VariableDeclaration","scope":3650,"src":"10962:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3634,"name":"uint256","nodeType":"ElementaryTypeName","src":"10962:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3641,"initialValue":{"arguments":[{"id":3637,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"10995:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3638,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"11002:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3639,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3627,"src":"11009:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3636,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[3672,3709],"referencedDeclaration":3709,"src":"10979:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10979:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10947:66:14"},{"condition":{"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11027:8:14","subExpression":{"id":3642,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"11028:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3647,"nodeType":"IfStatement","src":"11023:41:14","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3644,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"11044:18:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11044:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3646,"nodeType":"RevertStatement","src":"11037:27:14"}},{"expression":{"id":3648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"11081:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3631,"id":3649,"nodeType":"Return","src":"11074:12:14"}]},"documentation":{"id":3621,"nodeType":"StructuredDocumentation","src":"10529:300:14","text":" @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3651,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10843:12:14","nodeType":"FunctionDefinition","parameters":{"id":3628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3623,"mutability":"mutable","name":"input","nameLocation":"10870:5:14","nodeType":"VariableDeclaration","scope":3651,"src":"10856:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3622,"name":"string","nodeType":"ElementaryTypeName","src":"10856:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3625,"mutability":"mutable","name":"begin","nameLocation":"10885:5:14","nodeType":"VariableDeclaration","scope":3651,"src":"10877:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3624,"name":"uint256","nodeType":"ElementaryTypeName","src":"10877:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3627,"mutability":"mutable","name":"end","nameLocation":"10900:3:14","nodeType":"VariableDeclaration","scope":3651,"src":"10892:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3626,"name":"uint256","nodeType":"ElementaryTypeName","src":"10892:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10855:49:14"},"returnParameters":{"id":3631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3651,"src":"10928:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3629,"name":"uint256","nodeType":"ElementaryTypeName","src":"10928:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10927:9:14"},"scope":4060,"src":"10834:259:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3671,"nodeType":"Block","src":"11420:86:14","statements":[{"expression":{"arguments":[{"id":3662,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"11469:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11476:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3666,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"11485:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11479:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3664,"name":"bytes","nodeType":"ElementaryTypeName","src":"11479:5:14","typeDescriptions":{}}},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11479:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11492:6:14","memberName":"length","nodeType":"MemberAccess","src":"11479:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3661,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3812,"src":"11437:31:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11437:62:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3660,"id":3670,"nodeType":"Return","src":"11430:69:14"}]},"documentation":{"id":3652,"nodeType":"StructuredDocumentation","src":"11099:218:14","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3672,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11331:15:14","nodeType":"FunctionDefinition","parameters":{"id":3655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3654,"mutability":"mutable","name":"input","nameLocation":"11361:5:14","nodeType":"VariableDeclaration","scope":3672,"src":"11347:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3653,"name":"string","nodeType":"ElementaryTypeName","src":"11347:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11346:21:14"},"returnParameters":{"id":3660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3657,"mutability":"mutable","name":"success","nameLocation":"11396:7:14","nodeType":"VariableDeclaration","scope":3672,"src":"11391:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3656,"name":"bool","nodeType":"ElementaryTypeName","src":"11391:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3659,"mutability":"mutable","name":"value","nameLocation":"11413:5:14","nodeType":"VariableDeclaration","scope":3672,"src":"11405:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3658,"name":"uint256","nodeType":"ElementaryTypeName","src":"11405:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11390:29:14"},"scope":4060,"src":"11322:184:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3708,"nodeType":"Block","src":"11914:147:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3686,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"11928:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3689,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"11940:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11934:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3687,"name":"bytes","nodeType":"ElementaryTypeName","src":"11934:5:14","typeDescriptions":{}}},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11934:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11947:6:14","memberName":"length","nodeType":"MemberAccess","src":"11934:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11928:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3693,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"11957:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3694,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"11965:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11957:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11928:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3701,"nodeType":"IfStatement","src":"11924:63:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11978:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11985:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3699,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"11977:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3685,"id":3700,"nodeType":"Return","src":"11970:17:14"}},{"expression":{"arguments":[{"id":3703,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"12036:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3704,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"12043:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3705,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"12050:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3702,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3812,"src":"12004:31:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:50:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3685,"id":3707,"nodeType":"Return","src":"11997:57:14"}]},"documentation":{"id":3673,"nodeType":"StructuredDocumentation","src":"11512:241:14","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3709,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11767:15:14","nodeType":"FunctionDefinition","parameters":{"id":3680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3675,"mutability":"mutable","name":"input","nameLocation":"11806:5:14","nodeType":"VariableDeclaration","scope":3709,"src":"11792:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3674,"name":"string","nodeType":"ElementaryTypeName","src":"11792:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3677,"mutability":"mutable","name":"begin","nameLocation":"11829:5:14","nodeType":"VariableDeclaration","scope":3709,"src":"11821:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3676,"name":"uint256","nodeType":"ElementaryTypeName","src":"11821:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3679,"mutability":"mutable","name":"end","nameLocation":"11852:3:14","nodeType":"VariableDeclaration","scope":3709,"src":"11844:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3678,"name":"uint256","nodeType":"ElementaryTypeName","src":"11844:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11782:79:14"},"returnParameters":{"id":3685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3682,"mutability":"mutable","name":"success","nameLocation":"11890:7:14","nodeType":"VariableDeclaration","scope":3709,"src":"11885:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3681,"name":"bool","nodeType":"ElementaryTypeName","src":"11885:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3684,"mutability":"mutable","name":"value","nameLocation":"11907:5:14","nodeType":"VariableDeclaration","scope":3709,"src":"11899:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3683,"name":"uint256","nodeType":"ElementaryTypeName","src":"11899:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11884:29:14"},"scope":4060,"src":"11758:303:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3811,"nodeType":"Block","src":"12447:880:14","statements":[{"assignments":[3724],"declarations":[{"constant":false,"id":3724,"mutability":"mutable","name":"buffer","nameLocation":"12470:6:14","nodeType":"VariableDeclaration","scope":3811,"src":"12457:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3723,"name":"bytes","nodeType":"ElementaryTypeName","src":"12457:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3729,"initialValue":{"arguments":[{"id":3727,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"12485:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12479:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3725,"name":"bytes","nodeType":"ElementaryTypeName","src":"12479:5:14","typeDescriptions":{}}},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12479:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12457:34:14"},{"assignments":[3731],"declarations":[{"constant":false,"id":3731,"mutability":"mutable","name":"hasPrefix","nameLocation":"12544:9:14","nodeType":"VariableDeclaration","scope":3811,"src":"12539:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3730,"name":"bool","nodeType":"ElementaryTypeName","src":"12539:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3751,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3732,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3716,"src":"12557:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3733,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3714,"src":"12563:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12571:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12563:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12557:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3737,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12556:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3741,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"12607:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3742,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3714,"src":"12615:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3740,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"12584:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12584:37:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12577:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3738,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12577:6:14","typeDescriptions":{}}},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12577:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12633:4:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12626:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3745,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12626:6:14","typeDescriptions":{}}},"id":3748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12626:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12577:61:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12556:82:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12539:99:14"},{"assignments":[3753],"declarations":[{"constant":false,"id":3753,"mutability":"mutable","name":"offset","nameLocation":"12727:6:14","nodeType":"VariableDeclaration","scope":3811,"src":"12719:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3752,"name":"uint256","nodeType":"ElementaryTypeName","src":"12719:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3759,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3754,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3731,"src":"12736:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12746:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7466,"src":"12736:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12736:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12757:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12736:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12719:39:14"},{"assignments":[3761],"declarations":[{"constant":false,"id":3761,"mutability":"mutable","name":"result","nameLocation":"12777:6:14","nodeType":"VariableDeclaration","scope":3811,"src":"12769:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3760,"name":"uint256","nodeType":"ElementaryTypeName","src":"12769:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3763,"initialValue":{"hexValue":"30","id":3762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12786:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12769:18:14"},{"body":{"id":3805,"nodeType":"Block","src":"12844:446:14","statements":[{"assignments":[3777],"declarations":[{"constant":false,"id":3777,"mutability":"mutable","name":"chr","nameLocation":"12864:3:14","nodeType":"VariableDeclaration","scope":3805,"src":"12858:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3776,"name":"uint8","nodeType":"ElementaryTypeName","src":"12858:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3787,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3782,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"12913:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3783,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3765,"src":"12921:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3781,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"12890:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12890:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3779,"name":"bytes1","nodeType":"ElementaryTypeName","src":"12883:6:14","typeDescriptions":{}}},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3778,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"12870:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12870:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"12858:67:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3788,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"12943:3:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":3789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12949:2:14","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"12943:8:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3795,"nodeType":"IfStatement","src":"12939:31:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12961:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12968:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3793,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3722,"id":3794,"nodeType":"Return","src":"12953:17:14"}},{"expression":{"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3796,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3761,"src":"12984:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":3797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12994:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12984:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3799,"nodeType":"ExpressionStatement","src":"12984:12:14"},{"id":3804,"nodeType":"UncheckedBlock","src":"13010:270:14","statements":[{"expression":{"id":3802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3800,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3761,"src":"13252:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3801,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"13262:3:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13252:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3803,"nodeType":"ExpressionStatement","src":"13252:13:14"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3770,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3765,"src":"12830:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3771,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3716,"src":"12834:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12830:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3806,"initializationExpression":{"assignments":[3765],"declarations":[{"constant":false,"id":3765,"mutability":"mutable","name":"i","nameLocation":"12810:1:14","nodeType":"VariableDeclaration","scope":3806,"src":"12802:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3764,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3769,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3766,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3714,"src":"12814:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3767,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3753,"src":"12822:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12814:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12802:26:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"12839:3:14","subExpression":{"id":3773,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3765,"src":"12841:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3775,"nodeType":"ExpressionStatement","src":"12839:3:14"},"nodeType":"ForStatement","src":"12797:493:14"},{"expression":{"components":[{"hexValue":"74727565","id":3807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13307:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3808,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3761,"src":"13313:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3809,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13306:14:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3722,"id":3810,"nodeType":"Return","src":"13299:21:14"}]},"documentation":{"id":3710,"nodeType":"StructuredDocumentation","src":"12067:204:14","text":" @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3812,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12285:31:14","nodeType":"FunctionDefinition","parameters":{"id":3717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3712,"mutability":"mutable","name":"input","nameLocation":"12340:5:14","nodeType":"VariableDeclaration","scope":3812,"src":"12326:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3711,"name":"string","nodeType":"ElementaryTypeName","src":"12326:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3714,"mutability":"mutable","name":"begin","nameLocation":"12363:5:14","nodeType":"VariableDeclaration","scope":3812,"src":"12355:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3713,"name":"uint256","nodeType":"ElementaryTypeName","src":"12355:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3716,"mutability":"mutable","name":"end","nameLocation":"12386:3:14","nodeType":"VariableDeclaration","scope":3812,"src":"12378:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3715,"name":"uint256","nodeType":"ElementaryTypeName","src":"12378:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12316:79:14"},"returnParameters":{"id":3722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3719,"mutability":"mutable","name":"success","nameLocation":"12423:7:14","nodeType":"VariableDeclaration","scope":3812,"src":"12418:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3718,"name":"bool","nodeType":"ElementaryTypeName","src":"12418:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3721,"mutability":"mutable","name":"value","nameLocation":"12440:5:14","nodeType":"VariableDeclaration","scope":3812,"src":"12432:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3720,"name":"uint256","nodeType":"ElementaryTypeName","src":"12432:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12417:29:14"},"scope":4060,"src":"12276:1051:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3830,"nodeType":"Block","src":"13625:67:14","statements":[{"expression":{"arguments":[{"id":3821,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"13655:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13662:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3825,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"13671:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13665:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3823,"name":"bytes","nodeType":"ElementaryTypeName","src":"13665:5:14","typeDescriptions":{}}},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13665:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13678:6:14","memberName":"length","nodeType":"MemberAccess","src":"13665:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3820,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[3831,3862],"referencedDeclaration":3862,"src":"13642:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":3828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13642:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3819,"id":3829,"nodeType":"Return","src":"13635:50:14"}]},"documentation":{"id":3813,"nodeType":"StructuredDocumentation","src":"13333:212:14","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3831,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13559:12:14","nodeType":"FunctionDefinition","parameters":{"id":3816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3815,"mutability":"mutable","name":"input","nameLocation":"13586:5:14","nodeType":"VariableDeclaration","scope":3831,"src":"13572:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3814,"name":"string","nodeType":"ElementaryTypeName","src":"13572:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13571:21:14"},"returnParameters":{"id":3819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3831,"src":"13616:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3817,"name":"address","nodeType":"ElementaryTypeName","src":"13616:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13615:9:14"},"scope":4060,"src":"13550:142:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3861,"nodeType":"Block","src":"14058:165:14","statements":[{"assignments":[3844,3846],"declarations":[{"constant":false,"id":3844,"mutability":"mutable","name":"success","nameLocation":"14074:7:14","nodeType":"VariableDeclaration","scope":3861,"src":"14069:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3843,"name":"bool","nodeType":"ElementaryTypeName","src":"14069:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3846,"mutability":"mutable","name":"value","nameLocation":"14091:5:14","nodeType":"VariableDeclaration","scope":3861,"src":"14083:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3845,"name":"address","nodeType":"ElementaryTypeName","src":"14083:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3852,"initialValue":{"arguments":[{"id":3848,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"14116:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3849,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"14123:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3850,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"14130:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3847,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3883,3987],"referencedDeclaration":3987,"src":"14100:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14100:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14068:66:14"},{"condition":{"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14148:8:14","subExpression":{"id":3853,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"14149:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3858,"nodeType":"IfStatement","src":"14144:50:14","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3855,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"14165:27:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14165:29:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3857,"nodeType":"RevertStatement","src":"14158:36:14"}},{"expression":{"id":3859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"14211:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3842,"id":3860,"nodeType":"Return","src":"14204:12:14"}]},"documentation":{"id":3832,"nodeType":"StructuredDocumentation","src":"13698:252:14","text":" @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3862,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:14","nodeType":"FunctionDefinition","parameters":{"id":3839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3834,"mutability":"mutable","name":"input","nameLocation":"13991:5:14","nodeType":"VariableDeclaration","scope":3862,"src":"13977:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3833,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3836,"mutability":"mutable","name":"begin","nameLocation":"14006:5:14","nodeType":"VariableDeclaration","scope":3862,"src":"13998:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3835,"name":"uint256","nodeType":"ElementaryTypeName","src":"13998:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3838,"mutability":"mutable","name":"end","nameLocation":"14021:3:14","nodeType":"VariableDeclaration","scope":3862,"src":"14013:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3837,"name":"uint256","nodeType":"ElementaryTypeName","src":"14013:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13976:49:14"},"returnParameters":{"id":3842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3862,"src":"14049:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3840,"name":"address","nodeType":"ElementaryTypeName","src":"14049:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14048:9:14"},"scope":4060,"src":"13955:268:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3882,"nodeType":"Block","src":"14523:70:14","statements":[{"expression":{"arguments":[{"id":3873,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"14556:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14563:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3877,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"14572:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14566:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3875,"name":"bytes","nodeType":"ElementaryTypeName","src":"14566:5:14","typeDescriptions":{}}},"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14566:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14579:6:14","memberName":"length","nodeType":"MemberAccess","src":"14566:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3872,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3883,3987],"referencedDeclaration":3987,"src":"14540:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14540:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3871,"id":3881,"nodeType":"Return","src":"14533:53:14"}]},"documentation":{"id":3863,"nodeType":"StructuredDocumentation","src":"14229:191:14","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress} requirements."},"id":3883,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14434:15:14","nodeType":"FunctionDefinition","parameters":{"id":3866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3865,"mutability":"mutable","name":"input","nameLocation":"14464:5:14","nodeType":"VariableDeclaration","scope":3883,"src":"14450:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3864,"name":"string","nodeType":"ElementaryTypeName","src":"14450:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14449:21:14"},"returnParameters":{"id":3871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3868,"mutability":"mutable","name":"success","nameLocation":"14499:7:14","nodeType":"VariableDeclaration","scope":3883,"src":"14494:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3867,"name":"bool","nodeType":"ElementaryTypeName","src":"14494:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3870,"mutability":"mutable","name":"value","nameLocation":"14516:5:14","nodeType":"VariableDeclaration","scope":3883,"src":"14508:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3869,"name":"address","nodeType":"ElementaryTypeName","src":"14508:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14493:29:14"},"scope":4060,"src":"14425:168:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3986,"nodeType":"Block","src":"14963:733:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3897,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"14977:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3900,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"14989:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14983:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3898,"name":"bytes","nodeType":"ElementaryTypeName","src":"14983:5:14","typeDescriptions":{}}},"id":3901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14983:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14996:6:14","memberName":"length","nodeType":"MemberAccess","src":"14983:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14977:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3904,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"15006:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3905,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"15014:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15006:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14977:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3915,"nodeType":"IfStatement","src":"14973:72:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15027:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15042:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15034:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3909,"name":"address","nodeType":"ElementaryTypeName","src":"15034:7:14","typeDescriptions":{}}},"id":3912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15034:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3913,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15026:19:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3896,"id":3914,"nodeType":"Return","src":"15019:26:14"}},{"assignments":[3917],"declarations":[{"constant":false,"id":3917,"mutability":"mutable","name":"hasPrefix","nameLocation":"15061:9:14","nodeType":"VariableDeclaration","scope":3986,"src":"15056:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3916,"name":"bool","nodeType":"ElementaryTypeName","src":"15056:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3940,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3918,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"15074:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3919,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"15080:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15088:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15080:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15074:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3923,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15073:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":3929,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"15130:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15124:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3927,"name":"bytes","nodeType":"ElementaryTypeName","src":"15124:5:14","typeDescriptions":{}}},"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15124:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3931,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"15138:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3926,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"15101:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15101:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15094:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3924,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15094:6:14","typeDescriptions":{}}},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15094:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15156:4:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15149:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3934,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15149:6:14","typeDescriptions":{}}},"id":3937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15149:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15094:67:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15073:88:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15056:105:14"},{"assignments":[3942],"declarations":[{"constant":false,"id":3942,"mutability":"mutable","name":"expectedLength","nameLocation":"15250:14:14","nodeType":"VariableDeclaration","scope":3986,"src":"15242:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3941,"name":"uint256","nodeType":"ElementaryTypeName","src":"15242:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3950,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":3943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15267:2:14","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3944,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"15272:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15282:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7466,"src":"15272:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15272:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15293:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15272:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15267:27:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15242:52:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3951,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"15359:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3952,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"15365:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3954,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3942,"src":"15374:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3984,"nodeType":"Block","src":"15639:51:14","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":3977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15661:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15676:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15668:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3978,"name":"address","nodeType":"ElementaryTypeName","src":"15668:7:14","typeDescriptions":{}}},"id":3981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15668:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3982,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15660:19:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3896,"id":3983,"nodeType":"Return","src":"15653:26:14"}]},"id":3985,"nodeType":"IfStatement","src":"15355:335:14","trueBody":{"id":3976,"nodeType":"Block","src":"15390:243:14","statements":[{"assignments":[3957,3959],"declarations":[{"constant":false,"id":3957,"mutability":"mutable","name":"s","nameLocation":"15511:1:14","nodeType":"VariableDeclaration","scope":3976,"src":"15506:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3956,"name":"bool","nodeType":"ElementaryTypeName","src":"15506:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3959,"mutability":"mutable","name":"v","nameLocation":"15522:1:14","nodeType":"VariableDeclaration","scope":3976,"src":"15514:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3958,"name":"uint256","nodeType":"ElementaryTypeName","src":"15514:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3965,"initialValue":{"arguments":[{"id":3961,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"15559:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3962,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"15566:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3963,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"15573:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3960,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3812,"src":"15527:31:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15527:50:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15505:72:14"},{"expression":{"components":[{"id":3966,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"15599:1:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":3971,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"15618:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15610:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3969,"name":"uint160","nodeType":"ElementaryTypeName","src":"15610:7:14","typeDescriptions":{}}},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15610:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15602:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3967,"name":"address","nodeType":"ElementaryTypeName","src":"15602:7:14","typeDescriptions":{}}},"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15602:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3974,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15598:24:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3896,"id":3975,"nodeType":"Return","src":"15591:31:14"}]}}]},"documentation":{"id":3884,"nodeType":"StructuredDocumentation","src":"14599:203:14","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress} requirements."},"id":3987,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14816:15:14","nodeType":"FunctionDefinition","parameters":{"id":3891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3886,"mutability":"mutable","name":"input","nameLocation":"14855:5:14","nodeType":"VariableDeclaration","scope":3987,"src":"14841:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3885,"name":"string","nodeType":"ElementaryTypeName","src":"14841:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3888,"mutability":"mutable","name":"begin","nameLocation":"14878:5:14","nodeType":"VariableDeclaration","scope":3987,"src":"14870:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3887,"name":"uint256","nodeType":"ElementaryTypeName","src":"14870:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3890,"mutability":"mutable","name":"end","nameLocation":"14901:3:14","nodeType":"VariableDeclaration","scope":3987,"src":"14893:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3889,"name":"uint256","nodeType":"ElementaryTypeName","src":"14893:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14831:79:14"},"returnParameters":{"id":3896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3893,"mutability":"mutable","name":"success","nameLocation":"14939:7:14","nodeType":"VariableDeclaration","scope":3987,"src":"14934:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3892,"name":"bool","nodeType":"ElementaryTypeName","src":"14934:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3895,"mutability":"mutable","name":"value","nameLocation":"14956:5:14","nodeType":"VariableDeclaration","scope":3987,"src":"14948:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3894,"name":"address","nodeType":"ElementaryTypeName","src":"14948:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14933:29:14"},"scope":4060,"src":"14807:889:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4046,"nodeType":"Block","src":"15765:461:14","statements":[{"assignments":[3995],"declarations":[{"constant":false,"id":3995,"mutability":"mutable","name":"value","nameLocation":"15781:5:14","nodeType":"VariableDeclaration","scope":4046,"src":"15775:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3994,"name":"uint8","nodeType":"ElementaryTypeName","src":"15775:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4000,"initialValue":{"arguments":[{"id":3998,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"15795:3:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15789:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3996,"name":"uint8","nodeType":"ElementaryTypeName","src":"15789:5:14","typeDescriptions":{}}},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15789:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"15775:24:14"},{"id":4043,"nodeType":"UncheckedBlock","src":"15959:238:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"15987:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":4002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15995:2:14","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"15987:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"16001:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":4005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16009:2:14","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16001:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15987:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"16047:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":4013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16055:2:14","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16047:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"16061:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":4016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16069:3:14","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16061:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16047:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"16108:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":4024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16116:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16108:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"16122:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":4027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16130:2:14","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16122:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16108:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":4036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16176:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4035,"name":"uint8","nodeType":"ElementaryTypeName","src":"16176:5:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":4034,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16171:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16171:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":4038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16183:3:14","memberName":"max","nodeType":"MemberAccess","src":"16171:15:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3993,"id":4039,"nodeType":"Return","src":"16164:22:14"},"id":4040,"nodeType":"IfStatement","src":"16104:82:14","trueBody":{"expression":{"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"16134:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":4031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16143:2:14","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16134:11:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4033,"nodeType":"ExpressionStatement","src":"16134:11:14"}},"id":4041,"nodeType":"IfStatement","src":"16043:143:14","trueBody":{"expression":{"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"16074:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":4020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16083:2:14","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16074:11:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4022,"nodeType":"ExpressionStatement","src":"16074:11:14"}},"id":4042,"nodeType":"IfStatement","src":"15983:203:14","trueBody":{"expression":{"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"16013:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":4009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16022:2:14","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16013:11:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4011,"nodeType":"ExpressionStatement","src":"16013:11:14"}}]},{"expression":{"id":4044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"16214:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3993,"id":4045,"nodeType":"Return","src":"16207:12:14"}]},"id":4047,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"15711:12:14","nodeType":"FunctionDefinition","parameters":{"id":3990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3989,"mutability":"mutable","name":"chr","nameLocation":"15731:3:14","nodeType":"VariableDeclaration","scope":4047,"src":"15724:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3988,"name":"bytes1","nodeType":"ElementaryTypeName","src":"15724:6:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"15723:12:14"},"returnParameters":{"id":3993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3992,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4047,"src":"15758:5:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3991,"name":"uint8","nodeType":"ElementaryTypeName","src":"15758:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"15757:7:14"},"scope":4060,"src":"15702:524:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4058,"nodeType":"Block","src":"16611:225:14","statements":[{"AST":{"nativeSrc":"16760:70:14","nodeType":"YulBlock","src":"16760:70:14","statements":[{"nativeSrc":"16774:46:14","nodeType":"YulAssignment","src":"16774:46:14","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"16793:6:14","nodeType":"YulIdentifier","src":"16793:6:14"},{"arguments":[{"kind":"number","nativeSrc":"16805:4:14","nodeType":"YulLiteral","src":"16805:4:14","type":"","value":"0x20"},{"name":"offset","nativeSrc":"16811:6:14","nodeType":"YulIdentifier","src":"16811:6:14"}],"functionName":{"name":"add","nativeSrc":"16801:3:14","nodeType":"YulIdentifier","src":"16801:3:14"},"nativeSrc":"16801:17:14","nodeType":"YulFunctionCall","src":"16801:17:14"}],"functionName":{"name":"add","nativeSrc":"16789:3:14","nodeType":"YulIdentifier","src":"16789:3:14"},"nativeSrc":"16789:30:14","nodeType":"YulFunctionCall","src":"16789:30:14"}],"functionName":{"name":"mload","nativeSrc":"16783:5:14","nodeType":"YulIdentifier","src":"16783:5:14"},"nativeSrc":"16783:37:14","nodeType":"YulFunctionCall","src":"16783:37:14"},"variableNames":[{"name":"value","nativeSrc":"16774:5:14","nodeType":"YulIdentifier","src":"16774:5:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4050,"isOffset":false,"isSlot":false,"src":"16793:6:14","valueSize":1},{"declaration":4052,"isOffset":false,"isSlot":false,"src":"16811:6:14","valueSize":1},{"declaration":4055,"isOffset":false,"isSlot":false,"src":"16774:5:14","valueSize":1}],"flags":["memory-safe"],"id":4057,"nodeType":"InlineAssembly","src":"16735:95:14"}]},"documentation":{"id":4048,"nodeType":"StructuredDocumentation","src":"16232:268:14","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":4059,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"16514:22:14","nodeType":"FunctionDefinition","parameters":{"id":4053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4050,"mutability":"mutable","name":"buffer","nameLocation":"16550:6:14","nodeType":"VariableDeclaration","scope":4059,"src":"16537:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4049,"name":"bytes","nodeType":"ElementaryTypeName","src":"16537:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4052,"mutability":"mutable","name":"offset","nameLocation":"16566:6:14","nodeType":"VariableDeclaration","scope":4059,"src":"16558:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4051,"name":"uint256","nodeType":"ElementaryTypeName","src":"16558:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16536:37:14"},"returnParameters":{"id":4056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4055,"mutability":"mutable","name":"value","nameLocation":"16604:5:14","nodeType":"VariableDeclaration","scope":4059,"src":"16596:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4054,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16596:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16595:15:14"},"scope":4060,"src":"16505:331:14","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4061,"src":"297:16541:14","usedErrors":[2884,2887,2890],"usedEvents":[]}],"src":"101:16738:14"},"id":14},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[4084],"IERC165":[4096]},"id":4085,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4062,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":4064,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4085,"sourceUnit":4097,"src":"140:38:15","symbolAliases":[{"foreign":{"id":4063,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4096,"src":"148:7:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4066,"name":"IERC165","nameLocations":["688:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":4096,"src":"688:7:15"},"id":4067,"nodeType":"InheritanceSpecifier","src":"688:7:15"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":4065,"nodeType":"StructuredDocumentation","src":"180:479:15","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":4084,"linearizedBaseContracts":[4084,4096],"name":"ERC165","nameLocation":"678:6:15","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[4095],"body":{"id":4082,"nodeType":"Block","src":"845:64:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4075,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"862:11:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4077,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4096,"src":"882:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4096_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$4096_$","typeString":"type(contract IERC165)"}],"id":4076,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$4096","typeString":"type(contract IERC165)"}},"id":4079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:15","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4074,"id":4081,"nodeType":"Return","src":"855:47:15"}]},"documentation":{"id":4068,"nodeType":"StructuredDocumentation","src":"702:56:15","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":4083,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:15","nodeType":"FunctionDefinition","parameters":{"id":4071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4070,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:15","nodeType":"VariableDeclaration","scope":4083,"src":"790:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4069,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:15"},"returnParameters":{"id":4074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4083,"src":"839:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4072,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:15"},"scope":4084,"src":"763:146:15","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":4085,"src":"660:251:15","usedErrors":[],"usedEvents":[]}],"src":"114:798:15"},"id":15},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4096]},"id":4097,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4086,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":4087,"nodeType":"StructuredDocumentation","src":"141:280:16","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4096,"linearizedBaseContracts":[4096],"name":"IERC165","nameLocation":"432:7:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4088,"nodeType":"StructuredDocumentation","src":"446:340:16","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4095,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:16","nodeType":"FunctionDefinition","parameters":{"id":4091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4090,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:16","nodeType":"VariableDeclaration","scope":4095,"src":"818:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4089,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:16"},"returnParameters":{"id":4094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4095,"src":"861:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4092,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:16"},"scope":4096,"src":"791:76:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4097,"src":"422:447:16","usedErrors":[],"usedEvents":[]}],"src":"115:755:16"},"id":16},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5702],"Panic":[2606],"SafeCast":[7467]},"id":5703,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4098,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":4100,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5703,"sourceUnit":2607,"src":"129:35:17","symbolAliases":[{"foreign":{"id":4099,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"137:5:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":4102,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5703,"sourceUnit":7468,"src":"165:40:17","symbolAliases":[{"foreign":{"id":4101,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"173:8:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4103,"nodeType":"StructuredDocumentation","src":"207:73:17","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5702,"linearizedBaseContracts":[5702],"name":"Math","nameLocation":"289:4:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4108,"members":[{"id":4104,"name":"Floor","nameLocation":"324:5:17","nodeType":"EnumValue","src":"324:5:17"},{"id":4105,"name":"Ceil","nameLocation":"367:4:17","nodeType":"EnumValue","src":"367:4:17"},{"id":4106,"name":"Trunc","nameLocation":"409:5:17","nodeType":"EnumValue","src":"409:5:17"},{"id":4107,"name":"Expand","nameLocation":"439:6:17","nodeType":"EnumValue","src":"439:6:17"}],"name":"Rounding","nameLocation":"305:8:17","nodeType":"EnumDefinition","src":"300:169:17"},{"body":{"id":4139,"nodeType":"Block","src":"677:140:17","statements":[{"id":4138,"nodeType":"UncheckedBlock","src":"687:124:17","statements":[{"assignments":[4121],"declarations":[{"constant":false,"id":4121,"mutability":"mutable","name":"c","nameLocation":"719:1:17","nodeType":"VariableDeclaration","scope":4138,"src":"711:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4120,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4125,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4122,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"723:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4123,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"727:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4126,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"746:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4127,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"750:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4133,"nodeType":"IfStatement","src":"742:28:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4131,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4119,"id":4132,"nodeType":"Return","src":"753:17:17"}},{"expression":{"components":[{"hexValue":"74727565","id":4134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4135,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"798:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4136,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4119,"id":4137,"nodeType":"Return","src":"784:16:17"}]}]},"documentation":{"id":4109,"nodeType":"StructuredDocumentation","src":"475:106:17","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":4140,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:17","nodeType":"FunctionDefinition","parameters":{"id":4114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4111,"mutability":"mutable","name":"a","nameLocation":"610:1:17","nodeType":"VariableDeclaration","scope":4140,"src":"602:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4110,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4113,"mutability":"mutable","name":"b","nameLocation":"621:1:17","nodeType":"VariableDeclaration","scope":4140,"src":"613:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4112,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:17"},"returnParameters":{"id":4119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4116,"mutability":"mutable","name":"success","nameLocation":"652:7:17","nodeType":"VariableDeclaration","scope":4140,"src":"647:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4115,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4118,"mutability":"mutable","name":"result","nameLocation":"669:6:17","nodeType":"VariableDeclaration","scope":4140,"src":"661:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4117,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:17"},"scope":5702,"src":"586:231:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4167,"nodeType":"Block","src":"1028:113:17","statements":[{"id":4166,"nodeType":"UncheckedBlock","src":"1038:97:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4152,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"1066:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4153,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"1070:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4159,"nodeType":"IfStatement","src":"1062:28:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4157,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4151,"id":4158,"nodeType":"Return","src":"1073:17:17"}},{"expression":{"components":[{"hexValue":"74727565","id":4160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4161,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"1118:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4162,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"1122:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4164,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4151,"id":4165,"nodeType":"Return","src":"1104:20:17"}]}]},"documentation":{"id":4141,"nodeType":"StructuredDocumentation","src":"823:109:17","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":4168,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:17","nodeType":"FunctionDefinition","parameters":{"id":4146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4143,"mutability":"mutable","name":"a","nameLocation":"961:1:17","nodeType":"VariableDeclaration","scope":4168,"src":"953:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4142,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4145,"mutability":"mutable","name":"b","nameLocation":"972:1:17","nodeType":"VariableDeclaration","scope":4168,"src":"964:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4144,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:17"},"returnParameters":{"id":4151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4148,"mutability":"mutable","name":"success","nameLocation":"1003:7:17","nodeType":"VariableDeclaration","scope":4168,"src":"998:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4147,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4150,"mutability":"mutable","name":"result","nameLocation":"1020:6:17","nodeType":"VariableDeclaration","scope":4168,"src":"1012:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4149,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:17"},"scope":5702,"src":"937:204:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4209,"nodeType":"Block","src":"1355:417:17","statements":[{"id":4208,"nodeType":"UncheckedBlock","src":"1365:401:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4180,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"1623:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4187,"nodeType":"IfStatement","src":"1619:28:17","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":4183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":4184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4185,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4179,"id":4186,"nodeType":"Return","src":"1631:16:17"}},{"assignments":[4189],"declarations":[{"constant":false,"id":4189,"mutability":"mutable","name":"c","nameLocation":"1669:1:17","nodeType":"VariableDeclaration","scope":4208,"src":"1661:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4188,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4193,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4190,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"1673:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4191,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"1677:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4194,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"1696:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4195,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"1700:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4197,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"1705:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4203,"nodeType":"IfStatement","src":"1692:33:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4201,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4179,"id":4202,"nodeType":"Return","src":"1708:17:17"}},{"expression":{"components":[{"hexValue":"74727565","id":4204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4205,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"1753:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4206,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4179,"id":4207,"nodeType":"Return","src":"1739:16:17"}]}]},"documentation":{"id":4169,"nodeType":"StructuredDocumentation","src":"1147:112:17","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":4210,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:17","nodeType":"FunctionDefinition","parameters":{"id":4174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4171,"mutability":"mutable","name":"a","nameLocation":"1288:1:17","nodeType":"VariableDeclaration","scope":4210,"src":"1280:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4170,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4173,"mutability":"mutable","name":"b","nameLocation":"1299:1:17","nodeType":"VariableDeclaration","scope":4210,"src":"1291:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4172,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:17"},"returnParameters":{"id":4179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4176,"mutability":"mutable","name":"success","nameLocation":"1330:7:17","nodeType":"VariableDeclaration","scope":4210,"src":"1325:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4175,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4178,"mutability":"mutable","name":"result","nameLocation":"1347:6:17","nodeType":"VariableDeclaration","scope":4210,"src":"1339:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4177,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:17"},"scope":5702,"src":"1264:508:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4237,"nodeType":"Block","src":"1987:114:17","statements":[{"id":4236,"nodeType":"UncheckedBlock","src":"1997:98:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4222,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"2025:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4229,"nodeType":"IfStatement","src":"2021:29:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4227,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4221,"id":4228,"nodeType":"Return","src":"2033:17:17"}},{"expression":{"components":[{"hexValue":"74727565","id":4230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4231,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"2078:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4232,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"2082:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4234,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4221,"id":4235,"nodeType":"Return","src":"2064:20:17"}]}]},"documentation":{"id":4211,"nodeType":"StructuredDocumentation","src":"1778:113:17","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":4238,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:17","nodeType":"FunctionDefinition","parameters":{"id":4216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4213,"mutability":"mutable","name":"a","nameLocation":"1920:1:17","nodeType":"VariableDeclaration","scope":4238,"src":"1912:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4212,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4215,"mutability":"mutable","name":"b","nameLocation":"1931:1:17","nodeType":"VariableDeclaration","scope":4238,"src":"1923:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4214,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:17"},"returnParameters":{"id":4221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4218,"mutability":"mutable","name":"success","nameLocation":"1962:7:17","nodeType":"VariableDeclaration","scope":4238,"src":"1957:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4217,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4220,"mutability":"mutable","name":"result","nameLocation":"1979:6:17","nodeType":"VariableDeclaration","scope":4238,"src":"1971:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4219,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:17"},"scope":5702,"src":"1896:205:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4265,"nodeType":"Block","src":"2326:114:17","statements":[{"id":4264,"nodeType":"UncheckedBlock","src":"2336:98:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4250,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"2364:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4257,"nodeType":"IfStatement","src":"2360:29:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4255,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4249,"id":4256,"nodeType":"Return","src":"2372:17:17"}},{"expression":{"components":[{"hexValue":"74727565","id":4258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4259,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4241,"src":"2417:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4260,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"2421:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4262,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4249,"id":4263,"nodeType":"Return","src":"2403:20:17"}]}]},"documentation":{"id":4239,"nodeType":"StructuredDocumentation","src":"2107:123:17","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":4266,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:17","nodeType":"FunctionDefinition","parameters":{"id":4244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4241,"mutability":"mutable","name":"a","nameLocation":"2259:1:17","nodeType":"VariableDeclaration","scope":4266,"src":"2251:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4240,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4243,"mutability":"mutable","name":"b","nameLocation":"2270:1:17","nodeType":"VariableDeclaration","scope":4266,"src":"2262:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4242,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:17"},"returnParameters":{"id":4249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4246,"mutability":"mutable","name":"success","nameLocation":"2301:7:17","nodeType":"VariableDeclaration","scope":4266,"src":"2296:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4245,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4248,"mutability":"mutable","name":"result","nameLocation":"2318:6:17","nodeType":"VariableDeclaration","scope":4266,"src":"2310:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4247,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:17"},"scope":5702,"src":"2235:205:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4292,"nodeType":"Block","src":"2912:207:17","statements":[{"id":4291,"nodeType":"UncheckedBlock","src":"2922:191:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4278,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"3060:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4279,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"3066:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4280,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"3070:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4282,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4285,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"3091:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4283,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"3075:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7467_$","typeString":"type(library SafeCast)"}},"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7466,"src":"3075:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4288,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4277,"id":4290,"nodeType":"Return","src":"3053:49:17"}]}]},"documentation":{"id":4267,"nodeType":"StructuredDocumentation","src":"2446:374:17","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":4293,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:17","nodeType":"FunctionDefinition","parameters":{"id":4274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4269,"mutability":"mutable","name":"condition","nameLocation":"2847:9:17","nodeType":"VariableDeclaration","scope":4293,"src":"2842:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4268,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4271,"mutability":"mutable","name":"a","nameLocation":"2866:1:17","nodeType":"VariableDeclaration","scope":4293,"src":"2858:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4270,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4273,"mutability":"mutable","name":"b","nameLocation":"2877:1:17","nodeType":"VariableDeclaration","scope":4293,"src":"2869:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4272,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:17"},"returnParameters":{"id":4277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4293,"src":"2903:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4275,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:17"},"scope":5702,"src":"2825:294:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4311,"nodeType":"Block","src":"3256:44:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4304,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"3281:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4305,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"3285:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4307,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"3288:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4308,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"3291:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4303,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"3273:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4302,"id":4310,"nodeType":"Return","src":"3266:27:17"}]},"documentation":{"id":4294,"nodeType":"StructuredDocumentation","src":"3125:59:17","text":" @dev Returns the largest of two numbers."},"id":4312,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:17","nodeType":"FunctionDefinition","parameters":{"id":4299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4296,"mutability":"mutable","name":"a","nameLocation":"3210:1:17","nodeType":"VariableDeclaration","scope":4312,"src":"3202:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4295,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4298,"mutability":"mutable","name":"b","nameLocation":"3221:1:17","nodeType":"VariableDeclaration","scope":4312,"src":"3213:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4297,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:17"},"returnParameters":{"id":4302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4312,"src":"3247:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4300,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:17"},"scope":5702,"src":"3189:111:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4330,"nodeType":"Block","src":"3438:44:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4323,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4315,"src":"3463:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4324,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"3467:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4326,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4315,"src":"3470:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4327,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"3473:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4322,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"3455:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4321,"id":4329,"nodeType":"Return","src":"3448:27:17"}]},"documentation":{"id":4313,"nodeType":"StructuredDocumentation","src":"3306:60:17","text":" @dev Returns the smallest of two numbers."},"id":4331,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:17","nodeType":"FunctionDefinition","parameters":{"id":4318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4315,"mutability":"mutable","name":"a","nameLocation":"3392:1:17","nodeType":"VariableDeclaration","scope":4331,"src":"3384:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4314,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4317,"mutability":"mutable","name":"b","nameLocation":"3403:1:17","nodeType":"VariableDeclaration","scope":4331,"src":"3395:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4316,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:17"},"returnParameters":{"id":4321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4331,"src":"3429:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4319,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:17"},"scope":5702,"src":"3371:111:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4353,"nodeType":"Block","src":"3666:82:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4341,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"3721:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4342,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"3725:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4344,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4345,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"3731:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4346,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"3735:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4348,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4340,"id":4352,"nodeType":"Return","src":"3713:28:17"}]},"documentation":{"id":4332,"nodeType":"StructuredDocumentation","src":"3488:102:17","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4354,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:17","nodeType":"FunctionDefinition","parameters":{"id":4337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4334,"mutability":"mutable","name":"a","nameLocation":"3620:1:17","nodeType":"VariableDeclaration","scope":4354,"src":"3612:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4333,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4336,"mutability":"mutable","name":"b","nameLocation":"3631:1:17","nodeType":"VariableDeclaration","scope":4354,"src":"3623:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4335,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:17"},"returnParameters":{"id":4340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4354,"src":"3657:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4338,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:17"},"scope":5702,"src":"3595:153:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4394,"nodeType":"Block","src":"4040:633:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4364,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"4054:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4375,"nodeType":"IfStatement","src":"4050:150:17","trueBody":{"id":4374,"nodeType":"Block","src":"4062:138:17","statements":[{"expression":{"arguments":[{"expression":{"id":4370,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"4166:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2606_$","typeString":"type(library Panic)"}},"id":4371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:17","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2573,"src":"4166:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4367,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"4154:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2606_$","typeString":"type(library Panic)"}},"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:17","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2605,"src":"4154:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4373,"nodeType":"ExpressionStatement","src":"4154:35:17"}]}},{"id":4393,"nodeType":"UncheckedBlock","src":"4583:84:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4378,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"4630:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4376,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"4614:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7467_$","typeString":"type(library SafeCast)"}},"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7466,"src":"4614:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4382,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"4641:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4385,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4386,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"4650:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4390,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4363,"id":4392,"nodeType":"Return","src":"4607:49:17"}]}]},"documentation":{"id":4355,"nodeType":"StructuredDocumentation","src":"3754:210:17","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4395,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:17","nodeType":"FunctionDefinition","parameters":{"id":4360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4357,"mutability":"mutable","name":"a","nameLocation":"3994:1:17","nodeType":"VariableDeclaration","scope":4395,"src":"3986:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4356,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4359,"mutability":"mutable","name":"b","nameLocation":"4005:1:17","nodeType":"VariableDeclaration","scope":4395,"src":"3997:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4358,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:17"},"returnParameters":{"id":4363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4362,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4395,"src":"4031:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4361,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:17"},"scope":5702,"src":"3969:704:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4531,"nodeType":"Block","src":"5094:4128:17","statements":[{"id":4530,"nodeType":"UncheckedBlock","src":"5104:4112:17","statements":[{"assignments":[4408],"declarations":[{"constant":false,"id":4408,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:17","nodeType":"VariableDeclaration","scope":4530,"src":"5433:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4407,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4412,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4409,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"5449:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4410,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"5453:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:17"},{"assignments":[4414],"declarations":[{"constant":false,"id":4414,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:17","nodeType":"VariableDeclaration","scope":4530,"src":"5513:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4413,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4415,"nodeType":"VariableDeclarationStatement","src":"5513:13:17"},{"AST":{"nativeSrc":"5593:122:17","nodeType":"YulBlock","src":"5593:122:17","statements":[{"nativeSrc":"5611:30:17","nodeType":"YulVariableDeclaration","src":"5611:30:17","value":{"arguments":[{"name":"x","nativeSrc":"5628:1:17","nodeType":"YulIdentifier","src":"5628:1:17"},{"name":"y","nativeSrc":"5631:1:17","nodeType":"YulIdentifier","src":"5631:1:17"},{"arguments":[{"kind":"number","nativeSrc":"5638:1:17","nodeType":"YulLiteral","src":"5638:1:17","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5634:3:17","nodeType":"YulIdentifier","src":"5634:3:17"},"nativeSrc":"5634:6:17","nodeType":"YulFunctionCall","src":"5634:6:17"}],"functionName":{"name":"mulmod","nativeSrc":"5621:6:17","nodeType":"YulIdentifier","src":"5621:6:17"},"nativeSrc":"5621:20:17","nodeType":"YulFunctionCall","src":"5621:20:17"},"variables":[{"name":"mm","nativeSrc":"5615:2:17","nodeType":"YulTypedName","src":"5615:2:17","type":""}]},{"nativeSrc":"5658:43:17","nodeType":"YulAssignment","src":"5658:43:17","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"5675:2:17","nodeType":"YulIdentifier","src":"5675:2:17"},{"name":"prod0","nativeSrc":"5679:5:17","nodeType":"YulIdentifier","src":"5679:5:17"}],"functionName":{"name":"sub","nativeSrc":"5671:3:17","nodeType":"YulIdentifier","src":"5671:3:17"},"nativeSrc":"5671:14:17","nodeType":"YulFunctionCall","src":"5671:14:17"},{"arguments":[{"name":"mm","nativeSrc":"5690:2:17","nodeType":"YulIdentifier","src":"5690:2:17"},{"name":"prod0","nativeSrc":"5694:5:17","nodeType":"YulIdentifier","src":"5694:5:17"}],"functionName":{"name":"lt","nativeSrc":"5687:2:17","nodeType":"YulIdentifier","src":"5687:2:17"},"nativeSrc":"5687:13:17","nodeType":"YulFunctionCall","src":"5687:13:17"}],"functionName":{"name":"sub","nativeSrc":"5667:3:17","nodeType":"YulIdentifier","src":"5667:3:17"},"nativeSrc":"5667:34:17","nodeType":"YulFunctionCall","src":"5667:34:17"},"variableNames":[{"name":"prod1","nativeSrc":"5658:5:17","nodeType":"YulIdentifier","src":"5658:5:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4408,"isOffset":false,"isSlot":false,"src":"5679:5:17","valueSize":1},{"declaration":4408,"isOffset":false,"isSlot":false,"src":"5694:5:17","valueSize":1},{"declaration":4414,"isOffset":false,"isSlot":false,"src":"5658:5:17","valueSize":1},{"declaration":4398,"isOffset":false,"isSlot":false,"src":"5628:1:17","valueSize":1},{"declaration":4400,"isOffset":false,"isSlot":false,"src":"5631:1:17","valueSize":1}],"id":4416,"nodeType":"InlineAssembly","src":"5584:131:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4417,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"5796:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4425,"nodeType":"IfStatement","src":"5792:368:17","trueBody":{"id":4424,"nodeType":"Block","src":"5808:352:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4420,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4408,"src":"6126:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4421,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"6134:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4406,"id":4423,"nodeType":"Return","src":"6119:26:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4426,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"6270:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4427,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"6285:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4444,"nodeType":"IfStatement","src":"6266:143:17","trueBody":{"id":4443,"nodeType":"Block","src":"6292:117:17","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4433,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"6330:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4436,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"6348:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2606_$","typeString":"type(library Panic)"}},"id":4437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:17","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2573,"src":"6348:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4438,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"6372:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2606_$","typeString":"type(library Panic)"}},"id":4439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:17","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2569,"src":"6372:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4432,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"6322:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4429,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"6310:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2606_$","typeString":"type(library Panic)"}},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:17","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2605,"src":"6310:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4442,"nodeType":"ExpressionStatement","src":"6310:84:17"}]}},{"assignments":[4446],"declarations":[{"constant":false,"id":4446,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:17","nodeType":"VariableDeclaration","scope":4530,"src":"6664:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4445,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4447,"nodeType":"VariableDeclarationStatement","src":"6664:17:17"},{"AST":{"nativeSrc":"6704:291:17","nodeType":"YulBlock","src":"6704:291:17","statements":[{"nativeSrc":"6773:38:17","nodeType":"YulAssignment","src":"6773:38:17","value":{"arguments":[{"name":"x","nativeSrc":"6793:1:17","nodeType":"YulIdentifier","src":"6793:1:17"},{"name":"y","nativeSrc":"6796:1:17","nodeType":"YulIdentifier","src":"6796:1:17"},{"name":"denominator","nativeSrc":"6799:11:17","nodeType":"YulIdentifier","src":"6799:11:17"}],"functionName":{"name":"mulmod","nativeSrc":"6786:6:17","nodeType":"YulIdentifier","src":"6786:6:17"},"nativeSrc":"6786:25:17","nodeType":"YulFunctionCall","src":"6786:25:17"},"variableNames":[{"name":"remainder","nativeSrc":"6773:9:17","nodeType":"YulIdentifier","src":"6773:9:17"}]},{"nativeSrc":"6893:41:17","nodeType":"YulAssignment","src":"6893:41:17","value":{"arguments":[{"name":"prod1","nativeSrc":"6906:5:17","nodeType":"YulIdentifier","src":"6906:5:17"},{"arguments":[{"name":"remainder","nativeSrc":"6916:9:17","nodeType":"YulIdentifier","src":"6916:9:17"},{"name":"prod0","nativeSrc":"6927:5:17","nodeType":"YulIdentifier","src":"6927:5:17"}],"functionName":{"name":"gt","nativeSrc":"6913:2:17","nodeType":"YulIdentifier","src":"6913:2:17"},"nativeSrc":"6913:20:17","nodeType":"YulFunctionCall","src":"6913:20:17"}],"functionName":{"name":"sub","nativeSrc":"6902:3:17","nodeType":"YulIdentifier","src":"6902:3:17"},"nativeSrc":"6902:32:17","nodeType":"YulFunctionCall","src":"6902:32:17"},"variableNames":[{"name":"prod1","nativeSrc":"6893:5:17","nodeType":"YulIdentifier","src":"6893:5:17"}]},{"nativeSrc":"6951:30:17","nodeType":"YulAssignment","src":"6951:30:17","value":{"arguments":[{"name":"prod0","nativeSrc":"6964:5:17","nodeType":"YulIdentifier","src":"6964:5:17"},{"name":"remainder","nativeSrc":"6971:9:17","nodeType":"YulIdentifier","src":"6971:9:17"}],"functionName":{"name":"sub","nativeSrc":"6960:3:17","nodeType":"YulIdentifier","src":"6960:3:17"},"nativeSrc":"6960:21:17","nodeType":"YulFunctionCall","src":"6960:21:17"},"variableNames":[{"name":"prod0","nativeSrc":"6951:5:17","nodeType":"YulIdentifier","src":"6951:5:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4402,"isOffset":false,"isSlot":false,"src":"6799:11:17","valueSize":1},{"declaration":4408,"isOffset":false,"isSlot":false,"src":"6927:5:17","valueSize":1},{"declaration":4408,"isOffset":false,"isSlot":false,"src":"6951:5:17","valueSize":1},{"declaration":4408,"isOffset":false,"isSlot":false,"src":"6964:5:17","valueSize":1},{"declaration":4414,"isOffset":false,"isSlot":false,"src":"6893:5:17","valueSize":1},{"declaration":4414,"isOffset":false,"isSlot":false,"src":"6906:5:17","valueSize":1},{"declaration":4446,"isOffset":false,"isSlot":false,"src":"6773:9:17","valueSize":1},{"declaration":4446,"isOffset":false,"isSlot":false,"src":"6916:9:17","valueSize":1},{"declaration":4446,"isOffset":false,"isSlot":false,"src":"6971:9:17","valueSize":1},{"declaration":4398,"isOffset":false,"isSlot":false,"src":"6793:1:17","valueSize":1},{"declaration":4400,"isOffset":false,"isSlot":false,"src":"6796:1:17","valueSize":1}],"id":4448,"nodeType":"InlineAssembly","src":"6695:300:17"},{"assignments":[4450],"declarations":[{"constant":false,"id":4450,"mutability":"mutable","name":"twos","nameLocation":"7207:4:17","nodeType":"VariableDeclaration","scope":4530,"src":"7199:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4449,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4457,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4451,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"7214:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4453,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"7233:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4455,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:17"},{"AST":{"nativeSrc":"7268:366:17","nodeType":"YulBlock","src":"7268:366:17","statements":[{"nativeSrc":"7333:37:17","nodeType":"YulAssignment","src":"7333:37:17","value":{"arguments":[{"name":"denominator","nativeSrc":"7352:11:17","nodeType":"YulIdentifier","src":"7352:11:17"},{"name":"twos","nativeSrc":"7365:4:17","nodeType":"YulIdentifier","src":"7365:4:17"}],"functionName":{"name":"div","nativeSrc":"7348:3:17","nodeType":"YulIdentifier","src":"7348:3:17"},"nativeSrc":"7348:22:17","nodeType":"YulFunctionCall","src":"7348:22:17"},"variableNames":[{"name":"denominator","nativeSrc":"7333:11:17","nodeType":"YulIdentifier","src":"7333:11:17"}]},{"nativeSrc":"7437:25:17","nodeType":"YulAssignment","src":"7437:25:17","value":{"arguments":[{"name":"prod0","nativeSrc":"7450:5:17","nodeType":"YulIdentifier","src":"7450:5:17"},{"name":"twos","nativeSrc":"7457:4:17","nodeType":"YulIdentifier","src":"7457:4:17"}],"functionName":{"name":"div","nativeSrc":"7446:3:17","nodeType":"YulIdentifier","src":"7446:3:17"},"nativeSrc":"7446:16:17","nodeType":"YulFunctionCall","src":"7446:16:17"},"variableNames":[{"name":"prod0","nativeSrc":"7437:5:17","nodeType":"YulIdentifier","src":"7437:5:17"}]},{"nativeSrc":"7581:39:17","nodeType":"YulAssignment","src":"7581:39:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7601:1:17","nodeType":"YulLiteral","src":"7601:1:17","type":"","value":"0"},{"name":"twos","nativeSrc":"7604:4:17","nodeType":"YulIdentifier","src":"7604:4:17"}],"functionName":{"name":"sub","nativeSrc":"7597:3:17","nodeType":"YulIdentifier","src":"7597:3:17"},"nativeSrc":"7597:12:17","nodeType":"YulFunctionCall","src":"7597:12:17"},{"name":"twos","nativeSrc":"7611:4:17","nodeType":"YulIdentifier","src":"7611:4:17"}],"functionName":{"name":"div","nativeSrc":"7593:3:17","nodeType":"YulIdentifier","src":"7593:3:17"},"nativeSrc":"7593:23:17","nodeType":"YulFunctionCall","src":"7593:23:17"},{"kind":"number","nativeSrc":"7618:1:17","nodeType":"YulLiteral","src":"7618:1:17","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7589:3:17","nodeType":"YulIdentifier","src":"7589:3:17"},"nativeSrc":"7589:31:17","nodeType":"YulFunctionCall","src":"7589:31:17"},"variableNames":[{"name":"twos","nativeSrc":"7581:4:17","nodeType":"YulIdentifier","src":"7581:4:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4402,"isOffset":false,"isSlot":false,"src":"7333:11:17","valueSize":1},{"declaration":4402,"isOffset":false,"isSlot":false,"src":"7352:11:17","valueSize":1},{"declaration":4408,"isOffset":false,"isSlot":false,"src":"7437:5:17","valueSize":1},{"declaration":4408,"isOffset":false,"isSlot":false,"src":"7450:5:17","valueSize":1},{"declaration":4450,"isOffset":false,"isSlot":false,"src":"7365:4:17","valueSize":1},{"declaration":4450,"isOffset":false,"isSlot":false,"src":"7457:4:17","valueSize":1},{"declaration":4450,"isOffset":false,"isSlot":false,"src":"7581:4:17","valueSize":1},{"declaration":4450,"isOffset":false,"isSlot":false,"src":"7604:4:17","valueSize":1},{"declaration":4450,"isOffset":false,"isSlot":false,"src":"7611:4:17","valueSize":1}],"id":4458,"nodeType":"InlineAssembly","src":"7259:375:17"},{"expression":{"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4459,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4408,"src":"7700:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4460,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"7709:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4461,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"7717:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4464,"nodeType":"ExpressionStatement","src":"7700:21:17"},{"assignments":[4466],"declarations":[{"constant":false,"id":4466,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:17","nodeType":"VariableDeclaration","scope":4530,"src":"8056:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4465,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4473,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4468,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"8079:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4470,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:17"},{"expression":{"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4474,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"8312:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4476,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"8327:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4477,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"8341:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4481,"nodeType":"ExpressionStatement","src":"8312:36:17"},{"expression":{"id":4488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4482,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"8382:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4484,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"8397:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4485,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"8411:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4489,"nodeType":"ExpressionStatement","src":"8382:36:17"},{"expression":{"id":4496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4490,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"8454:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4492,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"8469:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4493,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"8483:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4497,"nodeType":"ExpressionStatement","src":"8454:36:17"},{"expression":{"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4498,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"8525:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4500,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"8540:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4501,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"8554:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4505,"nodeType":"ExpressionStatement","src":"8525:36:17"},{"expression":{"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4506,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"8598:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4508,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"8613:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4509,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"8627:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4513,"nodeType":"ExpressionStatement","src":"8598:36:17"},{"expression":{"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4514,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"8672:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4516,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"8687:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4517,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"8701:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4521,"nodeType":"ExpressionStatement","src":"8672:36:17"},{"expression":{"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4522,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4405,"src":"9154:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4523,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4408,"src":"9163:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4524,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"9171:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4527,"nodeType":"ExpressionStatement","src":"9154:24:17"},{"expression":{"id":4528,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4405,"src":"9199:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4406,"id":4529,"nodeType":"Return","src":"9192:13:17"}]}]},"documentation":{"id":4396,"nodeType":"StructuredDocumentation","src":"4679:312:17","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4532,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:17","nodeType":"FunctionDefinition","parameters":{"id":4403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4398,"mutability":"mutable","name":"x","nameLocation":"5020:1:17","nodeType":"VariableDeclaration","scope":4532,"src":"5012:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4397,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4400,"mutability":"mutable","name":"y","nameLocation":"5031:1:17","nodeType":"VariableDeclaration","scope":4532,"src":"5023:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4399,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4402,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:17","nodeType":"VariableDeclaration","scope":4532,"src":"5034:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4401,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:17"},"returnParameters":{"id":4406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4405,"mutability":"mutable","name":"result","nameLocation":"5086:6:17","nodeType":"VariableDeclaration","scope":4532,"src":"5078:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4404,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:17"},"scope":5702,"src":"4996:4226:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4568,"nodeType":"Block","src":"9461:128:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4548,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4535,"src":"9485:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4549,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4537,"src":"9488:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4550,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"9491:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4547,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4532,4569],"referencedDeclaration":4532,"src":"9478:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4555,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"9539:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4108","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4108","typeString":"enum Math.Rounding"}],"id":4554,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5701,"src":"9522:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4108_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4558,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4535,"src":"9559:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4559,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4537,"src":"9562:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4560,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"9565:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4557,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:17","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4552,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"9506:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7467_$","typeString":"type(library SafeCast)"}},"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7466,"src":"9506:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4546,"id":4567,"nodeType":"Return","src":"9471:111:17"}]},"documentation":{"id":4533,"nodeType":"StructuredDocumentation","src":"9228:118:17","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4569,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:17","nodeType":"FunctionDefinition","parameters":{"id":4543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4535,"mutability":"mutable","name":"x","nameLocation":"9375:1:17","nodeType":"VariableDeclaration","scope":4569,"src":"9367:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4534,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4537,"mutability":"mutable","name":"y","nameLocation":"9386:1:17","nodeType":"VariableDeclaration","scope":4569,"src":"9378:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4536,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4539,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:17","nodeType":"VariableDeclaration","scope":4569,"src":"9389:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4538,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4542,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:17","nodeType":"VariableDeclaration","scope":4569,"src":"9410:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4108","typeString":"enum Math.Rounding"},"typeName":{"id":4541,"nodeType":"UserDefinedTypeName","pathNode":{"id":4540,"name":"Rounding","nameLocations":["9410:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":4108,"src":"9410:8:17"},"referencedDeclaration":4108,"src":"9410:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4108","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:17"},"returnParameters":{"id":4546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4569,"src":"9452:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4544,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:17"},"scope":5702,"src":"9351:238:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4665,"nodeType":"Block","src":"10223:1849:17","statements":[{"id":4664,"nodeType":"UncheckedBlock","src":"10233:1833:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4579,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"10261:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4584,"nodeType":"IfStatement","src":"10257:20:17","trueBody":{"expression":{"hexValue":"30","id":4582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4578,"id":4583,"nodeType":"Return","src":"10269:8:17"}},{"assignments":[4586],"declarations":[{"constant":false,"id":4586,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:17","nodeType":"VariableDeclaration","scope":4664,"src":"10748:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4585,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4590,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4587,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"10768:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4588,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"10772:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:17"},{"assignments":[4592],"declarations":[{"constant":false,"id":4592,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:17","nodeType":"VariableDeclaration","scope":4664,"src":"10787:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4591,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4594,"initialValue":{"id":4593,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"10801:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:17"},{"assignments":[4596],"declarations":[{"constant":false,"id":4596,"mutability":"mutable","name":"x","nameLocation":"10945:1:17","nodeType":"VariableDeclaration","scope":4664,"src":"10938:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4595,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4598,"initialValue":{"hexValue":"30","id":4597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:17"},{"assignments":[4600],"declarations":[{"constant":false,"id":4600,"mutability":"mutable","name":"y","nameLocation":"10971:1:17","nodeType":"VariableDeclaration","scope":4664,"src":"10964:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4599,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4602,"initialValue":{"hexValue":"31","id":4601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:17"},{"body":{"id":4639,"nodeType":"Block","src":"11014:882:17","statements":[{"assignments":[4607],"declarations":[{"constant":false,"id":4607,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:17","nodeType":"VariableDeclaration","scope":4639,"src":"11032:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4606,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4611,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4608,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4592,"src":"11051:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4609,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4586,"src":"11057:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:17"},{"expression":{"id":4622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4612,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4592,"src":"11086:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4613,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4586,"src":"11091:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4614,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4615,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4586,"src":"11191:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4616,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4592,"src":"11436:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4617,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4586,"src":"11442:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4618,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"11454:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4621,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:17","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4623,"nodeType":"ExpressionStatement","src":"11085:395:17"},{"expression":{"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4624,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4596,"src":"11500:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4625,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"11503:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4626,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4627,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"11585:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4628,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4596,"src":"11839:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4629,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"11843:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4632,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"11854:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4630,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:17","typeDescriptions":{}}},"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4636,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:17","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4638,"nodeType":"ExpressionStatement","src":"11499:382:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4603,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4586,"src":"10998:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4640,"nodeType":"WhileStatement","src":"10991:905:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4641,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4592,"src":"11914:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4646,"nodeType":"IfStatement","src":"11910:22:17","trueBody":{"expression":{"hexValue":"30","id":4644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4578,"id":4645,"nodeType":"Return","src":"11924:8:17"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4648,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4596,"src":"11983:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4651,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"11990:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:17","subExpression":{"id":4654,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4596,"src":"12003:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4652,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:17","typeDescriptions":{}}},"id":4656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4660,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4596,"src":"12015:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4658,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:17","typeDescriptions":{}}},"id":4661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4647,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"11975:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4578,"id":4663,"nodeType":"Return","src":"11968:50:17"}]}]},"documentation":{"id":4570,"nodeType":"StructuredDocumentation","src":"9595:553:17","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4666,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:17","nodeType":"FunctionDefinition","parameters":{"id":4575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4572,"mutability":"mutable","name":"a","nameLocation":"10177:1:17","nodeType":"VariableDeclaration","scope":4666,"src":"10169:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4571,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4574,"mutability":"mutable","name":"n","nameLocation":"10188:1:17","nodeType":"VariableDeclaration","scope":4666,"src":"10180:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4573,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:17"},"returnParameters":{"id":4578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4666,"src":"10214:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4576,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:17"},"scope":5702,"src":"10153:1919:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4686,"nodeType":"Block","src":"12672:82:17","statements":[{"id":4685,"nodeType":"UncheckedBlock","src":"12682:66:17","statements":[{"expression":{"arguments":[{"id":4678,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4669,"src":"12725:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4679,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4671,"src":"12728:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4682,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4671,"src":"12735:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4676,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"12713:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5702_$","typeString":"type(library Math)"}},"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:17","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4723,"src":"12713:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4675,"id":4684,"nodeType":"Return","src":"12706:31:17"}]}]},"documentation":{"id":4667,"nodeType":"StructuredDocumentation","src":"12078:514:17","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4687,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:17","nodeType":"FunctionDefinition","parameters":{"id":4672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4669,"mutability":"mutable","name":"a","nameLocation":"12626:1:17","nodeType":"VariableDeclaration","scope":4687,"src":"12618:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4668,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4671,"mutability":"mutable","name":"p","nameLocation":"12637:1:17","nodeType":"VariableDeclaration","scope":4687,"src":"12629:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4670,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:17"},"returnParameters":{"id":4675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4687,"src":"12663:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4673,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:17"},"scope":5702,"src":"12597:157:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4722,"nodeType":"Block","src":"13524:174:17","statements":[{"assignments":[4700,4702],"declarations":[{"constant":false,"id":4700,"mutability":"mutable","name":"success","nameLocation":"13540:7:17","nodeType":"VariableDeclaration","scope":4722,"src":"13535:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4699,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4702,"mutability":"mutable","name":"result","nameLocation":"13557:6:17","nodeType":"VariableDeclaration","scope":4722,"src":"13549:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4701,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4708,"initialValue":{"arguments":[{"id":4704,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4690,"src":"13577:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4705,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"13580:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4706,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4694,"src":"13583:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4703,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4747,4829],"referencedDeclaration":4747,"src":"13567:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:17"},{"condition":{"id":4710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:17","subExpression":{"id":4709,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"13600:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4719,"nodeType":"IfStatement","src":"13595:74:17","trueBody":{"id":4718,"nodeType":"Block","src":"13609:60:17","statements":[{"expression":{"arguments":[{"expression":{"id":4714,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"13635:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2606_$","typeString":"type(library Panic)"}},"id":4715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:17","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2573,"src":"13635:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4711,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"13623:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2606_$","typeString":"type(library Panic)"}},"id":4713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:17","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2605,"src":"13623:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4717,"nodeType":"ExpressionStatement","src":"13623:35:17"}]}},{"expression":{"id":4720,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"13685:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4698,"id":4721,"nodeType":"Return","src":"13678:13:17"}]},"documentation":{"id":4688,"nodeType":"StructuredDocumentation","src":"12760:678:17","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4723,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:17","nodeType":"FunctionDefinition","parameters":{"id":4695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4690,"mutability":"mutable","name":"b","nameLocation":"13467:1:17","nodeType":"VariableDeclaration","scope":4723,"src":"13459:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4689,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4692,"mutability":"mutable","name":"e","nameLocation":"13478:1:17","nodeType":"VariableDeclaration","scope":4723,"src":"13470:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4691,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4694,"mutability":"mutable","name":"m","nameLocation":"13489:1:17","nodeType":"VariableDeclaration","scope":4723,"src":"13481:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4693,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:17"},"returnParameters":{"id":4698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4697,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4723,"src":"13515:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4696,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:17"},"scope":5702,"src":"13443:255:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4746,"nodeType":"Block","src":"14552:1493:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4737,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4730,"src":"14566:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4744,"nodeType":"IfStatement","src":"14562:29:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4742,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4736,"id":4743,"nodeType":"Return","src":"14574:17:17"}},{"AST":{"nativeSrc":"14626:1413:17","nodeType":"YulBlock","src":"14626:1413:17","statements":[{"nativeSrc":"14640:22:17","nodeType":"YulVariableDeclaration","src":"14640:22:17","value":{"arguments":[{"kind":"number","nativeSrc":"14657:4:17","nodeType":"YulLiteral","src":"14657:4:17","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"14651:5:17","nodeType":"YulIdentifier","src":"14651:5:17"},"nativeSrc":"14651:11:17","nodeType":"YulFunctionCall","src":"14651:11:17"},"variables":[{"name":"ptr","nativeSrc":"14644:3:17","nodeType":"YulTypedName","src":"14644:3:17","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"15570:3:17","nodeType":"YulIdentifier","src":"15570:3:17"},{"kind":"number","nativeSrc":"15575:4:17","nodeType":"YulLiteral","src":"15575:4:17","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15563:6:17","nodeType":"YulIdentifier","src":"15563:6:17"},"nativeSrc":"15563:17:17","nodeType":"YulFunctionCall","src":"15563:17:17"},"nativeSrc":"15563:17:17","nodeType":"YulExpressionStatement","src":"15563:17:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15604:3:17","nodeType":"YulIdentifier","src":"15604:3:17"},{"kind":"number","nativeSrc":"15609:4:17","nodeType":"YulLiteral","src":"15609:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15600:3:17","nodeType":"YulIdentifier","src":"15600:3:17"},"nativeSrc":"15600:14:17","nodeType":"YulFunctionCall","src":"15600:14:17"},{"kind":"number","nativeSrc":"15616:4:17","nodeType":"YulLiteral","src":"15616:4:17","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15593:6:17","nodeType":"YulIdentifier","src":"15593:6:17"},"nativeSrc":"15593:28:17","nodeType":"YulFunctionCall","src":"15593:28:17"},"nativeSrc":"15593:28:17","nodeType":"YulExpressionStatement","src":"15593:28:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15645:3:17","nodeType":"YulIdentifier","src":"15645:3:17"},{"kind":"number","nativeSrc":"15650:4:17","nodeType":"YulLiteral","src":"15650:4:17","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"15641:3:17","nodeType":"YulIdentifier","src":"15641:3:17"},"nativeSrc":"15641:14:17","nodeType":"YulFunctionCall","src":"15641:14:17"},{"kind":"number","nativeSrc":"15657:4:17","nodeType":"YulLiteral","src":"15657:4:17","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15634:6:17","nodeType":"YulIdentifier","src":"15634:6:17"},"nativeSrc":"15634:28:17","nodeType":"YulFunctionCall","src":"15634:28:17"},"nativeSrc":"15634:28:17","nodeType":"YulExpressionStatement","src":"15634:28:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15686:3:17","nodeType":"YulIdentifier","src":"15686:3:17"},{"kind":"number","nativeSrc":"15691:4:17","nodeType":"YulLiteral","src":"15691:4:17","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"15682:3:17","nodeType":"YulIdentifier","src":"15682:3:17"},"nativeSrc":"15682:14:17","nodeType":"YulFunctionCall","src":"15682:14:17"},{"name":"b","nativeSrc":"15698:1:17","nodeType":"YulIdentifier","src":"15698:1:17"}],"functionName":{"name":"mstore","nativeSrc":"15675:6:17","nodeType":"YulIdentifier","src":"15675:6:17"},"nativeSrc":"15675:25:17","nodeType":"YulFunctionCall","src":"15675:25:17"},"nativeSrc":"15675:25:17","nodeType":"YulExpressionStatement","src":"15675:25:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15724:3:17","nodeType":"YulIdentifier","src":"15724:3:17"},{"kind":"number","nativeSrc":"15729:4:17","nodeType":"YulLiteral","src":"15729:4:17","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"15720:3:17","nodeType":"YulIdentifier","src":"15720:3:17"},"nativeSrc":"15720:14:17","nodeType":"YulFunctionCall","src":"15720:14:17"},{"name":"e","nativeSrc":"15736:1:17","nodeType":"YulIdentifier","src":"15736:1:17"}],"functionName":{"name":"mstore","nativeSrc":"15713:6:17","nodeType":"YulIdentifier","src":"15713:6:17"},"nativeSrc":"15713:25:17","nodeType":"YulFunctionCall","src":"15713:25:17"},"nativeSrc":"15713:25:17","nodeType":"YulExpressionStatement","src":"15713:25:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15762:3:17","nodeType":"YulIdentifier","src":"15762:3:17"},{"kind":"number","nativeSrc":"15767:4:17","nodeType":"YulLiteral","src":"15767:4:17","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"15758:3:17","nodeType":"YulIdentifier","src":"15758:3:17"},"nativeSrc":"15758:14:17","nodeType":"YulFunctionCall","src":"15758:14:17"},{"name":"m","nativeSrc":"15774:1:17","nodeType":"YulIdentifier","src":"15774:1:17"}],"functionName":{"name":"mstore","nativeSrc":"15751:6:17","nodeType":"YulIdentifier","src":"15751:6:17"},"nativeSrc":"15751:25:17","nodeType":"YulFunctionCall","src":"15751:25:17"},"nativeSrc":"15751:25:17","nodeType":"YulExpressionStatement","src":"15751:25:17"},{"nativeSrc":"15938:57:17","nodeType":"YulAssignment","src":"15938:57:17","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"15960:3:17","nodeType":"YulIdentifier","src":"15960:3:17"},"nativeSrc":"15960:5:17","nodeType":"YulFunctionCall","src":"15960:5:17"},{"kind":"number","nativeSrc":"15967:4:17","nodeType":"YulLiteral","src":"15967:4:17","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"15973:3:17","nodeType":"YulIdentifier","src":"15973:3:17"},{"kind":"number","nativeSrc":"15978:4:17","nodeType":"YulLiteral","src":"15978:4:17","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"15984:4:17","nodeType":"YulLiteral","src":"15984:4:17","type":"","value":"0x00"},{"kind":"number","nativeSrc":"15990:4:17","nodeType":"YulLiteral","src":"15990:4:17","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"15949:10:17","nodeType":"YulIdentifier","src":"15949:10:17"},"nativeSrc":"15949:46:17","nodeType":"YulFunctionCall","src":"15949:46:17"},"variableNames":[{"name":"success","nativeSrc":"15938:7:17","nodeType":"YulIdentifier","src":"15938:7:17"}]},{"nativeSrc":"16008:21:17","nodeType":"YulAssignment","src":"16008:21:17","value":{"arguments":[{"kind":"number","nativeSrc":"16024:4:17","nodeType":"YulLiteral","src":"16024:4:17","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"16018:5:17","nodeType":"YulIdentifier","src":"16018:5:17"},"nativeSrc":"16018:11:17","nodeType":"YulFunctionCall","src":"16018:11:17"},"variableNames":[{"name":"result","nativeSrc":"16008:6:17","nodeType":"YulIdentifier","src":"16008:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4726,"isOffset":false,"isSlot":false,"src":"15698:1:17","valueSize":1},{"declaration":4728,"isOffset":false,"isSlot":false,"src":"15736:1:17","valueSize":1},{"declaration":4730,"isOffset":false,"isSlot":false,"src":"15774:1:17","valueSize":1},{"declaration":4735,"isOffset":false,"isSlot":false,"src":"16008:6:17","valueSize":1},{"declaration":4733,"isOffset":false,"isSlot":false,"src":"15938:7:17","valueSize":1}],"flags":["memory-safe"],"id":4745,"nodeType":"InlineAssembly","src":"14601:1438:17"}]},"documentation":{"id":4724,"nodeType":"StructuredDocumentation","src":"13704:738:17","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4747,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:17","nodeType":"FunctionDefinition","parameters":{"id":4731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4726,"mutability":"mutable","name":"b","nameLocation":"14474:1:17","nodeType":"VariableDeclaration","scope":4747,"src":"14466:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4725,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4728,"mutability":"mutable","name":"e","nameLocation":"14485:1:17","nodeType":"VariableDeclaration","scope":4747,"src":"14477:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4727,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4730,"mutability":"mutable","name":"m","nameLocation":"14496:1:17","nodeType":"VariableDeclaration","scope":4747,"src":"14488:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4729,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:17"},"returnParameters":{"id":4736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4733,"mutability":"mutable","name":"success","nameLocation":"14527:7:17","nodeType":"VariableDeclaration","scope":4747,"src":"14522:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4732,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4735,"mutability":"mutable","name":"result","nameLocation":"14544:6:17","nodeType":"VariableDeclaration","scope":4747,"src":"14536:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4734,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:17"},"scope":5702,"src":"14447:1598:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4782,"nodeType":"Block","src":"16242:179:17","statements":[{"assignments":[4760,4762],"declarations":[{"constant":false,"id":4760,"mutability":"mutable","name":"success","nameLocation":"16258:7:17","nodeType":"VariableDeclaration","scope":4782,"src":"16253:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4759,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4762,"mutability":"mutable","name":"result","nameLocation":"16280:6:17","nodeType":"VariableDeclaration","scope":4782,"src":"16267:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4761,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4768,"initialValue":{"arguments":[{"id":4764,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"16300:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4765,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4752,"src":"16303:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4766,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4754,"src":"16306:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4763,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4747,4829],"referencedDeclaration":4829,"src":"16290:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:17"},{"condition":{"id":4770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:17","subExpression":{"id":4769,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"16323:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4779,"nodeType":"IfStatement","src":"16318:74:17","trueBody":{"id":4778,"nodeType":"Block","src":"16332:60:17","statements":[{"expression":{"arguments":[{"expression":{"id":4774,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"16358:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2606_$","typeString":"type(library Panic)"}},"id":4775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:17","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2573,"src":"16358:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4771,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"16346:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2606_$","typeString":"type(library Panic)"}},"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:17","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2605,"src":"16346:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4777,"nodeType":"ExpressionStatement","src":"16346:35:17"}]}},{"expression":{"id":4780,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"16408:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4758,"id":4781,"nodeType":"Return","src":"16401:13:17"}]},"documentation":{"id":4748,"nodeType":"StructuredDocumentation","src":"16051:85:17","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4783,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:17","nodeType":"FunctionDefinition","parameters":{"id":4755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4750,"mutability":"mutable","name":"b","nameLocation":"16170:1:17","nodeType":"VariableDeclaration","scope":4783,"src":"16157:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4749,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4752,"mutability":"mutable","name":"e","nameLocation":"16186:1:17","nodeType":"VariableDeclaration","scope":4783,"src":"16173:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4751,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4754,"mutability":"mutable","name":"m","nameLocation":"16202:1:17","nodeType":"VariableDeclaration","scope":4783,"src":"16189:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4753,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:17"},"returnParameters":{"id":4758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4783,"src":"16228:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4756,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:17"},"scope":5702,"src":"16141:280:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4828,"nodeType":"Block","src":"16675:771:17","statements":[{"condition":{"arguments":[{"id":4798,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4790,"src":"16700:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4797,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"16689:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4807,"nodeType":"IfStatement","src":"16685:47:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4801,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4805,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4796,"id":4806,"nodeType":"Return","src":"16704:28:17"}},{"assignments":[4809],"declarations":[{"constant":false,"id":4809,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:17","nodeType":"VariableDeclaration","scope":4828,"src":"16743:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4808,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4812,"initialValue":{"expression":{"id":4810,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4790,"src":"16758:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:17","memberName":"length","nodeType":"MemberAccess","src":"16758:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:17"},{"expression":{"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4813,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4795,"src":"16848:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4816,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4786,"src":"16874:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:17","memberName":"length","nodeType":"MemberAccess","src":"16874:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4818,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"16884:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:17","memberName":"length","nodeType":"MemberAccess","src":"16884:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4820,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"16894:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4821,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4786,"src":"16900:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4822,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"16903:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4823,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4790,"src":"16906:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4814,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4826,"nodeType":"ExpressionStatement","src":"16848:60:17"},{"AST":{"nativeSrc":"16944:496:17","nodeType":"YulBlock","src":"16944:496:17","statements":[{"nativeSrc":"16958:32:17","nodeType":"YulVariableDeclaration","src":"16958:32:17","value":{"arguments":[{"name":"result","nativeSrc":"16977:6:17","nodeType":"YulIdentifier","src":"16977:6:17"},{"kind":"number","nativeSrc":"16985:4:17","nodeType":"YulLiteral","src":"16985:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16973:3:17","nodeType":"YulIdentifier","src":"16973:3:17"},"nativeSrc":"16973:17:17","nodeType":"YulFunctionCall","src":"16973:17:17"},"variables":[{"name":"dataPtr","nativeSrc":"16962:7:17","nodeType":"YulTypedName","src":"16962:7:17","type":""}]},{"nativeSrc":"17080:73:17","nodeType":"YulAssignment","src":"17080:73:17","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"17102:3:17","nodeType":"YulIdentifier","src":"17102:3:17"},"nativeSrc":"17102:5:17","nodeType":"YulFunctionCall","src":"17102:5:17"},{"kind":"number","nativeSrc":"17109:4:17","nodeType":"YulLiteral","src":"17109:4:17","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"17115:7:17","nodeType":"YulIdentifier","src":"17115:7:17"},{"arguments":[{"name":"result","nativeSrc":"17130:6:17","nodeType":"YulIdentifier","src":"17130:6:17"}],"functionName":{"name":"mload","nativeSrc":"17124:5:17","nodeType":"YulIdentifier","src":"17124:5:17"},"nativeSrc":"17124:13:17","nodeType":"YulFunctionCall","src":"17124:13:17"},{"name":"dataPtr","nativeSrc":"17139:7:17","nodeType":"YulIdentifier","src":"17139:7:17"},{"name":"mLen","nativeSrc":"17148:4:17","nodeType":"YulIdentifier","src":"17148:4:17"}],"functionName":{"name":"staticcall","nativeSrc":"17091:10:17","nodeType":"YulIdentifier","src":"17091:10:17"},"nativeSrc":"17091:62:17","nodeType":"YulFunctionCall","src":"17091:62:17"},"variableNames":[{"name":"success","nativeSrc":"17080:7:17","nodeType":"YulIdentifier","src":"17080:7:17"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"17309:6:17","nodeType":"YulIdentifier","src":"17309:6:17"},{"name":"mLen","nativeSrc":"17317:4:17","nodeType":"YulIdentifier","src":"17317:4:17"}],"functionName":{"name":"mstore","nativeSrc":"17302:6:17","nodeType":"YulIdentifier","src":"17302:6:17"},"nativeSrc":"17302:20:17","nodeType":"YulFunctionCall","src":"17302:20:17"},"nativeSrc":"17302:20:17","nodeType":"YulExpressionStatement","src":"17302:20:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17405:4:17","nodeType":"YulLiteral","src":"17405:4:17","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"17415:7:17","nodeType":"YulIdentifier","src":"17415:7:17"},{"name":"mLen","nativeSrc":"17424:4:17","nodeType":"YulIdentifier","src":"17424:4:17"}],"functionName":{"name":"add","nativeSrc":"17411:3:17","nodeType":"YulIdentifier","src":"17411:3:17"},"nativeSrc":"17411:18:17","nodeType":"YulFunctionCall","src":"17411:18:17"}],"functionName":{"name":"mstore","nativeSrc":"17398:6:17","nodeType":"YulIdentifier","src":"17398:6:17"},"nativeSrc":"17398:32:17","nodeType":"YulFunctionCall","src":"17398:32:17"},"nativeSrc":"17398:32:17","nodeType":"YulExpressionStatement","src":"17398:32:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":4809,"isOffset":false,"isSlot":false,"src":"17148:4:17","valueSize":1},{"declaration":4809,"isOffset":false,"isSlot":false,"src":"17317:4:17","valueSize":1},{"declaration":4809,"isOffset":false,"isSlot":false,"src":"17424:4:17","valueSize":1},{"declaration":4795,"isOffset":false,"isSlot":false,"src":"16977:6:17","valueSize":1},{"declaration":4795,"isOffset":false,"isSlot":false,"src":"17130:6:17","valueSize":1},{"declaration":4795,"isOffset":false,"isSlot":false,"src":"17309:6:17","valueSize":1},{"declaration":4793,"isOffset":false,"isSlot":false,"src":"17080:7:17","valueSize":1}],"flags":["memory-safe"],"id":4827,"nodeType":"InlineAssembly","src":"16919:521:17"}]},"documentation":{"id":4784,"nodeType":"StructuredDocumentation","src":"16427:88:17","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4829,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:17","nodeType":"FunctionDefinition","parameters":{"id":4791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4786,"mutability":"mutable","name":"b","nameLocation":"16561:1:17","nodeType":"VariableDeclaration","scope":4829,"src":"16548:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4785,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4788,"mutability":"mutable","name":"e","nameLocation":"16585:1:17","nodeType":"VariableDeclaration","scope":4829,"src":"16572:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4787,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4790,"mutability":"mutable","name":"m","nameLocation":"16609:1:17","nodeType":"VariableDeclaration","scope":4829,"src":"16596:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4789,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:17"},"returnParameters":{"id":4796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4793,"mutability":"mutable","name":"success","nameLocation":"16645:7:17","nodeType":"VariableDeclaration","scope":4829,"src":"16640:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4792,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4795,"mutability":"mutable","name":"result","nameLocation":"16667:6:17","nodeType":"VariableDeclaration","scope":4829,"src":"16654:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4794,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:17"},"scope":5702,"src":"16520:926:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4861,"nodeType":"Block","src":"17601:176:17","statements":[{"body":{"id":4857,"nodeType":"Block","src":"17658:92:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4848,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4832,"src":"17676:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4850,"indexExpression":{"id":4849,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"17686:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4856,"nodeType":"IfStatement","src":"17672:68:17","trueBody":{"id":4855,"nodeType":"Block","src":"17695:45:17","statements":[{"expression":{"hexValue":"66616c7365","id":4853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4836,"id":4854,"nodeType":"Return","src":"17713:12:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4841,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"17631:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4842,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4832,"src":"17635:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:17","memberName":"length","nodeType":"MemberAccess","src":"17635:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4858,"initializationExpression":{"assignments":[4838],"declarations":[{"constant":false,"id":4838,"mutability":"mutable","name":"i","nameLocation":"17624:1:17","nodeType":"VariableDeclaration","scope":4858,"src":"17616:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4837,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4840,"initialValue":{"hexValue":"30","id":4839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:17","subExpression":{"id":4845,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"17655:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4847,"nodeType":"ExpressionStatement","src":"17653:3:17"},"nodeType":"ForStatement","src":"17611:139:17"},{"expression":{"hexValue":"74727565","id":4859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4836,"id":4860,"nodeType":"Return","src":"17759:11:17"}]},"documentation":{"id":4830,"nodeType":"StructuredDocumentation","src":"17452:72:17","text":" @dev Returns whether the provided byte array is zero."},"id":4862,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:17","nodeType":"FunctionDefinition","parameters":{"id":4833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4832,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:17","nodeType":"VariableDeclaration","scope":4862,"src":"17549:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4831,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:17"},"returnParameters":{"id":4836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4862,"src":"17595:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4834,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:17"},"scope":5702,"src":"17529:248:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5080,"nodeType":"Block","src":"18137:5124:17","statements":[{"id":5079,"nodeType":"UncheckedBlock","src":"18147:5108:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4870,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4865,"src":"18241:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4876,"nodeType":"IfStatement","src":"18237:53:17","trueBody":{"id":4875,"nodeType":"Block","src":"18249:41:17","statements":[{"expression":{"id":4873,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4865,"src":"18274:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4869,"id":4874,"nodeType":"Return","src":"18267:8:17"}]}},{"assignments":[4878],"declarations":[{"constant":false,"id":4878,"mutability":"mutable","name":"aa","nameLocation":"19225:2:17","nodeType":"VariableDeclaration","scope":5079,"src":"19217:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4877,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4880,"initialValue":{"id":4879,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4865,"src":"19230:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:17"},{"assignments":[4882],"declarations":[{"constant":false,"id":4882,"mutability":"mutable","name":"xn","nameLocation":"19253:2:17","nodeType":"VariableDeclaration","scope":5079,"src":"19245:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4881,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4884,"initialValue":{"hexValue":"31","id":4883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4885,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"19278:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4889,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4900,"nodeType":"IfStatement","src":"19274:92:17","trueBody":{"id":4899,"nodeType":"Block","src":"19296:70:17","statements":[{"expression":{"id":4893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4891,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"19314:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4894,"nodeType":"ExpressionStatement","src":"19314:10:17"},{"expression":{"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4895,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"19342:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4898,"nodeType":"ExpressionStatement","src":"19342:9:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4901,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"19383:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4905,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4916,"nodeType":"IfStatement","src":"19379:90:17","trueBody":{"id":4915,"nodeType":"Block","src":"19400:69:17","statements":[{"expression":{"id":4909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4907,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"19418:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4910,"nodeType":"ExpressionStatement","src":"19418:9:17"},{"expression":{"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4911,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"19445:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4914,"nodeType":"ExpressionStatement","src":"19445:9:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4917,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"19486:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4921,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4932,"nodeType":"IfStatement","src":"19482:90:17","trueBody":{"id":4931,"nodeType":"Block","src":"19503:69:17","statements":[{"expression":{"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4923,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"19521:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4926,"nodeType":"ExpressionStatement","src":"19521:9:17"},{"expression":{"id":4929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4927,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"19548:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4930,"nodeType":"ExpressionStatement","src":"19548:9:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4933,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"19589:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:17","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4937,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:17","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4948,"nodeType":"IfStatement","src":"19585:89:17","trueBody":{"id":4947,"nodeType":"Block","src":"19606:68:17","statements":[{"expression":{"id":4941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4939,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"19624:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4942,"nodeType":"ExpressionStatement","src":"19624:9:17"},{"expression":{"id":4945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4943,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"19651:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4946,"nodeType":"ExpressionStatement","src":"19651:8:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4949,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"19691:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4953,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4964,"nodeType":"IfStatement","src":"19687:87:17","trueBody":{"id":4963,"nodeType":"Block","src":"19707:67:17","statements":[{"expression":{"id":4957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4955,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"19725:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4958,"nodeType":"ExpressionStatement","src":"19725:8:17"},{"expression":{"id":4961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4959,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"19751:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4962,"nodeType":"ExpressionStatement","src":"19751:8:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4965,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"19791:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4969,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4980,"nodeType":"IfStatement","src":"19787:87:17","trueBody":{"id":4979,"nodeType":"Block","src":"19807:67:17","statements":[{"expression":{"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4971,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"19825:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4974,"nodeType":"ExpressionStatement","src":"19825:8:17"},{"expression":{"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4975,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"19851:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4978,"nodeType":"ExpressionStatement","src":"19851:8:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4981,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"19891:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4985,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4992,"nodeType":"IfStatement","src":"19887:61:17","trueBody":{"id":4991,"nodeType":"Block","src":"19907:41:17","statements":[{"expression":{"id":4989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4987,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"19925:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4990,"nodeType":"ExpressionStatement","src":"19925:8:17"}]}},{"expression":{"id":5000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4993,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"20368:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4995,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"20378:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4997,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5001,"nodeType":"ExpressionStatement","src":"20368:18:17"},{"expression":{"id":5011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5002,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"22273:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5003,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"22279:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5004,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4865,"src":"22284:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5005,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"22288:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5008,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5012,"nodeType":"ExpressionStatement","src":"22273:23:17"},{"expression":{"id":5022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5013,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"22382:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5014,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"22388:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5015,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4865,"src":"22393:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5016,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"22397:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5019,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5023,"nodeType":"ExpressionStatement","src":"22382:23:17"},{"expression":{"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5024,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"22493:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5025,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"22499:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5026,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4865,"src":"22504:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5027,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"22508:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5030,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5034,"nodeType":"ExpressionStatement","src":"22493:23:17"},{"expression":{"id":5044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5035,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"22602:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5036,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"22608:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5037,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4865,"src":"22613:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5038,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"22617:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5041,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5045,"nodeType":"ExpressionStatement","src":"22602:23:17"},{"expression":{"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5046,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"22712:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5047,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"22718:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5048,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4865,"src":"22723:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5049,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"22727:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5052,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5056,"nodeType":"ExpressionStatement","src":"22712:23:17"},{"expression":{"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5057,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"22822:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5058,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"22828:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5059,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4865,"src":"22833:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5060,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"22837:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5063,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5067,"nodeType":"ExpressionStatement","src":"22822:23:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5068,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"23211:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5071,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"23232:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5072,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4865,"src":"23237:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5073,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"23241:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5069,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"23216:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7467_$","typeString":"type(library SafeCast)"}},"id":5070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7466,"src":"23216:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4869,"id":5078,"nodeType":"Return","src":"23204:40:17"}]}]},"documentation":{"id":4863,"nodeType":"StructuredDocumentation","src":"17783:292:17","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":5081,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:17","nodeType":"FunctionDefinition","parameters":{"id":4866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4865,"mutability":"mutable","name":"a","nameLocation":"18102:1:17","nodeType":"VariableDeclaration","scope":5081,"src":"18094:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4864,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:17"},"returnParameters":{"id":4869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5081,"src":"18128:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4867,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:17"},"scope":5702,"src":"18080:5181:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5114,"nodeType":"Block","src":"23434:171:17","statements":[{"id":5113,"nodeType":"UncheckedBlock","src":"23444:155:17","statements":[{"assignments":[5093],"declarations":[{"constant":false,"id":5093,"mutability":"mutable","name":"result","nameLocation":"23476:6:17","nodeType":"VariableDeclaration","scope":5113,"src":"23468:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5092,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5097,"initialValue":{"arguments":[{"id":5095,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"23490:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5094,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5081,5115],"referencedDeclaration":5081,"src":"23485:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5098,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5093,"src":"23513:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5102,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5087,"src":"23555:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4108","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4108","typeString":"enum Math.Rounding"}],"id":5101,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5701,"src":"23538:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4108_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5104,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5093,"src":"23568:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5105,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5093,"src":"23577:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5107,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"23586:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5099,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"23522:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7467_$","typeString":"type(library SafeCast)"}},"id":5100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7466,"src":"23522:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5091,"id":5112,"nodeType":"Return","src":"23506:82:17"}]}]},"documentation":{"id":5082,"nodeType":"StructuredDocumentation","src":"23267:86:17","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":5115,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:17","nodeType":"FunctionDefinition","parameters":{"id":5088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5084,"mutability":"mutable","name":"a","nameLocation":"23380:1:17","nodeType":"VariableDeclaration","scope":5115,"src":"23372:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5083,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5087,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:17","nodeType":"VariableDeclaration","scope":5115,"src":"23383:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4108","typeString":"enum Math.Rounding"},"typeName":{"id":5086,"nodeType":"UserDefinedTypeName","pathNode":{"id":5085,"name":"Rounding","nameLocations":["23383:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":4108,"src":"23383:8:17"},"referencedDeclaration":4108,"src":"23383:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4108","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:17"},"returnParameters":{"id":5091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5090,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5115,"src":"23425:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5089,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:17"},"scope":5702,"src":"23358:247:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5310,"nodeType":"Block","src":"23796:981:17","statements":[{"assignments":[5124],"declarations":[{"constant":false,"id":5124,"mutability":"mutable","name":"result","nameLocation":"23814:6:17","nodeType":"VariableDeclaration","scope":5310,"src":"23806:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5123,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5126,"initialValue":{"hexValue":"30","id":5125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:17"},{"assignments":[5128],"declarations":[{"constant":false,"id":5128,"mutability":"mutable","name":"exp","nameLocation":"23842:3:17","nodeType":"VariableDeclaration","scope":5310,"src":"23834:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5127,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5129,"nodeType":"VariableDeclarationStatement","src":"23834:11:17"},{"id":5307,"nodeType":"UncheckedBlock","src":"23855:893:17","statements":[{"expression":{"id":5144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5130,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"23879:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":5131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"23907:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":5140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5138,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5132,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"23891:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7467_$","typeString":"type(library SafeCast)"}},"id":5133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7466,"src":"23891:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5145,"nodeType":"ExpressionStatement","src":"23879:51:17"},{"expression":{"id":5148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"23944:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5147,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"23954:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5149,"nodeType":"ExpressionStatement","src":"23944:13:17"},{"expression":{"id":5152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5150,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"23971:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5151,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"23981:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5153,"nodeType":"ExpressionStatement","src":"23971:13:17"},{"expression":{"id":5168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5154,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"23999:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":5155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"24026:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":5164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5162,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5156,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"24010:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7467_$","typeString":"type(library SafeCast)"}},"id":5157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7466,"src":"24010:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5169,"nodeType":"ExpressionStatement","src":"23999:49:17"},{"expression":{"id":5172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"24062:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5171,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"24072:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5173,"nodeType":"ExpressionStatement","src":"24062:13:17"},{"expression":{"id":5176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5174,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"24089:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5175,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"24099:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5177,"nodeType":"ExpressionStatement","src":"24089:13:17"},{"expression":{"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5178,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"24117:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":5179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"24144:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":5188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5186,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5180,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"24128:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7467_$","typeString":"type(library SafeCast)"}},"id":5181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7466,"src":"24128:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5193,"nodeType":"ExpressionStatement","src":"24117:49:17"},{"expression":{"id":5196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"24180:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5195,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"24190:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5197,"nodeType":"ExpressionStatement","src":"24180:13:17"},{"expression":{"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5198,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"24207:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5199,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"24217:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5201,"nodeType":"ExpressionStatement","src":"24207:13:17"},{"expression":{"id":5216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5202,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"24235:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":5203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"24262:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":5212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:17","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5210,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:17","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:17","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5204,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"24246:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7467_$","typeString":"type(library SafeCast)"}},"id":5205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7466,"src":"24246:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5217,"nodeType":"ExpressionStatement","src":"24235:49:17"},{"expression":{"id":5220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"24298:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5219,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"24308:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5221,"nodeType":"ExpressionStatement","src":"24298:13:17"},{"expression":{"id":5224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5222,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"24325:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5223,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"24335:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5225,"nodeType":"ExpressionStatement","src":"24325:13:17"},{"expression":{"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5226,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"24353:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":5227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"24379:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":5236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5234,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5228,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"24363:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7467_$","typeString":"type(library SafeCast)"}},"id":5229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7466,"src":"24363:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5241,"nodeType":"ExpressionStatement","src":"24353:47:17"},{"expression":{"id":5244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"24414:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5243,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"24424:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5245,"nodeType":"ExpressionStatement","src":"24414:13:17"},{"expression":{"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5246,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"24441:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5247,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"24451:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5249,"nodeType":"ExpressionStatement","src":"24441:13:17"},{"expression":{"id":5264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5250,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"24469:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":5251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"24495:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":5260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5258,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:17","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5252,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"24479:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7467_$","typeString":"type(library SafeCast)"}},"id":5253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7466,"src":"24479:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5265,"nodeType":"ExpressionStatement","src":"24469:47:17"},{"expression":{"id":5268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"24530:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5267,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"24540:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5269,"nodeType":"ExpressionStatement","src":"24530:13:17"},{"expression":{"id":5272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5270,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"24557:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5271,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"24567:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5273,"nodeType":"ExpressionStatement","src":"24557:13:17"},{"expression":{"id":5288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5274,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"24585:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"24611:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":5284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5282,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5276,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"24595:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7467_$","typeString":"type(library SafeCast)"}},"id":5277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7466,"src":"24595:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5289,"nodeType":"ExpressionStatement","src":"24585:47:17"},{"expression":{"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"24646:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5291,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"24656:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5293,"nodeType":"ExpressionStatement","src":"24646:13:17"},{"expression":{"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5294,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"24673:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5295,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"24683:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5297,"nodeType":"ExpressionStatement","src":"24673:13:17"},{"expression":{"id":5305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5298,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"24701:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"24727:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":5302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5299,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"24711:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7467_$","typeString":"type(library SafeCast)"}},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7466,"src":"24711:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5306,"nodeType":"ExpressionStatement","src":"24701:36:17"}]},{"expression":{"id":5308,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"24764:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5122,"id":5309,"nodeType":"Return","src":"24757:13:17"}]},"documentation":{"id":5116,"nodeType":"StructuredDocumentation","src":"23611:119:17","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5311,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:17","nodeType":"FunctionDefinition","parameters":{"id":5119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5118,"mutability":"mutable","name":"value","nameLocation":"23757:5:17","nodeType":"VariableDeclaration","scope":5311,"src":"23749:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5117,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:17"},"returnParameters":{"id":5122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5311,"src":"23787:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5120,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:17"},"scope":5702,"src":"23735:1042:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5344,"nodeType":"Block","src":"25010:175:17","statements":[{"id":5343,"nodeType":"UncheckedBlock","src":"25020:159:17","statements":[{"assignments":[5323],"declarations":[{"constant":false,"id":5323,"mutability":"mutable","name":"result","nameLocation":"25052:6:17","nodeType":"VariableDeclaration","scope":5343,"src":"25044:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5322,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5327,"initialValue":{"arguments":[{"id":5325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5314,"src":"25066:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5324,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5311,5345],"referencedDeclaration":5311,"src":"25061:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5328,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5323,"src":"25093:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5332,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5317,"src":"25135:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4108","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4108","typeString":"enum Math.Rounding"}],"id":5331,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5701,"src":"25118:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4108_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5335,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5323,"src":"25153:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5314,"src":"25162:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5329,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"25102:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7467_$","typeString":"type(library SafeCast)"}},"id":5330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7466,"src":"25102:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5321,"id":5342,"nodeType":"Return","src":"25086:82:17"}]}]},"documentation":{"id":5312,"nodeType":"StructuredDocumentation","src":"24783:142:17","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5345,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:17","nodeType":"FunctionDefinition","parameters":{"id":5318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5314,"mutability":"mutable","name":"value","nameLocation":"24952:5:17","nodeType":"VariableDeclaration","scope":5345,"src":"24944:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5313,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5317,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:17","nodeType":"VariableDeclaration","scope":5345,"src":"24959:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4108","typeString":"enum Math.Rounding"},"typeName":{"id":5316,"nodeType":"UserDefinedTypeName","pathNode":{"id":5315,"name":"Rounding","nameLocations":["24959:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":4108,"src":"24959:8:17"},"referencedDeclaration":4108,"src":"24959:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4108","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:17"},"returnParameters":{"id":5321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5345,"src":"25001:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5319,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:17"},"scope":5702,"src":"24930:255:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5473,"nodeType":"Block","src":"25378:854:17","statements":[{"assignments":[5354],"declarations":[{"constant":false,"id":5354,"mutability":"mutable","name":"result","nameLocation":"25396:6:17","nodeType":"VariableDeclaration","scope":5473,"src":"25388:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5353,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5356,"initialValue":{"hexValue":"30","id":5355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:17"},{"id":5470,"nodeType":"UncheckedBlock","src":"25416:787:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5348,"src":"25444:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5373,"nodeType":"IfStatement","src":"25440:103:17","trueBody":{"id":5372,"nodeType":"Block","src":"25463:80:17","statements":[{"expression":{"id":5366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5348,"src":"25481:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5367,"nodeType":"ExpressionStatement","src":"25481:17:17"},{"expression":{"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5368,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"25516:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5371,"nodeType":"ExpressionStatement","src":"25516:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5348,"src":"25560:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5390,"nodeType":"IfStatement","src":"25556:103:17","trueBody":{"id":5389,"nodeType":"Block","src":"25579:80:17","statements":[{"expression":{"id":5383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5348,"src":"25597:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5384,"nodeType":"ExpressionStatement","src":"25597:17:17"},{"expression":{"id":5387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5385,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"25632:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5388,"nodeType":"ExpressionStatement","src":"25632:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5348,"src":"25676:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5407,"nodeType":"IfStatement","src":"25672:103:17","trueBody":{"id":5406,"nodeType":"Block","src":"25695:80:17","statements":[{"expression":{"id":5400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5348,"src":"25713:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5401,"nodeType":"ExpressionStatement","src":"25713:17:17"},{"expression":{"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5402,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"25748:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5405,"nodeType":"ExpressionStatement","src":"25748:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5348,"src":"25792:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5424,"nodeType":"IfStatement","src":"25788:100:17","trueBody":{"id":5423,"nodeType":"Block","src":"25810:78:17","statements":[{"expression":{"id":5417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5348,"src":"25828:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5418,"nodeType":"ExpressionStatement","src":"25828:16:17"},{"expression":{"id":5421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5419,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"25862:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5422,"nodeType":"ExpressionStatement","src":"25862:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5348,"src":"25905:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:17","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5441,"nodeType":"IfStatement","src":"25901:100:17","trueBody":{"id":5440,"nodeType":"Block","src":"25923:78:17","statements":[{"expression":{"id":5434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5348,"src":"25941:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:17","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5435,"nodeType":"ExpressionStatement","src":"25941:16:17"},{"expression":{"id":5438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5436,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"25975:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5439,"nodeType":"ExpressionStatement","src":"25975:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5348,"src":"26018:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5458,"nodeType":"IfStatement","src":"26014:100:17","trueBody":{"id":5457,"nodeType":"Block","src":"26036:78:17","statements":[{"expression":{"id":5451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5348,"src":"26054:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5452,"nodeType":"ExpressionStatement","src":"26054:16:17"},{"expression":{"id":5455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5453,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"26088:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5456,"nodeType":"ExpressionStatement","src":"26088:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5348,"src":"26131:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5469,"nodeType":"IfStatement","src":"26127:66:17","trueBody":{"id":5468,"nodeType":"Block","src":"26149:44:17","statements":[{"expression":{"id":5466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5464,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"26167:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5467,"nodeType":"ExpressionStatement","src":"26167:11:17"}]}}]},{"expression":{"id":5471,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"26219:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5352,"id":5472,"nodeType":"Return","src":"26212:13:17"}]},"documentation":{"id":5346,"nodeType":"StructuredDocumentation","src":"25191:120:17","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5474,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:17","nodeType":"FunctionDefinition","parameters":{"id":5349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5348,"mutability":"mutable","name":"value","nameLocation":"25339:5:17","nodeType":"VariableDeclaration","scope":5474,"src":"25331:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5347,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:17"},"returnParameters":{"id":5352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5474,"src":"25369:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5350,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:17"},"scope":5702,"src":"25316:916:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5507,"nodeType":"Block","src":"26467:177:17","statements":[{"id":5506,"nodeType":"UncheckedBlock","src":"26477:161:17","statements":[{"assignments":[5486],"declarations":[{"constant":false,"id":5486,"mutability":"mutable","name":"result","nameLocation":"26509:6:17","nodeType":"VariableDeclaration","scope":5506,"src":"26501:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5485,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5490,"initialValue":{"arguments":[{"id":5488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"26524:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5487,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5474,5508],"referencedDeclaration":5474,"src":"26518:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5491,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"26551:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5495,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5480,"src":"26593:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4108","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4108","typeString":"enum Math.Rounding"}],"id":5494,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5701,"src":"26576:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4108_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5498,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"26612:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"26621:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5492,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"26560:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7467_$","typeString":"type(library SafeCast)"}},"id":5493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7466,"src":"26560:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5484,"id":5505,"nodeType":"Return","src":"26544:83:17"}]}]},"documentation":{"id":5475,"nodeType":"StructuredDocumentation","src":"26238:143:17","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5508,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:17","nodeType":"FunctionDefinition","parameters":{"id":5481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5477,"mutability":"mutable","name":"value","nameLocation":"26409:5:17","nodeType":"VariableDeclaration","scope":5508,"src":"26401:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5476,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5480,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:17","nodeType":"VariableDeclaration","scope":5508,"src":"26416:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4108","typeString":"enum Math.Rounding"},"typeName":{"id":5479,"nodeType":"UserDefinedTypeName","pathNode":{"id":5478,"name":"Rounding","nameLocations":["26416:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":4108,"src":"26416:8:17"},"referencedDeclaration":4108,"src":"26416:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4108","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:17"},"returnParameters":{"id":5484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5508,"src":"26458:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5482,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:17"},"scope":5702,"src":"26386:258:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5644,"nodeType":"Block","src":"26964:674:17","statements":[{"assignments":[5517],"declarations":[{"constant":false,"id":5517,"mutability":"mutable","name":"result","nameLocation":"26982:6:17","nodeType":"VariableDeclaration","scope":5644,"src":"26974:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5516,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5519,"initialValue":{"hexValue":"30","id":5518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:17"},{"assignments":[5521],"declarations":[{"constant":false,"id":5521,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:17","nodeType":"VariableDeclaration","scope":5644,"src":"27002:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5520,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5522,"nodeType":"VariableDeclarationStatement","src":"27002:12:17"},{"id":5641,"nodeType":"UncheckedBlock","src":"27024:585:17","statements":[{"expression":{"id":5535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5523,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"27048:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5511,"src":"27071:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":5532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5530,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5524,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"27055:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7467_$","typeString":"type(library SafeCast)"}},"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7466,"src":"27055:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5536,"nodeType":"ExpressionStatement","src":"27048:46:17"},{"expression":{"id":5541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5511,"src":"27108:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5538,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"27118:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":5539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5542,"nodeType":"ExpressionStatement","src":"27108:20:17"},{"expression":{"id":5547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5543,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"27142:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5544,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"27152:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":5545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5548,"nodeType":"ExpressionStatement","src":"27142:19:17"},{"expression":{"id":5561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5549,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"27176:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5511,"src":"27199:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":5558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5556,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5550,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"27183:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7467_$","typeString":"type(library SafeCast)"}},"id":5551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7466,"src":"27183:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5562,"nodeType":"ExpressionStatement","src":"27176:45:17"},{"expression":{"id":5567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5511,"src":"27235:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5564,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"27245:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":5565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5568,"nodeType":"ExpressionStatement","src":"27235:19:17"},{"expression":{"id":5573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5569,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"27268:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5570,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"27278:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":5571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5574,"nodeType":"ExpressionStatement","src":"27268:18:17"},{"expression":{"id":5587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5575,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"27301:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5511,"src":"27324:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":5584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5582,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5576,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"27308:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7467_$","typeString":"type(library SafeCast)"}},"id":5577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7466,"src":"27308:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5588,"nodeType":"ExpressionStatement","src":"27301:45:17"},{"expression":{"id":5593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5511,"src":"27360:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5590,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"27370:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":5591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5594,"nodeType":"ExpressionStatement","src":"27360:19:17"},{"expression":{"id":5599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5595,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"27393:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5596,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"27403:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":5597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5600,"nodeType":"ExpressionStatement","src":"27393:18:17"},{"expression":{"id":5613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5601,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"27426:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5511,"src":"27449:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":5610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:17","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5608,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:17","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:17","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5602,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"27433:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7467_$","typeString":"type(library SafeCast)"}},"id":5603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7466,"src":"27433:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5614,"nodeType":"ExpressionStatement","src":"27426:45:17"},{"expression":{"id":5619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5511,"src":"27485:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5616,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"27495:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":5617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5620,"nodeType":"ExpressionStatement","src":"27485:19:17"},{"expression":{"id":5625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5621,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"27518:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5622,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"27528:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5626,"nodeType":"ExpressionStatement","src":"27518:18:17"},{"expression":{"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5627,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"27551:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5511,"src":"27577:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":5636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5634,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5628,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"27561:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7467_$","typeString":"type(library SafeCast)"}},"id":5629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7466,"src":"27561:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5640,"nodeType":"ExpressionStatement","src":"27551:47:17"}]},{"expression":{"id":5642,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"27625:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5515,"id":5643,"nodeType":"Return","src":"27618:13:17"}]},"documentation":{"id":5509,"nodeType":"StructuredDocumentation","src":"26650:246:17","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5645,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:17","nodeType":"FunctionDefinition","parameters":{"id":5512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5511,"mutability":"mutable","name":"value","nameLocation":"26925:5:17","nodeType":"VariableDeclaration","scope":5645,"src":"26917:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5510,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:17"},"returnParameters":{"id":5515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5645,"src":"26955:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5513,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:17"},"scope":5702,"src":"26901:737:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5681,"nodeType":"Block","src":"27875:184:17","statements":[{"id":5680,"nodeType":"UncheckedBlock","src":"27885:168:17","statements":[{"assignments":[5657],"declarations":[{"constant":false,"id":5657,"mutability":"mutable","name":"result","nameLocation":"27917:6:17","nodeType":"VariableDeclaration","scope":5680,"src":"27909:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5656,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5661,"initialValue":{"arguments":[{"id":5659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5648,"src":"27933:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5658,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5645,5682],"referencedDeclaration":5645,"src":"27926:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5662,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"27960:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5666,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"28002:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4108","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4108","typeString":"enum Math.Rounding"}],"id":5665,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5701,"src":"27985:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4108_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5669,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"28021:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5672,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5648,"src":"28036:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5663,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"27969:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7467_$","typeString":"type(library SafeCast)"}},"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7466,"src":"27969:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5655,"id":5679,"nodeType":"Return","src":"27953:89:17"}]}]},"documentation":{"id":5646,"nodeType":"StructuredDocumentation","src":"27644:144:17","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5682,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:17","nodeType":"FunctionDefinition","parameters":{"id":5652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5648,"mutability":"mutable","name":"value","nameLocation":"27817:5:17","nodeType":"VariableDeclaration","scope":5682,"src":"27809:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5647,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5651,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:17","nodeType":"VariableDeclaration","scope":5682,"src":"27824:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4108","typeString":"enum Math.Rounding"},"typeName":{"id":5650,"nodeType":"UserDefinedTypeName","pathNode":{"id":5649,"name":"Rounding","nameLocations":["27824:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":4108,"src":"27824:8:17"},"referencedDeclaration":4108,"src":"27824:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4108","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:17"},"returnParameters":{"id":5655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5682,"src":"27866:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5653,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:17"},"scope":5702,"src":"27793:266:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5700,"nodeType":"Block","src":"28257:48:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5693,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5686,"src":"28280:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4108","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4108","typeString":"enum Math.Rounding"}],"id":5692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5691,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:17","typeDescriptions":{}}},"id":5694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5690,"id":5699,"nodeType":"Return","src":"28267:31:17"}]},"documentation":{"id":5683,"nodeType":"StructuredDocumentation","src":"28065:113:17","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5701,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:17","nodeType":"FunctionDefinition","parameters":{"id":5687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5686,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:17","nodeType":"VariableDeclaration","scope":5701,"src":"28209:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4108","typeString":"enum Math.Rounding"},"typeName":{"id":5685,"nodeType":"UserDefinedTypeName","pathNode":{"id":5684,"name":"Rounding","nameLocations":["28209:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":4108,"src":"28209:8:17"},"referencedDeclaration":4108,"src":"28209:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4108","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:17"},"returnParameters":{"id":5690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5701,"src":"28251:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5688,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:17"},"scope":5702,"src":"28183:122:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5703,"src":"281:28026:17","usedErrors":[],"usedEvents":[]}],"src":"103:28205:17"},"id":17},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7467]},"id":7468,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5704,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5705,"nodeType":"StructuredDocumentation","src":"218:550:18","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":7467,"linearizedBaseContracts":[7467],"name":"SafeCast","nameLocation":"777:8:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5706,"nodeType":"StructuredDocumentation","src":"792:68:18","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5712,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:18","nodeType":"ErrorDefinition","parameters":{"id":5711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5708,"mutability":"mutable","name":"bits","nameLocation":"908:4:18","nodeType":"VariableDeclaration","scope":5712,"src":"902:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5707,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5710,"mutability":"mutable","name":"value","nameLocation":"922:5:18","nodeType":"VariableDeclaration","scope":5712,"src":"914:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5709,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:18"},"src":"865:64:18"},{"documentation":{"id":5713,"nodeType":"StructuredDocumentation","src":"935:75:18","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5717,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:18","nodeType":"ErrorDefinition","parameters":{"id":5716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5715,"mutability":"mutable","name":"value","nameLocation":"1056:5:18","nodeType":"VariableDeclaration","scope":5717,"src":"1049:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5714,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:18"},"src":"1015:48:18"},{"documentation":{"id":5718,"nodeType":"StructuredDocumentation","src":"1069:67:18","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5724,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:18","nodeType":"ErrorDefinition","parameters":{"id":5723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5720,"mutability":"mutable","name":"bits","nameLocation":"1183:4:18","nodeType":"VariableDeclaration","scope":5724,"src":"1177:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5719,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5722,"mutability":"mutable","name":"value","nameLocation":"1196:5:18","nodeType":"VariableDeclaration","scope":5724,"src":"1189:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5721,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:18"},"src":"1141:62:18"},{"documentation":{"id":5725,"nodeType":"StructuredDocumentation","src":"1209:75:18","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5729,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:18","nodeType":"ErrorDefinition","parameters":{"id":5728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5727,"mutability":"mutable","name":"value","nameLocation":"1331:5:18","nodeType":"VariableDeclaration","scope":5729,"src":"1323:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5726,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:18"},"src":"1289:49:18"},{"body":{"id":5756,"nodeType":"Block","src":"1695:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5732,"src":"1709:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5739,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5738,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:18","memberName":"max","nodeType":"MemberAccess","src":"1717:17:18","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5750,"nodeType":"IfStatement","src":"1705:105:18","trueBody":{"id":5749,"nodeType":"Block","src":"1736:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:18","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5732,"src":"1793:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5744,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"1757:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5748,"nodeType":"RevertStatement","src":"1750:49:18"}]}},{"expression":{"arguments":[{"id":5753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5732,"src":"1834:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5751,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:18","typeDescriptions":{}}},"id":5754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5736,"id":5755,"nodeType":"Return","src":"1819:21:18"}]},"documentation":{"id":5730,"nodeType":"StructuredDocumentation","src":"1344:280:18","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5757,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:18","nodeType":"FunctionDefinition","parameters":{"id":5733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5732,"mutability":"mutable","name":"value","nameLocation":"1656:5:18","nodeType":"VariableDeclaration","scope":5757,"src":"1648:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5731,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:18"},"returnParameters":{"id":5736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5757,"src":"1686:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5734,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:18","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:18"},"scope":7467,"src":"1629:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5784,"nodeType":"Block","src":"2204:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"2218:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5767,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5766,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:18","memberName":"max","nodeType":"MemberAccess","src":"2226:17:18","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5778,"nodeType":"IfStatement","src":"2214:105:18","trueBody":{"id":5777,"nodeType":"Block","src":"2245:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:18","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5774,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"2302:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5772,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"2266:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5776,"nodeType":"RevertStatement","src":"2259:49:18"}]}},{"expression":{"arguments":[{"id":5781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"2343:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5779,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:18","typeDescriptions":{}}},"id":5782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5764,"id":5783,"nodeType":"Return","src":"2328:21:18"}]},"documentation":{"id":5758,"nodeType":"StructuredDocumentation","src":"1853:280:18","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5785,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:18","nodeType":"FunctionDefinition","parameters":{"id":5761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5760,"mutability":"mutable","name":"value","nameLocation":"2165:5:18","nodeType":"VariableDeclaration","scope":5785,"src":"2157:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5759,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:18"},"returnParameters":{"id":5764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5785,"src":"2195:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5762,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:18","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:18"},"scope":7467,"src":"2138:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5812,"nodeType":"Block","src":"2713:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"2727:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5795,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5794,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:18","memberName":"max","nodeType":"MemberAccess","src":"2735:17:18","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5806,"nodeType":"IfStatement","src":"2723:105:18","trueBody":{"id":5805,"nodeType":"Block","src":"2754:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:18","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"2811:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5800,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"2775:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5804,"nodeType":"RevertStatement","src":"2768:49:18"}]}},{"expression":{"arguments":[{"id":5809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"2852:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5807,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:18","typeDescriptions":{}}},"id":5810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5792,"id":5811,"nodeType":"Return","src":"2837:21:18"}]},"documentation":{"id":5786,"nodeType":"StructuredDocumentation","src":"2362:280:18","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5813,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:18","nodeType":"FunctionDefinition","parameters":{"id":5789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5788,"mutability":"mutable","name":"value","nameLocation":"2674:5:18","nodeType":"VariableDeclaration","scope":5813,"src":"2666:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5787,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:18"},"returnParameters":{"id":5792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5813,"src":"2704:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5790,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:18","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:18"},"scope":7467,"src":"2647:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5840,"nodeType":"Block","src":"3222:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5816,"src":"3236:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5823,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5822,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:18","memberName":"max","nodeType":"MemberAccess","src":"3244:17:18","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5834,"nodeType":"IfStatement","src":"3232:105:18","trueBody":{"id":5833,"nodeType":"Block","src":"3263:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:18","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5816,"src":"3320:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5828,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"3284:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5832,"nodeType":"RevertStatement","src":"3277:49:18"}]}},{"expression":{"arguments":[{"id":5837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5816,"src":"3361:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5835,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:18","typeDescriptions":{}}},"id":5838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5820,"id":5839,"nodeType":"Return","src":"3346:21:18"}]},"documentation":{"id":5814,"nodeType":"StructuredDocumentation","src":"2871:280:18","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5841,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:18","nodeType":"FunctionDefinition","parameters":{"id":5817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5816,"mutability":"mutable","name":"value","nameLocation":"3183:5:18","nodeType":"VariableDeclaration","scope":5841,"src":"3175:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5815,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:18"},"returnParameters":{"id":5820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5841,"src":"3213:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5818,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:18","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:18"},"scope":7467,"src":"3156:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5868,"nodeType":"Block","src":"3731:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"3745:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5851,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5850,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:18","memberName":"max","nodeType":"MemberAccess","src":"3753:17:18","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5862,"nodeType":"IfStatement","src":"3741:105:18","trueBody":{"id":5861,"nodeType":"Block","src":"3772:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:18","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"3829:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5856,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"3793:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5860,"nodeType":"RevertStatement","src":"3786:49:18"}]}},{"expression":{"arguments":[{"id":5865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"3870:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5863,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:18","typeDescriptions":{}}},"id":5866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5848,"id":5867,"nodeType":"Return","src":"3855:21:18"}]},"documentation":{"id":5842,"nodeType":"StructuredDocumentation","src":"3380:280:18","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5869,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:18","nodeType":"FunctionDefinition","parameters":{"id":5845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5844,"mutability":"mutable","name":"value","nameLocation":"3692:5:18","nodeType":"VariableDeclaration","scope":5869,"src":"3684:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5843,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:18"},"returnParameters":{"id":5848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5847,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5869,"src":"3722:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5846,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:18","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:18"},"scope":7467,"src":"3665:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5896,"nodeType":"Block","src":"4240:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5872,"src":"4254:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5879,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5878,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:18","memberName":"max","nodeType":"MemberAccess","src":"4262:17:18","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5890,"nodeType":"IfStatement","src":"4250:105:18","trueBody":{"id":5889,"nodeType":"Block","src":"4281:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:18","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5872,"src":"4338:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5884,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"4302:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5888,"nodeType":"RevertStatement","src":"4295:49:18"}]}},{"expression":{"arguments":[{"id":5893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5872,"src":"4379:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5891,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:18","typeDescriptions":{}}},"id":5894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5876,"id":5895,"nodeType":"Return","src":"4364:21:18"}]},"documentation":{"id":5870,"nodeType":"StructuredDocumentation","src":"3889:280:18","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5897,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:18","nodeType":"FunctionDefinition","parameters":{"id":5873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5872,"mutability":"mutable","name":"value","nameLocation":"4201:5:18","nodeType":"VariableDeclaration","scope":5897,"src":"4193:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5871,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:18"},"returnParameters":{"id":5876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5875,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5897,"src":"4231:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5874,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:18","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:18"},"scope":7467,"src":"4174:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5924,"nodeType":"Block","src":"4749:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"4763:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5907,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5906,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:18","memberName":"max","nodeType":"MemberAccess","src":"4771:17:18","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5918,"nodeType":"IfStatement","src":"4759:105:18","trueBody":{"id":5917,"nodeType":"Block","src":"4790:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:18","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"4847:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5912,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"4811:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5916,"nodeType":"RevertStatement","src":"4804:49:18"}]}},{"expression":{"arguments":[{"id":5921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"4888:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5919,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:18","typeDescriptions":{}}},"id":5922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5904,"id":5923,"nodeType":"Return","src":"4873:21:18"}]},"documentation":{"id":5898,"nodeType":"StructuredDocumentation","src":"4398:280:18","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5925,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:18","nodeType":"FunctionDefinition","parameters":{"id":5901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5900,"mutability":"mutable","name":"value","nameLocation":"4710:5:18","nodeType":"VariableDeclaration","scope":5925,"src":"4702:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5899,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:18"},"returnParameters":{"id":5904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5925,"src":"4740:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5902,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:18","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:18"},"scope":7467,"src":"4683:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5952,"nodeType":"Block","src":"5258:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5928,"src":"5272:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5935,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5934,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:18","memberName":"max","nodeType":"MemberAccess","src":"5280:17:18","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5946,"nodeType":"IfStatement","src":"5268:105:18","trueBody":{"id":5945,"nodeType":"Block","src":"5299:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:18","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5928,"src":"5356:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5940,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"5320:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5944,"nodeType":"RevertStatement","src":"5313:49:18"}]}},{"expression":{"arguments":[{"id":5949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5928,"src":"5397:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5947,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:18","typeDescriptions":{}}},"id":5950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5932,"id":5951,"nodeType":"Return","src":"5382:21:18"}]},"documentation":{"id":5926,"nodeType":"StructuredDocumentation","src":"4907:280:18","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5953,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:18","nodeType":"FunctionDefinition","parameters":{"id":5929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5928,"mutability":"mutable","name":"value","nameLocation":"5219:5:18","nodeType":"VariableDeclaration","scope":5953,"src":"5211:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5927,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:18"},"returnParameters":{"id":5932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5953,"src":"5249:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5930,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:18","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:18"},"scope":7467,"src":"5192:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5980,"nodeType":"Block","src":"5767:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"5781:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5963,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5962,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:18","memberName":"max","nodeType":"MemberAccess","src":"5789:17:18","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5974,"nodeType":"IfStatement","src":"5777:105:18","trueBody":{"id":5973,"nodeType":"Block","src":"5808:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:18","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"5865:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5968,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"5829:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5972,"nodeType":"RevertStatement","src":"5822:49:18"}]}},{"expression":{"arguments":[{"id":5977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"5906:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5975,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:18","typeDescriptions":{}}},"id":5978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5960,"id":5979,"nodeType":"Return","src":"5891:21:18"}]},"documentation":{"id":5954,"nodeType":"StructuredDocumentation","src":"5416:280:18","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5981,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:18","nodeType":"FunctionDefinition","parameters":{"id":5957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5956,"mutability":"mutable","name":"value","nameLocation":"5728:5:18","nodeType":"VariableDeclaration","scope":5981,"src":"5720:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5955,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:18"},"returnParameters":{"id":5960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5981,"src":"5758:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5958,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:18","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:18"},"scope":7467,"src":"5701:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6008,"nodeType":"Block","src":"6276:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5984,"src":"6290:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5991,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5990,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:18","memberName":"max","nodeType":"MemberAccess","src":"6298:17:18","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6002,"nodeType":"IfStatement","src":"6286:105:18","trueBody":{"id":6001,"nodeType":"Block","src":"6317:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:18","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5984,"src":"6374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5996,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"6338:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6000,"nodeType":"RevertStatement","src":"6331:49:18"}]}},{"expression":{"arguments":[{"id":6005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5984,"src":"6415:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6003,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:18","typeDescriptions":{}}},"id":6006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5988,"id":6007,"nodeType":"Return","src":"6400:21:18"}]},"documentation":{"id":5982,"nodeType":"StructuredDocumentation","src":"5925:280:18","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6009,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:18","nodeType":"FunctionDefinition","parameters":{"id":5985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5984,"mutability":"mutable","name":"value","nameLocation":"6237:5:18","nodeType":"VariableDeclaration","scope":6009,"src":"6229:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5983,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:18"},"returnParameters":{"id":5988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6009,"src":"6267:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5986,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:18","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:18"},"scope":7467,"src":"6210:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6036,"nodeType":"Block","src":"6785:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6012,"src":"6799:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6019,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":6018,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":6022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:18","memberName":"max","nodeType":"MemberAccess","src":"6807:17:18","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6030,"nodeType":"IfStatement","src":"6795:105:18","trueBody":{"id":6029,"nodeType":"Block","src":"6826:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:18","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6012,"src":"6883:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6024,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"6847:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6028,"nodeType":"RevertStatement","src":"6840:49:18"}]}},{"expression":{"arguments":[{"id":6033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6012,"src":"6924:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6031,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:18","typeDescriptions":{}}},"id":6034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":6016,"id":6035,"nodeType":"Return","src":"6909:21:18"}]},"documentation":{"id":6010,"nodeType":"StructuredDocumentation","src":"6434:280:18","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6037,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:18","nodeType":"FunctionDefinition","parameters":{"id":6013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6012,"mutability":"mutable","name":"value","nameLocation":"6746:5:18","nodeType":"VariableDeclaration","scope":6037,"src":"6738:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6011,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:18"},"returnParameters":{"id":6016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6037,"src":"6776:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":6014,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:18","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:18"},"scope":7467,"src":"6719:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6064,"nodeType":"Block","src":"7294:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"7308:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6047,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":6046,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":6050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:18","memberName":"max","nodeType":"MemberAccess","src":"7316:17:18","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6058,"nodeType":"IfStatement","src":"7304:105:18","trueBody":{"id":6057,"nodeType":"Block","src":"7335:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:18","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"7392:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6052,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"7356:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6056,"nodeType":"RevertStatement","src":"7349:49:18"}]}},{"expression":{"arguments":[{"id":6061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"7433:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6059,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:18","typeDescriptions":{}}},"id":6062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":6044,"id":6063,"nodeType":"Return","src":"7418:21:18"}]},"documentation":{"id":6038,"nodeType":"StructuredDocumentation","src":"6943:280:18","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6065,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:18","nodeType":"FunctionDefinition","parameters":{"id":6041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6040,"mutability":"mutable","name":"value","nameLocation":"7255:5:18","nodeType":"VariableDeclaration","scope":6065,"src":"7247:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6039,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:18"},"returnParameters":{"id":6044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6043,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6065,"src":"7285:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6042,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:18","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:18"},"scope":7467,"src":"7228:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6092,"nodeType":"Block","src":"7803:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6068,"src":"7817:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6075,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":6074,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":6078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:18","memberName":"max","nodeType":"MemberAccess","src":"7825:17:18","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6086,"nodeType":"IfStatement","src":"7813:105:18","trueBody":{"id":6085,"nodeType":"Block","src":"7844:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:18","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6068,"src":"7901:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6080,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"7865:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6084,"nodeType":"RevertStatement","src":"7858:49:18"}]}},{"expression":{"arguments":[{"id":6089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6068,"src":"7942:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6087,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:18","typeDescriptions":{}}},"id":6090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":6072,"id":6091,"nodeType":"Return","src":"7927:21:18"}]},"documentation":{"id":6066,"nodeType":"StructuredDocumentation","src":"7452:280:18","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6093,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:18","nodeType":"FunctionDefinition","parameters":{"id":6069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6068,"mutability":"mutable","name":"value","nameLocation":"7764:5:18","nodeType":"VariableDeclaration","scope":6093,"src":"7756:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6067,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:18"},"returnParameters":{"id":6072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6093,"src":"7794:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":6070,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:18","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:18"},"scope":7467,"src":"7737:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6120,"nodeType":"Block","src":"8312:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6096,"src":"8326:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6103,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":6102,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":6106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:18","memberName":"max","nodeType":"MemberAccess","src":"8334:17:18","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6114,"nodeType":"IfStatement","src":"8322:105:18","trueBody":{"id":6113,"nodeType":"Block","src":"8353:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:18","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6096,"src":"8410:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6108,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"8374:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6112,"nodeType":"RevertStatement","src":"8367:49:18"}]}},{"expression":{"arguments":[{"id":6117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6096,"src":"8451:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6115,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:18","typeDescriptions":{}}},"id":6118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":6100,"id":6119,"nodeType":"Return","src":"8436:21:18"}]},"documentation":{"id":6094,"nodeType":"StructuredDocumentation","src":"7961:280:18","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6121,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:18","nodeType":"FunctionDefinition","parameters":{"id":6097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6096,"mutability":"mutable","name":"value","nameLocation":"8273:5:18","nodeType":"VariableDeclaration","scope":6121,"src":"8265:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6095,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:18"},"returnParameters":{"id":6100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6121,"src":"8303:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":6098,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:18","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:18"},"scope":7467,"src":"8246:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6148,"nodeType":"Block","src":"8821:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6124,"src":"8835:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6131,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6130,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:18","memberName":"max","nodeType":"MemberAccess","src":"8843:17:18","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6142,"nodeType":"IfStatement","src":"8831:105:18","trueBody":{"id":6141,"nodeType":"Block","src":"8862:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:18","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6124,"src":"8919:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6136,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"8883:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6140,"nodeType":"RevertStatement","src":"8876:49:18"}]}},{"expression":{"arguments":[{"id":6145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6124,"src":"8960:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6143,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:18","typeDescriptions":{}}},"id":6146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6128,"id":6147,"nodeType":"Return","src":"8945:21:18"}]},"documentation":{"id":6122,"nodeType":"StructuredDocumentation","src":"8470:280:18","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6149,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:18","nodeType":"FunctionDefinition","parameters":{"id":6125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6124,"mutability":"mutable","name":"value","nameLocation":"8782:5:18","nodeType":"VariableDeclaration","scope":6149,"src":"8774:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6123,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:18"},"returnParameters":{"id":6128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6149,"src":"8812:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6126,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:18","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:18"},"scope":7467,"src":"8755:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6176,"nodeType":"Block","src":"9330:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6152,"src":"9344:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6159,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6158,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:18","memberName":"max","nodeType":"MemberAccess","src":"9352:17:18","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6170,"nodeType":"IfStatement","src":"9340:105:18","trueBody":{"id":6169,"nodeType":"Block","src":"9371:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6152,"src":"9428:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6164,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"9392:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6168,"nodeType":"RevertStatement","src":"9385:49:18"}]}},{"expression":{"arguments":[{"id":6173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6152,"src":"9469:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6171,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:18","typeDescriptions":{}}},"id":6174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6156,"id":6175,"nodeType":"Return","src":"9454:21:18"}]},"documentation":{"id":6150,"nodeType":"StructuredDocumentation","src":"8979:280:18","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6177,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:18","nodeType":"FunctionDefinition","parameters":{"id":6153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6152,"mutability":"mutable","name":"value","nameLocation":"9291:5:18","nodeType":"VariableDeclaration","scope":6177,"src":"9283:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6151,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:18"},"returnParameters":{"id":6156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6177,"src":"9321:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6154,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:18","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:18"},"scope":7467,"src":"9264:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6204,"nodeType":"Block","src":"9839:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"9853:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6187,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":6186,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":6190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:18","memberName":"max","nodeType":"MemberAccess","src":"9861:17:18","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6198,"nodeType":"IfStatement","src":"9849:105:18","trueBody":{"id":6197,"nodeType":"Block","src":"9880:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:18","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"9937:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6192,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"9901:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6196,"nodeType":"RevertStatement","src":"9894:49:18"}]}},{"expression":{"arguments":[{"id":6201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"9978:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6199,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:18","typeDescriptions":{}}},"id":6202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6184,"id":6203,"nodeType":"Return","src":"9963:21:18"}]},"documentation":{"id":6178,"nodeType":"StructuredDocumentation","src":"9488:280:18","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6205,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:18","nodeType":"FunctionDefinition","parameters":{"id":6181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6180,"mutability":"mutable","name":"value","nameLocation":"9800:5:18","nodeType":"VariableDeclaration","scope":6205,"src":"9792:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6179,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:18"},"returnParameters":{"id":6184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6205,"src":"9830:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6182,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:18","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:18"},"scope":7467,"src":"9773:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6232,"nodeType":"Block","src":"10348:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6208,"src":"10362:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6215,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":6214,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":6218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:18","memberName":"max","nodeType":"MemberAccess","src":"10370:17:18","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6226,"nodeType":"IfStatement","src":"10358:105:18","trueBody":{"id":6225,"nodeType":"Block","src":"10389:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:18","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6208,"src":"10446:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6220,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"10410:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6224,"nodeType":"RevertStatement","src":"10403:49:18"}]}},{"expression":{"arguments":[{"id":6229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6208,"src":"10487:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6227,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:18","typeDescriptions":{}}},"id":6230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":6212,"id":6231,"nodeType":"Return","src":"10472:21:18"}]},"documentation":{"id":6206,"nodeType":"StructuredDocumentation","src":"9997:280:18","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6233,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:18","nodeType":"FunctionDefinition","parameters":{"id":6209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6208,"mutability":"mutable","name":"value","nameLocation":"10309:5:18","nodeType":"VariableDeclaration","scope":6233,"src":"10301:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6207,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:18"},"returnParameters":{"id":6212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6211,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6233,"src":"10339:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6210,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:18","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:18"},"scope":7467,"src":"10282:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6260,"nodeType":"Block","src":"10857:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6236,"src":"10871:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6243,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":6242,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":6246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:18","memberName":"max","nodeType":"MemberAccess","src":"10879:17:18","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6254,"nodeType":"IfStatement","src":"10867:105:18","trueBody":{"id":6253,"nodeType":"Block","src":"10898:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:18","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6236,"src":"10955:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6248,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"10919:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6252,"nodeType":"RevertStatement","src":"10912:49:18"}]}},{"expression":{"arguments":[{"id":6257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6236,"src":"10996:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6255,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:18","typeDescriptions":{}}},"id":6258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":6240,"id":6259,"nodeType":"Return","src":"10981:21:18"}]},"documentation":{"id":6234,"nodeType":"StructuredDocumentation","src":"10506:280:18","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6261,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:18","nodeType":"FunctionDefinition","parameters":{"id":6237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6236,"mutability":"mutable","name":"value","nameLocation":"10818:5:18","nodeType":"VariableDeclaration","scope":6261,"src":"10810:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6235,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:18"},"returnParameters":{"id":6240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6261,"src":"10848:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":6238,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:18","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:18"},"scope":7467,"src":"10791:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6288,"nodeType":"Block","src":"11360:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6264,"src":"11374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6271,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6270,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:18","memberName":"max","nodeType":"MemberAccess","src":"11382:16:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6282,"nodeType":"IfStatement","src":"11370:103:18","trueBody":{"id":6281,"nodeType":"Block","src":"11400:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6264,"src":"11456:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6276,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"11421:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6280,"nodeType":"RevertStatement","src":"11414:48:18"}]}},{"expression":{"arguments":[{"id":6285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6264,"src":"11496:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6283,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:18","typeDescriptions":{}}},"id":6286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6268,"id":6287,"nodeType":"Return","src":"11482:20:18"}]},"documentation":{"id":6262,"nodeType":"StructuredDocumentation","src":"11015:276:18","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6289,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:18","nodeType":"FunctionDefinition","parameters":{"id":6265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6264,"mutability":"mutable","name":"value","nameLocation":"11322:5:18","nodeType":"VariableDeclaration","scope":6289,"src":"11314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6263,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:18"},"returnParameters":{"id":6268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6289,"src":"11352:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6266,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:18"},"scope":7467,"src":"11296:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6316,"nodeType":"Block","src":"11860:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6292,"src":"11874:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6299,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":6298,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":6302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:18","memberName":"max","nodeType":"MemberAccess","src":"11882:16:18","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6310,"nodeType":"IfStatement","src":"11870:103:18","trueBody":{"id":6309,"nodeType":"Block","src":"11900:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:18","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6292,"src":"11956:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6304,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"11921:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6308,"nodeType":"RevertStatement","src":"11914:48:18"}]}},{"expression":{"arguments":[{"id":6313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6292,"src":"11996:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6311,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:18","typeDescriptions":{}}},"id":6314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":6296,"id":6315,"nodeType":"Return","src":"11982:20:18"}]},"documentation":{"id":6290,"nodeType":"StructuredDocumentation","src":"11515:276:18","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6317,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:18","nodeType":"FunctionDefinition","parameters":{"id":6293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6292,"mutability":"mutable","name":"value","nameLocation":"11822:5:18","nodeType":"VariableDeclaration","scope":6317,"src":"11814:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6291,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:18"},"returnParameters":{"id":6296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6317,"src":"11852:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6294,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:18","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:18"},"scope":7467,"src":"11796:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6344,"nodeType":"Block","src":"12360:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"12374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6327,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":6326,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:18","memberName":"max","nodeType":"MemberAccess","src":"12382:16:18","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6338,"nodeType":"IfStatement","src":"12370:103:18","trueBody":{"id":6337,"nodeType":"Block","src":"12400:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"12456:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6332,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"12421:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6336,"nodeType":"RevertStatement","src":"12414:48:18"}]}},{"expression":{"arguments":[{"id":6341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"12496:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6339,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:18","typeDescriptions":{}}},"id":6342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":6324,"id":6343,"nodeType":"Return","src":"12482:20:18"}]},"documentation":{"id":6318,"nodeType":"StructuredDocumentation","src":"12015:276:18","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6345,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:18","nodeType":"FunctionDefinition","parameters":{"id":6321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6320,"mutability":"mutable","name":"value","nameLocation":"12322:5:18","nodeType":"VariableDeclaration","scope":6345,"src":"12314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6319,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:18"},"returnParameters":{"id":6324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6345,"src":"12352:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6322,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:18","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:18"},"scope":7467,"src":"12296:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6372,"nodeType":"Block","src":"12860:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6348,"src":"12874:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6355,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":6354,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":6358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:18","memberName":"max","nodeType":"MemberAccess","src":"12882:16:18","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6366,"nodeType":"IfStatement","src":"12870:103:18","trueBody":{"id":6365,"nodeType":"Block","src":"12900:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:18","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6348,"src":"12956:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6360,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"12921:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6364,"nodeType":"RevertStatement","src":"12914:48:18"}]}},{"expression":{"arguments":[{"id":6369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6348,"src":"12996:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6367,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:18","typeDescriptions":{}}},"id":6370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":6352,"id":6371,"nodeType":"Return","src":"12982:20:18"}]},"documentation":{"id":6346,"nodeType":"StructuredDocumentation","src":"12515:276:18","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6373,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:18","nodeType":"FunctionDefinition","parameters":{"id":6349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6348,"mutability":"mutable","name":"value","nameLocation":"12822:5:18","nodeType":"VariableDeclaration","scope":6373,"src":"12814:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6347,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:18"},"returnParameters":{"id":6352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6373,"src":"12852:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":6350,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:18","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:18"},"scope":7467,"src":"12796:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6400,"nodeType":"Block","src":"13360:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6376,"src":"13374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6383,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6382,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:18","memberName":"max","nodeType":"MemberAccess","src":"13382:16:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6394,"nodeType":"IfStatement","src":"13370:103:18","trueBody":{"id":6393,"nodeType":"Block","src":"13400:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6376,"src":"13456:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6388,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"13421:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6392,"nodeType":"RevertStatement","src":"13414:48:18"}]}},{"expression":{"arguments":[{"id":6397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6376,"src":"13496:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6395,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:18","typeDescriptions":{}}},"id":6398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6380,"id":6399,"nodeType":"Return","src":"13482:20:18"}]},"documentation":{"id":6374,"nodeType":"StructuredDocumentation","src":"13015:276:18","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6401,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:18","nodeType":"FunctionDefinition","parameters":{"id":6377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6376,"mutability":"mutable","name":"value","nameLocation":"13322:5:18","nodeType":"VariableDeclaration","scope":6401,"src":"13314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6375,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:18"},"returnParameters":{"id":6380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6401,"src":"13352:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6378,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:18"},"scope":7467,"src":"13296:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6428,"nodeType":"Block","src":"13860:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6404,"src":"13874:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6411,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":6410,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":6414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:18","memberName":"max","nodeType":"MemberAccess","src":"13882:16:18","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6422,"nodeType":"IfStatement","src":"13870:103:18","trueBody":{"id":6421,"nodeType":"Block","src":"13900:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:18","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6404,"src":"13956:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6416,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"13921:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6420,"nodeType":"RevertStatement","src":"13914:48:18"}]}},{"expression":{"arguments":[{"id":6425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6404,"src":"13996:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6423,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:18","typeDescriptions":{}}},"id":6426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":6408,"id":6427,"nodeType":"Return","src":"13982:20:18"}]},"documentation":{"id":6402,"nodeType":"StructuredDocumentation","src":"13515:276:18","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6429,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:18","nodeType":"FunctionDefinition","parameters":{"id":6405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6404,"mutability":"mutable","name":"value","nameLocation":"13822:5:18","nodeType":"VariableDeclaration","scope":6429,"src":"13814:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6403,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:18"},"returnParameters":{"id":6408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6429,"src":"13852:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":6406,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:18","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:18"},"scope":7467,"src":"13796:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6456,"nodeType":"Block","src":"14360:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6432,"src":"14374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6439,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6438,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:18","memberName":"max","nodeType":"MemberAccess","src":"14382:16:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6450,"nodeType":"IfStatement","src":"14370:103:18","trueBody":{"id":6449,"nodeType":"Block","src":"14400:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6432,"src":"14456:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6444,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"14421:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6448,"nodeType":"RevertStatement","src":"14414:48:18"}]}},{"expression":{"arguments":[{"id":6453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6432,"src":"14496:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6451,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:18","typeDescriptions":{}}},"id":6454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6436,"id":6455,"nodeType":"Return","src":"14482:20:18"}]},"documentation":{"id":6430,"nodeType":"StructuredDocumentation","src":"14015:276:18","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6457,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:18","nodeType":"FunctionDefinition","parameters":{"id":6433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6432,"mutability":"mutable","name":"value","nameLocation":"14322:5:18","nodeType":"VariableDeclaration","scope":6457,"src":"14314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6431,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:18"},"returnParameters":{"id":6436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6457,"src":"14352:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6434,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:18"},"scope":7467,"src":"14296:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6484,"nodeType":"Block","src":"14860:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6460,"src":"14874:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6467,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6466,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:18","memberName":"max","nodeType":"MemberAccess","src":"14882:16:18","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6478,"nodeType":"IfStatement","src":"14870:103:18","trueBody":{"id":6477,"nodeType":"Block","src":"14900:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:18","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6460,"src":"14956:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6472,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"14921:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6476,"nodeType":"RevertStatement","src":"14914:48:18"}]}},{"expression":{"arguments":[{"id":6481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6460,"src":"14996:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6479,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:18","typeDescriptions":{}}},"id":6482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6464,"id":6483,"nodeType":"Return","src":"14982:20:18"}]},"documentation":{"id":6458,"nodeType":"StructuredDocumentation","src":"14515:276:18","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6485,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:18","nodeType":"FunctionDefinition","parameters":{"id":6461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6460,"mutability":"mutable","name":"value","nameLocation":"14822:5:18","nodeType":"VariableDeclaration","scope":6485,"src":"14814:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6459,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:18"},"returnParameters":{"id":6464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6485,"src":"14852:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6462,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:18","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:18"},"scope":7467,"src":"14796:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6512,"nodeType":"Block","src":"15360:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6488,"src":"15374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6495,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6494,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:18","memberName":"max","nodeType":"MemberAccess","src":"15382:16:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6506,"nodeType":"IfStatement","src":"15370:103:18","trueBody":{"id":6505,"nodeType":"Block","src":"15400:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6488,"src":"15456:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6500,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"15421:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6504,"nodeType":"RevertStatement","src":"15414:48:18"}]}},{"expression":{"arguments":[{"id":6509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6488,"src":"15496:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6507,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:18","typeDescriptions":{}}},"id":6510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6492,"id":6511,"nodeType":"Return","src":"15482:20:18"}]},"documentation":{"id":6486,"nodeType":"StructuredDocumentation","src":"15015:276:18","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6513,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:18","nodeType":"FunctionDefinition","parameters":{"id":6489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6488,"mutability":"mutable","name":"value","nameLocation":"15322:5:18","nodeType":"VariableDeclaration","scope":6513,"src":"15314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6487,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:18"},"returnParameters":{"id":6492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6513,"src":"15352:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6490,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:18"},"scope":7467,"src":"15296:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6540,"nodeType":"Block","src":"15860:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"15874:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6523,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6522,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:18","memberName":"max","nodeType":"MemberAccess","src":"15882:16:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6534,"nodeType":"IfStatement","src":"15870:103:18","trueBody":{"id":6533,"nodeType":"Block","src":"15900:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:18","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"15956:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6528,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"15921:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6532,"nodeType":"RevertStatement","src":"15914:48:18"}]}},{"expression":{"arguments":[{"id":6537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"15996:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6535,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:18","typeDescriptions":{}}},"id":6538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6520,"id":6539,"nodeType":"Return","src":"15982:20:18"}]},"documentation":{"id":6514,"nodeType":"StructuredDocumentation","src":"15515:276:18","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6541,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:18","nodeType":"FunctionDefinition","parameters":{"id":6517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6516,"mutability":"mutable","name":"value","nameLocation":"15822:5:18","nodeType":"VariableDeclaration","scope":6541,"src":"15814:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6515,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:18"},"returnParameters":{"id":6520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6541,"src":"15852:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6518,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:18"},"scope":7467,"src":"15796:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6568,"nodeType":"Block","src":"16360:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"16374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6551,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6550,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:18","memberName":"max","nodeType":"MemberAccess","src":"16382:16:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6562,"nodeType":"IfStatement","src":"16370:103:18","trueBody":{"id":6561,"nodeType":"Block","src":"16400:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"16456:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6556,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"16421:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6560,"nodeType":"RevertStatement","src":"16414:48:18"}]}},{"expression":{"arguments":[{"id":6565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"16496:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6563,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:18","typeDescriptions":{}}},"id":6566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6548,"id":6567,"nodeType":"Return","src":"16482:20:18"}]},"documentation":{"id":6542,"nodeType":"StructuredDocumentation","src":"16015:276:18","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6569,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:18","nodeType":"FunctionDefinition","parameters":{"id":6545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6544,"mutability":"mutable","name":"value","nameLocation":"16322:5:18","nodeType":"VariableDeclaration","scope":6569,"src":"16314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6543,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:18"},"returnParameters":{"id":6548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6569,"src":"16352:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6546,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:18"},"scope":7467,"src":"16296:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6596,"nodeType":"Block","src":"16854:146:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"16868:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6579,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6578,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:18","memberName":"max","nodeType":"MemberAccess","src":"16876:15:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6590,"nodeType":"IfStatement","src":"16864:101:18","trueBody":{"id":6589,"nodeType":"Block","src":"16893:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"16948:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6584,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"16914:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6588,"nodeType":"RevertStatement","src":"16907:47:18"}]}},{"expression":{"arguments":[{"id":6593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"16987:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6591,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:18","typeDescriptions":{}}},"id":6594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6576,"id":6595,"nodeType":"Return","src":"16974:19:18"}]},"documentation":{"id":6570,"nodeType":"StructuredDocumentation","src":"16515:272:18","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6597,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:18","nodeType":"FunctionDefinition","parameters":{"id":6573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6572,"mutability":"mutable","name":"value","nameLocation":"16817:5:18","nodeType":"VariableDeclaration","scope":6597,"src":"16809:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6571,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:18"},"returnParameters":{"id":6576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6597,"src":"16847:5:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6574,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:18"},"scope":7467,"src":"16792:208:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6619,"nodeType":"Block","src":"17236:128:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6605,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6600,"src":"17250:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6613,"nodeType":"IfStatement","src":"17246:81:18","trueBody":{"id":6612,"nodeType":"Block","src":"17261:66:18","statements":[{"errorCall":{"arguments":[{"id":6609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6600,"src":"17310:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6608,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5717,"src":"17282:27:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":6610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6611,"nodeType":"RevertStatement","src":"17275:41:18"}]}},{"expression":{"arguments":[{"id":6616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6600,"src":"17351:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6614,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:18","typeDescriptions":{}}},"id":6617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6604,"id":6618,"nodeType":"Return","src":"17336:21:18"}]},"documentation":{"id":6598,"nodeType":"StructuredDocumentation","src":"17006:160:18","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6620,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:18","nodeType":"FunctionDefinition","parameters":{"id":6601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6600,"mutability":"mutable","name":"value","nameLocation":"17197:5:18","nodeType":"VariableDeclaration","scope":6620,"src":"17190:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6599,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:18"},"returnParameters":{"id":6604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6620,"src":"17227:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6602,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:18"},"scope":7467,"src":"17171:193:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6645,"nodeType":"Block","src":"17761:150:18","statements":[{"expression":{"id":6633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6628,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"17771:10:18","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"17791:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6629,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:18","typeDescriptions":{}}},"id":6632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:18","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6634,"nodeType":"ExpressionStatement","src":"17771:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6635,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"17811:10:18","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"17825:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6644,"nodeType":"IfStatement","src":"17807:98:18","trueBody":{"id":6643,"nodeType":"Block","src":"17832:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:18","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"17888:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6638,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"17853:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6642,"nodeType":"RevertStatement","src":"17846:48:18"}]}}]},"documentation":{"id":6621,"nodeType":"StructuredDocumentation","src":"17370:312:18","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6646,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:18","nodeType":"FunctionDefinition","parameters":{"id":6624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6623,"mutability":"mutable","name":"value","nameLocation":"17712:5:18","nodeType":"VariableDeclaration","scope":6646,"src":"17705:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6622,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:18"},"returnParameters":{"id":6627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6626,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:18","nodeType":"VariableDeclaration","scope":6646,"src":"17742:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6625,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:18","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:18"},"scope":7467,"src":"17687:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6671,"nodeType":"Block","src":"18308:150:18","statements":[{"expression":{"id":6659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6654,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"18318:10:18","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"18338:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6655,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:18","typeDescriptions":{}}},"id":6658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:18","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6660,"nodeType":"ExpressionStatement","src":"18318:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6661,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"18358:10:18","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"18372:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6670,"nodeType":"IfStatement","src":"18354:98:18","trueBody":{"id":6669,"nodeType":"Block","src":"18379:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:18","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"18435:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6664,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"18400:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6668,"nodeType":"RevertStatement","src":"18393:48:18"}]}}]},"documentation":{"id":6647,"nodeType":"StructuredDocumentation","src":"17917:312:18","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6672,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:18","nodeType":"FunctionDefinition","parameters":{"id":6650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6649,"mutability":"mutable","name":"value","nameLocation":"18259:5:18","nodeType":"VariableDeclaration","scope":6672,"src":"18252:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6648,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:18"},"returnParameters":{"id":6653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6652,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:18","nodeType":"VariableDeclaration","scope":6672,"src":"18289:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6651,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:18","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:18"},"scope":7467,"src":"18234:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6697,"nodeType":"Block","src":"18855:150:18","statements":[{"expression":{"id":6685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6680,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"18865:10:18","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6675,"src":"18885:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6681,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:18","typeDescriptions":{}}},"id":6684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:18","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6686,"nodeType":"ExpressionStatement","src":"18865:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6687,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"18905:10:18","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6675,"src":"18919:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6696,"nodeType":"IfStatement","src":"18901:98:18","trueBody":{"id":6695,"nodeType":"Block","src":"18926:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:18","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6675,"src":"18982:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6690,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"18947:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6694,"nodeType":"RevertStatement","src":"18940:48:18"}]}}]},"documentation":{"id":6673,"nodeType":"StructuredDocumentation","src":"18464:312:18","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6698,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:18","nodeType":"FunctionDefinition","parameters":{"id":6676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6675,"mutability":"mutable","name":"value","nameLocation":"18806:5:18","nodeType":"VariableDeclaration","scope":6698,"src":"18799:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6674,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:18"},"returnParameters":{"id":6679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6678,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:18","nodeType":"VariableDeclaration","scope":6698,"src":"18836:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6677,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:18","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:18"},"scope":7467,"src":"18781:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6723,"nodeType":"Block","src":"19402:150:18","statements":[{"expression":{"id":6711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6706,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6704,"src":"19412:10:18","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6701,"src":"19432:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6707,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:18","typeDescriptions":{}}},"id":6710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:18","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6712,"nodeType":"ExpressionStatement","src":"19412:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6713,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6704,"src":"19452:10:18","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6701,"src":"19466:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6722,"nodeType":"IfStatement","src":"19448:98:18","trueBody":{"id":6721,"nodeType":"Block","src":"19473:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:18","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6701,"src":"19529:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6716,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"19494:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6720,"nodeType":"RevertStatement","src":"19487:48:18"}]}}]},"documentation":{"id":6699,"nodeType":"StructuredDocumentation","src":"19011:312:18","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6724,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:18","nodeType":"FunctionDefinition","parameters":{"id":6702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6701,"mutability":"mutable","name":"value","nameLocation":"19353:5:18","nodeType":"VariableDeclaration","scope":6724,"src":"19346:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6700,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:18"},"returnParameters":{"id":6705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6704,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:18","nodeType":"VariableDeclaration","scope":6724,"src":"19383:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6703,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:18","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:18"},"scope":7467,"src":"19328:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6749,"nodeType":"Block","src":"19949:150:18","statements":[{"expression":{"id":6737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6732,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6730,"src":"19959:10:18","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6727,"src":"19979:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6733,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:18","typeDescriptions":{}}},"id":6736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:18","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6738,"nodeType":"ExpressionStatement","src":"19959:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6739,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6730,"src":"19999:10:18","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6727,"src":"20013:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6748,"nodeType":"IfStatement","src":"19995:98:18","trueBody":{"id":6747,"nodeType":"Block","src":"20020:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:18","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6727,"src":"20076:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6742,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"20041:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6746,"nodeType":"RevertStatement","src":"20034:48:18"}]}}]},"documentation":{"id":6725,"nodeType":"StructuredDocumentation","src":"19558:312:18","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6750,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:18","nodeType":"FunctionDefinition","parameters":{"id":6728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6727,"mutability":"mutable","name":"value","nameLocation":"19900:5:18","nodeType":"VariableDeclaration","scope":6750,"src":"19893:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6726,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:18"},"returnParameters":{"id":6731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6730,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:18","nodeType":"VariableDeclaration","scope":6750,"src":"19930:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6729,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:18","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:18"},"scope":7467,"src":"19875:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6775,"nodeType":"Block","src":"20496:150:18","statements":[{"expression":{"id":6763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6758,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6756,"src":"20506:10:18","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6753,"src":"20526:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6759,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:18","typeDescriptions":{}}},"id":6762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:18","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6764,"nodeType":"ExpressionStatement","src":"20506:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6765,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6756,"src":"20546:10:18","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6753,"src":"20560:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6774,"nodeType":"IfStatement","src":"20542:98:18","trueBody":{"id":6773,"nodeType":"Block","src":"20567:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:18","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6753,"src":"20623:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6768,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"20588:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6772,"nodeType":"RevertStatement","src":"20581:48:18"}]}}]},"documentation":{"id":6751,"nodeType":"StructuredDocumentation","src":"20105:312:18","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6776,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:18","nodeType":"FunctionDefinition","parameters":{"id":6754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6753,"mutability":"mutable","name":"value","nameLocation":"20447:5:18","nodeType":"VariableDeclaration","scope":6776,"src":"20440:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6752,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:18"},"returnParameters":{"id":6757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6756,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:18","nodeType":"VariableDeclaration","scope":6776,"src":"20477:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6755,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:18","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:18"},"scope":7467,"src":"20422:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6801,"nodeType":"Block","src":"21043:150:18","statements":[{"expression":{"id":6789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6784,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6782,"src":"21053:10:18","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"21073:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6785,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:18","typeDescriptions":{}}},"id":6788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:18","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6790,"nodeType":"ExpressionStatement","src":"21053:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6791,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6782,"src":"21093:10:18","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"21107:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6800,"nodeType":"IfStatement","src":"21089:98:18","trueBody":{"id":6799,"nodeType":"Block","src":"21114:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:18","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"21170:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6794,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"21135:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6798,"nodeType":"RevertStatement","src":"21128:48:18"}]}}]},"documentation":{"id":6777,"nodeType":"StructuredDocumentation","src":"20652:312:18","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6802,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:18","nodeType":"FunctionDefinition","parameters":{"id":6780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6779,"mutability":"mutable","name":"value","nameLocation":"20994:5:18","nodeType":"VariableDeclaration","scope":6802,"src":"20987:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6778,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:18"},"returnParameters":{"id":6783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6782,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:18","nodeType":"VariableDeclaration","scope":6802,"src":"21024:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6781,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:18","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:18"},"scope":7467,"src":"20969:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6827,"nodeType":"Block","src":"21590:150:18","statements":[{"expression":{"id":6815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6810,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"21600:10:18","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6805,"src":"21620:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6811,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:18","typeDescriptions":{}}},"id":6814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:18","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6816,"nodeType":"ExpressionStatement","src":"21600:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6817,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"21640:10:18","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6805,"src":"21654:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6826,"nodeType":"IfStatement","src":"21636:98:18","trueBody":{"id":6825,"nodeType":"Block","src":"21661:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:18","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6805,"src":"21717:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6820,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"21682:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6824,"nodeType":"RevertStatement","src":"21675:48:18"}]}}]},"documentation":{"id":6803,"nodeType":"StructuredDocumentation","src":"21199:312:18","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6828,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:18","nodeType":"FunctionDefinition","parameters":{"id":6806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6805,"mutability":"mutable","name":"value","nameLocation":"21541:5:18","nodeType":"VariableDeclaration","scope":6828,"src":"21534:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6804,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:18"},"returnParameters":{"id":6809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6808,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:18","nodeType":"VariableDeclaration","scope":6828,"src":"21571:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6807,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:18","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:18"},"scope":7467,"src":"21516:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6853,"nodeType":"Block","src":"22137:150:18","statements":[{"expression":{"id":6841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6836,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6834,"src":"22147:10:18","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"22167:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6837,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:18","typeDescriptions":{}}},"id":6840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:18","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6842,"nodeType":"ExpressionStatement","src":"22147:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6843,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6834,"src":"22187:10:18","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"22201:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6852,"nodeType":"IfStatement","src":"22183:98:18","trueBody":{"id":6851,"nodeType":"Block","src":"22208:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:18","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"22264:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6846,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"22229:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6850,"nodeType":"RevertStatement","src":"22222:48:18"}]}}]},"documentation":{"id":6829,"nodeType":"StructuredDocumentation","src":"21746:312:18","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6854,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:18","nodeType":"FunctionDefinition","parameters":{"id":6832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6831,"mutability":"mutable","name":"value","nameLocation":"22088:5:18","nodeType":"VariableDeclaration","scope":6854,"src":"22081:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6830,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:18"},"returnParameters":{"id":6835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6834,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:18","nodeType":"VariableDeclaration","scope":6854,"src":"22118:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6833,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:18","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:18"},"scope":7467,"src":"22063:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6879,"nodeType":"Block","src":"22684:150:18","statements":[{"expression":{"id":6867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6862,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6860,"src":"22694:10:18","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6857,"src":"22714:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6863,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:18","typeDescriptions":{}}},"id":6866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:18","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6868,"nodeType":"ExpressionStatement","src":"22694:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6869,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6860,"src":"22734:10:18","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6857,"src":"22748:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6878,"nodeType":"IfStatement","src":"22730:98:18","trueBody":{"id":6877,"nodeType":"Block","src":"22755:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:18","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6857,"src":"22811:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6872,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"22776:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6876,"nodeType":"RevertStatement","src":"22769:48:18"}]}}]},"documentation":{"id":6855,"nodeType":"StructuredDocumentation","src":"22293:312:18","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6880,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:18","nodeType":"FunctionDefinition","parameters":{"id":6858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6857,"mutability":"mutable","name":"value","nameLocation":"22635:5:18","nodeType":"VariableDeclaration","scope":6880,"src":"22628:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6856,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:18"},"returnParameters":{"id":6861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6860,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:18","nodeType":"VariableDeclaration","scope":6880,"src":"22665:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6859,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:18","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:18"},"scope":7467,"src":"22610:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6905,"nodeType":"Block","src":"23231:150:18","statements":[{"expression":{"id":6893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6888,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6886,"src":"23241:10:18","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6883,"src":"23261:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6889,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:18","typeDescriptions":{}}},"id":6892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:18","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6894,"nodeType":"ExpressionStatement","src":"23241:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6895,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6886,"src":"23281:10:18","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6883,"src":"23295:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6904,"nodeType":"IfStatement","src":"23277:98:18","trueBody":{"id":6903,"nodeType":"Block","src":"23302:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:18","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6883,"src":"23358:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6898,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"23323:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6902,"nodeType":"RevertStatement","src":"23316:48:18"}]}}]},"documentation":{"id":6881,"nodeType":"StructuredDocumentation","src":"22840:312:18","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6906,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:18","nodeType":"FunctionDefinition","parameters":{"id":6884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6883,"mutability":"mutable","name":"value","nameLocation":"23182:5:18","nodeType":"VariableDeclaration","scope":6906,"src":"23175:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6882,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:18"},"returnParameters":{"id":6887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6886,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:18","nodeType":"VariableDeclaration","scope":6906,"src":"23212:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6885,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:18","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:18"},"scope":7467,"src":"23157:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6931,"nodeType":"Block","src":"23778:150:18","statements":[{"expression":{"id":6919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6914,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6912,"src":"23788:10:18","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6909,"src":"23808:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6915,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:18","typeDescriptions":{}}},"id":6918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:18","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6920,"nodeType":"ExpressionStatement","src":"23788:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6921,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6912,"src":"23828:10:18","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6909,"src":"23842:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6930,"nodeType":"IfStatement","src":"23824:98:18","trueBody":{"id":6929,"nodeType":"Block","src":"23849:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:18","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6909,"src":"23905:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6924,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"23870:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6928,"nodeType":"RevertStatement","src":"23863:48:18"}]}}]},"documentation":{"id":6907,"nodeType":"StructuredDocumentation","src":"23387:312:18","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6932,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:18","nodeType":"FunctionDefinition","parameters":{"id":6910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6909,"mutability":"mutable","name":"value","nameLocation":"23729:5:18","nodeType":"VariableDeclaration","scope":6932,"src":"23722:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6908,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:18"},"returnParameters":{"id":6913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6912,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:18","nodeType":"VariableDeclaration","scope":6932,"src":"23759:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6911,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:18","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:18"},"scope":7467,"src":"23704:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6957,"nodeType":"Block","src":"24325:150:18","statements":[{"expression":{"id":6945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6940,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6938,"src":"24335:10:18","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6935,"src":"24355:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6941,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:18","typeDescriptions":{}}},"id":6944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:18","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6946,"nodeType":"ExpressionStatement","src":"24335:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6947,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6938,"src":"24375:10:18","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6935,"src":"24389:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6956,"nodeType":"IfStatement","src":"24371:98:18","trueBody":{"id":6955,"nodeType":"Block","src":"24396:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:18","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6935,"src":"24452:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6950,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"24417:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6954,"nodeType":"RevertStatement","src":"24410:48:18"}]}}]},"documentation":{"id":6933,"nodeType":"StructuredDocumentation","src":"23934:312:18","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6958,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:18","nodeType":"FunctionDefinition","parameters":{"id":6936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6935,"mutability":"mutable","name":"value","nameLocation":"24276:5:18","nodeType":"VariableDeclaration","scope":6958,"src":"24269:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6934,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:18"},"returnParameters":{"id":6939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6938,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:18","nodeType":"VariableDeclaration","scope":6958,"src":"24306:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6937,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:18","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:18"},"scope":7467,"src":"24251:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6983,"nodeType":"Block","src":"24872:150:18","statements":[{"expression":{"id":6971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6966,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6964,"src":"24882:10:18","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6961,"src":"24902:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6967,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:18","typeDescriptions":{}}},"id":6970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:18","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6972,"nodeType":"ExpressionStatement","src":"24882:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6973,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6964,"src":"24922:10:18","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6961,"src":"24936:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6982,"nodeType":"IfStatement","src":"24918:98:18","trueBody":{"id":6981,"nodeType":"Block","src":"24943:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:18","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6961,"src":"24999:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6976,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"24964:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6980,"nodeType":"RevertStatement","src":"24957:48:18"}]}}]},"documentation":{"id":6959,"nodeType":"StructuredDocumentation","src":"24481:312:18","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6984,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:18","nodeType":"FunctionDefinition","parameters":{"id":6962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6961,"mutability":"mutable","name":"value","nameLocation":"24823:5:18","nodeType":"VariableDeclaration","scope":6984,"src":"24816:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6960,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:18"},"returnParameters":{"id":6965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6964,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:18","nodeType":"VariableDeclaration","scope":6984,"src":"24853:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6963,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:18","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:18"},"scope":7467,"src":"24798:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7009,"nodeType":"Block","src":"25419:150:18","statements":[{"expression":{"id":6997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6992,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6990,"src":"25429:10:18","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6987,"src":"25449:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6993,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:18","typeDescriptions":{}}},"id":6996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:18","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6998,"nodeType":"ExpressionStatement","src":"25429:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6999,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6990,"src":"25469:10:18","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6987,"src":"25483:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7008,"nodeType":"IfStatement","src":"25465:98:18","trueBody":{"id":7007,"nodeType":"Block","src":"25490:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:18","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6987,"src":"25546:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7002,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"25511:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7006,"nodeType":"RevertStatement","src":"25504:48:18"}]}}]},"documentation":{"id":6985,"nodeType":"StructuredDocumentation","src":"25028:312:18","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7010,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:18","nodeType":"FunctionDefinition","parameters":{"id":6988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6987,"mutability":"mutable","name":"value","nameLocation":"25370:5:18","nodeType":"VariableDeclaration","scope":7010,"src":"25363:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6986,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:18"},"returnParameters":{"id":6991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6990,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:18","nodeType":"VariableDeclaration","scope":7010,"src":"25400:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6989,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:18","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:18"},"scope":7467,"src":"25345:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7035,"nodeType":"Block","src":"25966:150:18","statements":[{"expression":{"id":7023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7018,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7016,"src":"25976:10:18","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7013,"src":"25996:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":7019,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:18","typeDescriptions":{}}},"id":7022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:18","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7024,"nodeType":"ExpressionStatement","src":"25976:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7025,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7016,"src":"26016:10:18","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7013,"src":"26030:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7034,"nodeType":"IfStatement","src":"26012:98:18","trueBody":{"id":7033,"nodeType":"Block","src":"26037:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7013,"src":"26093:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7028,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"26058:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7032,"nodeType":"RevertStatement","src":"26051:48:18"}]}}]},"documentation":{"id":7011,"nodeType":"StructuredDocumentation","src":"25575:312:18","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7036,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:18","nodeType":"FunctionDefinition","parameters":{"id":7014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7013,"mutability":"mutable","name":"value","nameLocation":"25917:5:18","nodeType":"VariableDeclaration","scope":7036,"src":"25910:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7012,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:18"},"returnParameters":{"id":7017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7016,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:18","nodeType":"VariableDeclaration","scope":7036,"src":"25947:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7015,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:18","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:18"},"scope":7467,"src":"25892:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7061,"nodeType":"Block","src":"26513:150:18","statements":[{"expression":{"id":7049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7044,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7042,"src":"26523:10:18","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7039,"src":"26543:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":7045,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:18","typeDescriptions":{}}},"id":7048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:18","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":7050,"nodeType":"ExpressionStatement","src":"26523:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7051,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7042,"src":"26563:10:18","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7039,"src":"26577:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7060,"nodeType":"IfStatement","src":"26559:98:18","trueBody":{"id":7059,"nodeType":"Block","src":"26584:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:18","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7039,"src":"26640:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7054,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"26605:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7058,"nodeType":"RevertStatement","src":"26598:48:18"}]}}]},"documentation":{"id":7037,"nodeType":"StructuredDocumentation","src":"26122:312:18","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7062,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:18","nodeType":"FunctionDefinition","parameters":{"id":7040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7039,"mutability":"mutable","name":"value","nameLocation":"26464:5:18","nodeType":"VariableDeclaration","scope":7062,"src":"26457:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7038,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:18"},"returnParameters":{"id":7043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7042,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:18","nodeType":"VariableDeclaration","scope":7062,"src":"26494:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":7041,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:18","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:18"},"scope":7467,"src":"26439:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7087,"nodeType":"Block","src":"27060:150:18","statements":[{"expression":{"id":7075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7070,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7068,"src":"27070:10:18","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7065,"src":"27090:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":7071,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:18","typeDescriptions":{}}},"id":7074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:18","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":7076,"nodeType":"ExpressionStatement","src":"27070:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7077,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7068,"src":"27110:10:18","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7065,"src":"27124:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7086,"nodeType":"IfStatement","src":"27106:98:18","trueBody":{"id":7085,"nodeType":"Block","src":"27131:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:18","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7065,"src":"27187:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7080,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"27152:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7084,"nodeType":"RevertStatement","src":"27145:48:18"}]}}]},"documentation":{"id":7063,"nodeType":"StructuredDocumentation","src":"26669:312:18","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7088,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:18","nodeType":"FunctionDefinition","parameters":{"id":7066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7065,"mutability":"mutable","name":"value","nameLocation":"27011:5:18","nodeType":"VariableDeclaration","scope":7088,"src":"27004:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7064,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:18"},"returnParameters":{"id":7069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7068,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:18","nodeType":"VariableDeclaration","scope":7088,"src":"27041:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":7067,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:18","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:18"},"scope":7467,"src":"26986:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7113,"nodeType":"Block","src":"27607:150:18","statements":[{"expression":{"id":7101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7096,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7094,"src":"27617:10:18","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7091,"src":"27637:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":7097,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:18","typeDescriptions":{}}},"id":7100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:18","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":7102,"nodeType":"ExpressionStatement","src":"27617:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7103,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7094,"src":"27657:10:18","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7091,"src":"27671:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7112,"nodeType":"IfStatement","src":"27653:98:18","trueBody":{"id":7111,"nodeType":"Block","src":"27678:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:18","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7091,"src":"27734:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7106,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"27699:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7110,"nodeType":"RevertStatement","src":"27692:48:18"}]}}]},"documentation":{"id":7089,"nodeType":"StructuredDocumentation","src":"27216:312:18","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7114,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:18","nodeType":"FunctionDefinition","parameters":{"id":7092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7091,"mutability":"mutable","name":"value","nameLocation":"27558:5:18","nodeType":"VariableDeclaration","scope":7114,"src":"27551:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7090,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:18"},"returnParameters":{"id":7095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7094,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:18","nodeType":"VariableDeclaration","scope":7114,"src":"27588:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":7093,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:18","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:18"},"scope":7467,"src":"27533:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7139,"nodeType":"Block","src":"28147:148:18","statements":[{"expression":{"id":7127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7122,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7120,"src":"28157:10:18","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7117,"src":"28176:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7123,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:18","typeDescriptions":{}}},"id":7126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:18","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7128,"nodeType":"ExpressionStatement","src":"28157:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7129,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7120,"src":"28196:10:18","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7117,"src":"28210:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7138,"nodeType":"IfStatement","src":"28192:97:18","trueBody":{"id":7137,"nodeType":"Block","src":"28217:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:18","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7117,"src":"28272:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7132,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"28238:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7136,"nodeType":"RevertStatement","src":"28231:47:18"}]}}]},"documentation":{"id":7115,"nodeType":"StructuredDocumentation","src":"27763:307:18","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7140,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:18","nodeType":"FunctionDefinition","parameters":{"id":7118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7117,"mutability":"mutable","name":"value","nameLocation":"28099:5:18","nodeType":"VariableDeclaration","scope":7140,"src":"28092:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7116,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:18"},"returnParameters":{"id":7121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7120,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:18","nodeType":"VariableDeclaration","scope":7140,"src":"28129:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7119,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:18","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:18"},"scope":7467,"src":"28075:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7165,"nodeType":"Block","src":"28685:148:18","statements":[{"expression":{"id":7153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7148,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7146,"src":"28695:10:18","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7143,"src":"28714:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7149,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:18","typeDescriptions":{}}},"id":7152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:18","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7154,"nodeType":"ExpressionStatement","src":"28695:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7155,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7146,"src":"28734:10:18","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7143,"src":"28748:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7164,"nodeType":"IfStatement","src":"28730:97:18","trueBody":{"id":7163,"nodeType":"Block","src":"28755:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:18","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7143,"src":"28810:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7158,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"28776:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7162,"nodeType":"RevertStatement","src":"28769:47:18"}]}}]},"documentation":{"id":7141,"nodeType":"StructuredDocumentation","src":"28301:307:18","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7166,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:18","nodeType":"FunctionDefinition","parameters":{"id":7144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7143,"mutability":"mutable","name":"value","nameLocation":"28637:5:18","nodeType":"VariableDeclaration","scope":7166,"src":"28630:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7142,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:18"},"returnParameters":{"id":7147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7146,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:18","nodeType":"VariableDeclaration","scope":7166,"src":"28667:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7145,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:18","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:18"},"scope":7467,"src":"28613:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7191,"nodeType":"Block","src":"29223:148:18","statements":[{"expression":{"id":7179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7174,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7172,"src":"29233:10:18","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7169,"src":"29252:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7175,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:18","typeDescriptions":{}}},"id":7178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:18","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7180,"nodeType":"ExpressionStatement","src":"29233:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7181,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7172,"src":"29272:10:18","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7169,"src":"29286:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7190,"nodeType":"IfStatement","src":"29268:97:18","trueBody":{"id":7189,"nodeType":"Block","src":"29293:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:18","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7169,"src":"29348:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7184,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"29314:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7188,"nodeType":"RevertStatement","src":"29307:47:18"}]}}]},"documentation":{"id":7167,"nodeType":"StructuredDocumentation","src":"28839:307:18","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7192,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:18","nodeType":"FunctionDefinition","parameters":{"id":7170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7169,"mutability":"mutable","name":"value","nameLocation":"29175:5:18","nodeType":"VariableDeclaration","scope":7192,"src":"29168:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7168,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:18"},"returnParameters":{"id":7173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7172,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:18","nodeType":"VariableDeclaration","scope":7192,"src":"29205:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7171,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:18","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:18"},"scope":7467,"src":"29151:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7217,"nodeType":"Block","src":"29761:148:18","statements":[{"expression":{"id":7205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7200,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7198,"src":"29771:10:18","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7195,"src":"29790:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":7201,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:18","typeDescriptions":{}}},"id":7204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:18","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":7206,"nodeType":"ExpressionStatement","src":"29771:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7207,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7198,"src":"29810:10:18","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7195,"src":"29824:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7216,"nodeType":"IfStatement","src":"29806:97:18","trueBody":{"id":7215,"nodeType":"Block","src":"29831:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:18","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7195,"src":"29886:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7210,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"29852:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7214,"nodeType":"RevertStatement","src":"29845:47:18"}]}}]},"documentation":{"id":7193,"nodeType":"StructuredDocumentation","src":"29377:307:18","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7218,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:18","nodeType":"FunctionDefinition","parameters":{"id":7196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7195,"mutability":"mutable","name":"value","nameLocation":"29713:5:18","nodeType":"VariableDeclaration","scope":7218,"src":"29706:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7194,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:18"},"returnParameters":{"id":7199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7198,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:18","nodeType":"VariableDeclaration","scope":7218,"src":"29743:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":7197,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:18","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:18"},"scope":7467,"src":"29689:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7243,"nodeType":"Block","src":"30299:148:18","statements":[{"expression":{"id":7231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7226,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7224,"src":"30309:10:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7221,"src":"30328:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":7227,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:18","typeDescriptions":{}}},"id":7230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":7232,"nodeType":"ExpressionStatement","src":"30309:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7233,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7224,"src":"30348:10:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7221,"src":"30362:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7242,"nodeType":"IfStatement","src":"30344:97:18","trueBody":{"id":7241,"nodeType":"Block","src":"30369:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7221,"src":"30424:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7236,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"30390:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7240,"nodeType":"RevertStatement","src":"30383:47:18"}]}}]},"documentation":{"id":7219,"nodeType":"StructuredDocumentation","src":"29915:307:18","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7244,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:18","nodeType":"FunctionDefinition","parameters":{"id":7222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7221,"mutability":"mutable","name":"value","nameLocation":"30251:5:18","nodeType":"VariableDeclaration","scope":7244,"src":"30244:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7220,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:18"},"returnParameters":{"id":7225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7224,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:18","nodeType":"VariableDeclaration","scope":7244,"src":"30281:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7223,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:18"},"scope":7467,"src":"30227:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7269,"nodeType":"Block","src":"30837:148:18","statements":[{"expression":{"id":7257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7252,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7250,"src":"30847:10:18","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7247,"src":"30866:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":7253,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:18","typeDescriptions":{}}},"id":7256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:18","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":7258,"nodeType":"ExpressionStatement","src":"30847:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7259,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7250,"src":"30886:10:18","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7247,"src":"30900:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7268,"nodeType":"IfStatement","src":"30882:97:18","trueBody":{"id":7267,"nodeType":"Block","src":"30907:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:18","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7247,"src":"30962:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7262,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"30928:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7266,"nodeType":"RevertStatement","src":"30921:47:18"}]}}]},"documentation":{"id":7245,"nodeType":"StructuredDocumentation","src":"30453:307:18","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7270,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:18","nodeType":"FunctionDefinition","parameters":{"id":7248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7247,"mutability":"mutable","name":"value","nameLocation":"30789:5:18","nodeType":"VariableDeclaration","scope":7270,"src":"30782:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7246,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:18"},"returnParameters":{"id":7251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7250,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:18","nodeType":"VariableDeclaration","scope":7270,"src":"30819:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":7249,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:18","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:18"},"scope":7467,"src":"30765:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7295,"nodeType":"Block","src":"31375:148:18","statements":[{"expression":{"id":7283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7278,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7276,"src":"31385:10:18","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7273,"src":"31404:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7279,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:18","typeDescriptions":{}}},"id":7282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:18","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7284,"nodeType":"ExpressionStatement","src":"31385:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7285,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7276,"src":"31424:10:18","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7273,"src":"31438:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7294,"nodeType":"IfStatement","src":"31420:97:18","trueBody":{"id":7293,"nodeType":"Block","src":"31445:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:18","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7273,"src":"31500:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7288,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"31466:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7292,"nodeType":"RevertStatement","src":"31459:47:18"}]}}]},"documentation":{"id":7271,"nodeType":"StructuredDocumentation","src":"30991:307:18","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7296,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:18","nodeType":"FunctionDefinition","parameters":{"id":7274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7273,"mutability":"mutable","name":"value","nameLocation":"31327:5:18","nodeType":"VariableDeclaration","scope":7296,"src":"31320:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7272,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:18"},"returnParameters":{"id":7277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7276,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:18","nodeType":"VariableDeclaration","scope":7296,"src":"31357:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7275,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:18","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:18"},"scope":7467,"src":"31303:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7321,"nodeType":"Block","src":"31913:148:18","statements":[{"expression":{"id":7309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7304,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7302,"src":"31923:10:18","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7299,"src":"31942:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":7305,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:18","typeDescriptions":{}}},"id":7308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:18","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":7310,"nodeType":"ExpressionStatement","src":"31923:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7311,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7302,"src":"31962:10:18","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7299,"src":"31976:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7320,"nodeType":"IfStatement","src":"31958:97:18","trueBody":{"id":7319,"nodeType":"Block","src":"31983:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:18","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7299,"src":"32038:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7314,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"32004:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7318,"nodeType":"RevertStatement","src":"31997:47:18"}]}}]},"documentation":{"id":7297,"nodeType":"StructuredDocumentation","src":"31529:307:18","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7322,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:18","nodeType":"FunctionDefinition","parameters":{"id":7300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7299,"mutability":"mutable","name":"value","nameLocation":"31865:5:18","nodeType":"VariableDeclaration","scope":7322,"src":"31858:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7298,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:18"},"returnParameters":{"id":7303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7302,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:18","nodeType":"VariableDeclaration","scope":7322,"src":"31895:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":7301,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:18","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:18"},"scope":7467,"src":"31841:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7347,"nodeType":"Block","src":"32451:148:18","statements":[{"expression":{"id":7335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7330,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7328,"src":"32461:10:18","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7325,"src":"32480:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7331,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:18","typeDescriptions":{}}},"id":7334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:18","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7336,"nodeType":"ExpressionStatement","src":"32461:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7337,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7328,"src":"32500:10:18","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7325,"src":"32514:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7346,"nodeType":"IfStatement","src":"32496:97:18","trueBody":{"id":7345,"nodeType":"Block","src":"32521:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7325,"src":"32576:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7340,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"32542:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7344,"nodeType":"RevertStatement","src":"32535:47:18"}]}}]},"documentation":{"id":7323,"nodeType":"StructuredDocumentation","src":"32067:307:18","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7348,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:18","nodeType":"FunctionDefinition","parameters":{"id":7326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7325,"mutability":"mutable","name":"value","nameLocation":"32403:5:18","nodeType":"VariableDeclaration","scope":7348,"src":"32396:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7324,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:18"},"returnParameters":{"id":7329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7328,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:18","nodeType":"VariableDeclaration","scope":7348,"src":"32433:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":7327,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:18","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:18"},"scope":7467,"src":"32379:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7373,"nodeType":"Block","src":"32989:148:18","statements":[{"expression":{"id":7361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7356,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7354,"src":"32999:10:18","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7351,"src":"33018:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7357,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:18","typeDescriptions":{}}},"id":7360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:18","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7362,"nodeType":"ExpressionStatement","src":"32999:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7363,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7354,"src":"33038:10:18","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7351,"src":"33052:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7372,"nodeType":"IfStatement","src":"33034:97:18","trueBody":{"id":7371,"nodeType":"Block","src":"33059:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:18","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7351,"src":"33114:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7366,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"33080:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7370,"nodeType":"RevertStatement","src":"33073:47:18"}]}}]},"documentation":{"id":7349,"nodeType":"StructuredDocumentation","src":"32605:307:18","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7374,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:18","nodeType":"FunctionDefinition","parameters":{"id":7352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7351,"mutability":"mutable","name":"value","nameLocation":"32941:5:18","nodeType":"VariableDeclaration","scope":7374,"src":"32934:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7350,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:18"},"returnParameters":{"id":7355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7354,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:18","nodeType":"VariableDeclaration","scope":7374,"src":"32971:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7353,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:18","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:18"},"scope":7467,"src":"32917:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7399,"nodeType":"Block","src":"33527:148:18","statements":[{"expression":{"id":7387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7382,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7380,"src":"33537:10:18","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7377,"src":"33556:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":7383,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:18","typeDescriptions":{}}},"id":7386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:18","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":7388,"nodeType":"ExpressionStatement","src":"33537:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7389,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7380,"src":"33576:10:18","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7377,"src":"33590:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7398,"nodeType":"IfStatement","src":"33572:97:18","trueBody":{"id":7397,"nodeType":"Block","src":"33597:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7377,"src":"33652:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7392,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"33618:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7396,"nodeType":"RevertStatement","src":"33611:47:18"}]}}]},"documentation":{"id":7375,"nodeType":"StructuredDocumentation","src":"33143:307:18","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7400,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:18","nodeType":"FunctionDefinition","parameters":{"id":7378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7377,"mutability":"mutable","name":"value","nameLocation":"33479:5:18","nodeType":"VariableDeclaration","scope":7400,"src":"33472:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7376,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:18"},"returnParameters":{"id":7381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7380,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:18","nodeType":"VariableDeclaration","scope":7400,"src":"33509:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":7379,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:18","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:18"},"scope":7467,"src":"33455:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7425,"nodeType":"Block","src":"34058:146:18","statements":[{"expression":{"id":7413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7408,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7406,"src":"34068:10:18","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7403,"src":"34086:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":7409,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:18","typeDescriptions":{}}},"id":7412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:18","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7414,"nodeType":"ExpressionStatement","src":"34068:24:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7415,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7406,"src":"34106:10:18","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7403,"src":"34120:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7424,"nodeType":"IfStatement","src":"34102:96:18","trueBody":{"id":7423,"nodeType":"Block","src":"34127:71:18","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7403,"src":"34181:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7418,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"34148:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7422,"nodeType":"RevertStatement","src":"34141:46:18"}]}}]},"documentation":{"id":7401,"nodeType":"StructuredDocumentation","src":"33681:302:18","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7426,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:18","nodeType":"FunctionDefinition","parameters":{"id":7404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7403,"mutability":"mutable","name":"value","nameLocation":"34011:5:18","nodeType":"VariableDeclaration","scope":7426,"src":"34004:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7402,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:18"},"returnParameters":{"id":7407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7406,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:18","nodeType":"VariableDeclaration","scope":7426,"src":"34041:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7405,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:18","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:18"},"scope":7467,"src":"33988:216:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7455,"nodeType":"Block","src":"34444:250:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"34557:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":7439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7438,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":7437,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:18","memberName":"max","nodeType":"MemberAccess","src":"34573:16:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7435,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:18","typeDescriptions":{}}},"id":7442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7449,"nodeType":"IfStatement","src":"34553:105:18","trueBody":{"id":7448,"nodeType":"Block","src":"34592:66:18","statements":[{"errorCall":{"arguments":[{"id":7445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"34641:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7444,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5729,"src":"34613:27:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7447,"nodeType":"RevertStatement","src":"34606:41:18"}]}},{"expression":{"arguments":[{"id":7452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"34681:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7450,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:18","typeDescriptions":{}}},"id":7453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7433,"id":7454,"nodeType":"Return","src":"34667:20:18"}]},"documentation":{"id":7427,"nodeType":"StructuredDocumentation","src":"34210:165:18","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":7456,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:18","nodeType":"FunctionDefinition","parameters":{"id":7430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7429,"mutability":"mutable","name":"value","nameLocation":"34406:5:18","nodeType":"VariableDeclaration","scope":7456,"src":"34398:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7428,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:18"},"returnParameters":{"id":7433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7456,"src":"34436:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7431,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:18"},"scope":7467,"src":"34380:314:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7465,"nodeType":"Block","src":"34853:87:18","statements":[{"AST":{"nativeSrc":"34888:46:18","nodeType":"YulBlock","src":"34888:46:18","statements":[{"nativeSrc":"34902:22:18","nodeType":"YulAssignment","src":"34902:22:18","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:18","nodeType":"YulIdentifier","src":"34921:1:18"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:18","nodeType":"YulIdentifier","src":"34914:6:18"},"nativeSrc":"34914:9:18","nodeType":"YulFunctionCall","src":"34914:9:18"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:18","nodeType":"YulIdentifier","src":"34907:6:18"},"nativeSrc":"34907:17:18","nodeType":"YulFunctionCall","src":"34907:17:18"},"variableNames":[{"name":"u","nativeSrc":"34902:1:18","nodeType":"YulIdentifier","src":"34902:1:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7459,"isOffset":false,"isSlot":false,"src":"34921:1:18","valueSize":1},{"declaration":7462,"isOffset":false,"isSlot":false,"src":"34902:1:18","valueSize":1}],"flags":["memory-safe"],"id":7464,"nodeType":"InlineAssembly","src":"34863:71:18"}]},"documentation":{"id":7457,"nodeType":"StructuredDocumentation","src":"34700:90:18","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":7466,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:18","nodeType":"FunctionDefinition","parameters":{"id":7460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7459,"mutability":"mutable","name":"b","nameLocation":"34816:1:18","nodeType":"VariableDeclaration","scope":7466,"src":"34811:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7458,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:18"},"returnParameters":{"id":7463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7462,"mutability":"mutable","name":"u","nameLocation":"34850:1:18","nodeType":"VariableDeclaration","scope":7466,"src":"34842:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7461,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:18"},"scope":7467,"src":"34795:145:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7468,"src":"769:34173:18","usedErrors":[5712,5717,5724,5729],"usedEvents":[]}],"src":"192:34751:18"},"id":18},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[7467],"SignedMath":[7611]},"id":7612,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7469,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":7471,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7612,"sourceUnit":7468,"src":"135:40:19","symbolAliases":[{"foreign":{"id":7470,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"143:8:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":7472,"nodeType":"StructuredDocumentation","src":"177:80:19","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7611,"linearizedBaseContracts":[7611],"name":"SignedMath","nameLocation":"266:10:19","nodeType":"ContractDefinition","nodes":[{"body":{"id":7501,"nodeType":"Block","src":"746:215:19","statements":[{"id":7500,"nodeType":"UncheckedBlock","src":"756:199:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7484,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7479,"src":"894:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7485,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7477,"src":"900:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7486,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7479,"src":"904:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7488,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":7493,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7475,"src":"932:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7491,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"916:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7467_$","typeString":"type(library SafeCast)"}},"id":7492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7466,"src":"916:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7489,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:19","typeDescriptions":{}}},"id":7495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7497,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7483,"id":7499,"nodeType":"Return","src":"887:57:19"}]}]},"documentation":{"id":7473,"nodeType":"StructuredDocumentation","src":"283:374:19","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":7502,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:19","nodeType":"FunctionDefinition","parameters":{"id":7480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7475,"mutability":"mutable","name":"condition","nameLocation":"684:9:19","nodeType":"VariableDeclaration","scope":7502,"src":"679:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7474,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7477,"mutability":"mutable","name":"a","nameLocation":"702:1:19","nodeType":"VariableDeclaration","scope":7502,"src":"695:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7476,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7479,"mutability":"mutable","name":"b","nameLocation":"712:1:19","nodeType":"VariableDeclaration","scope":7502,"src":"705:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7478,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:19"},"returnParameters":{"id":7483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7502,"src":"738:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7481,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:19"},"scope":7611,"src":"662:299:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7520,"nodeType":"Block","src":"1102:44:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7513,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7505,"src":"1127:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7514,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7507,"src":"1131:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7516,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7505,"src":"1134:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7517,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7507,"src":"1137:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7512,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7502,"src":"1119:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7511,"id":7519,"nodeType":"Return","src":"1112:27:19"}]},"documentation":{"id":7503,"nodeType":"StructuredDocumentation","src":"967:66:19","text":" @dev Returns the largest of two signed numbers."},"id":7521,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:19","nodeType":"FunctionDefinition","parameters":{"id":7508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7505,"mutability":"mutable","name":"a","nameLocation":"1058:1:19","nodeType":"VariableDeclaration","scope":7521,"src":"1051:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7504,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7507,"mutability":"mutable","name":"b","nameLocation":"1068:1:19","nodeType":"VariableDeclaration","scope":7521,"src":"1061:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7506,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:19"},"returnParameters":{"id":7511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7521,"src":"1094:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7509,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:19"},"scope":7611,"src":"1038:108:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7539,"nodeType":"Block","src":"1288:44:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7532,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7524,"src":"1313:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7533,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7526,"src":"1317:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7535,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7524,"src":"1320:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7536,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7526,"src":"1323:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7531,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7502,"src":"1305:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7530,"id":7538,"nodeType":"Return","src":"1298:27:19"}]},"documentation":{"id":7522,"nodeType":"StructuredDocumentation","src":"1152:67:19","text":" @dev Returns the smallest of two signed numbers."},"id":7540,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:19","nodeType":"FunctionDefinition","parameters":{"id":7527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7524,"mutability":"mutable","name":"a","nameLocation":"1244:1:19","nodeType":"VariableDeclaration","scope":7540,"src":"1237:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7523,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7526,"mutability":"mutable","name":"b","nameLocation":"1254:1:19","nodeType":"VariableDeclaration","scope":7540,"src":"1247:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7525,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:19"},"returnParameters":{"id":7530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7529,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7540,"src":"1280:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7528,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:19"},"scope":7611,"src":"1224:108:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7583,"nodeType":"Block","src":"1537:162:19","statements":[{"assignments":[7551],"declarations":[{"constant":false,"id":7551,"mutability":"mutable","name":"x","nameLocation":"1606:1:19","nodeType":"VariableDeclaration","scope":7583,"src":"1599:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7550,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7564,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7552,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"1611:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7553,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7545,"src":"1615:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7555,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7556,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"1622:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7557,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7545,"src":"1626:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7559,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7562,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:19"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7565,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7551,"src":"1651:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7570,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7551,"src":"1671:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7568,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:19","typeDescriptions":{}}},"id":7571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7566,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:19","typeDescriptions":{}}},"id":7574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7575,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"1685:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7576,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7545,"src":"1689:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7578,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7580,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7549,"id":7582,"nodeType":"Return","src":"1644:48:19"}]},"documentation":{"id":7541,"nodeType":"StructuredDocumentation","src":"1338:126:19","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7584,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:19","nodeType":"FunctionDefinition","parameters":{"id":7546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7543,"mutability":"mutable","name":"a","nameLocation":"1493:1:19","nodeType":"VariableDeclaration","scope":7584,"src":"1486:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7542,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7545,"mutability":"mutable","name":"b","nameLocation":"1503:1:19","nodeType":"VariableDeclaration","scope":7584,"src":"1496:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7544,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:19"},"returnParameters":{"id":7549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7584,"src":"1529:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7547,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:19"},"scope":7611,"src":"1469:230:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7609,"nodeType":"Block","src":"1843:767:19","statements":[{"id":7608,"nodeType":"UncheckedBlock","src":"1853:751:19","statements":[{"assignments":[7593],"declarations":[{"constant":false,"id":7593,"mutability":"mutable","name":"mask","nameLocation":"2424:4:19","nodeType":"VariableDeclaration","scope":7608,"src":"2417:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7592,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7597,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7594,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7587,"src":"2431:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7600,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7587,"src":"2576:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7601,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"2580:4:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7603,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7604,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"2588:4:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7598,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:19","typeDescriptions":{}}},"id":7606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7591,"id":7607,"nodeType":"Return","src":"2560:33:19"}]}]},"documentation":{"id":7585,"nodeType":"StructuredDocumentation","src":"1705:78:19","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7610,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:19","nodeType":"FunctionDefinition","parameters":{"id":7588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7587,"mutability":"mutable","name":"n","nameLocation":"1808:1:19","nodeType":"VariableDeclaration","scope":7610,"src":"1801:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7586,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:19"},"returnParameters":{"id":7591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7610,"src":"1834:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7589,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:19"},"scope":7611,"src":"1788:822:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7612,"src":"258:2354:19","usedErrors":[],"usedEvents":[]}],"src":"109:2504:19"},"id":19},"contracts/NFTCollection.sol":{"ast":{"absolutePath":"contracts/NFTCollection.sol","exportedSymbols":{"Arrays":[2492],"Context":[2554],"ERC1155":[1201],"ERC1155Utils":[1536],"ERC165":[4084],"IERC1155":[1324],"IERC1155Errors":[284],"IERC1155MetadataURI":[1382],"IERC165":[4096],"IERC20":[1614],"Math":[5702],"MultichainNFT":[8018],"Ownable":[147],"SafeCast":[7467],"SignedMath":[7611],"Strings":[4060]},"id":8019,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7613,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:20"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","id":7614,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8019,"sourceUnit":1202,"src":"57:59:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7615,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8019,"sourceUnit":148,"src":"117:52:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":7616,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8019,"sourceUnit":1615,"src":"170:56:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":7617,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8019,"sourceUnit":4061,"src":"227:51:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7618,"name":"ERC1155","nameLocations":["306:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":1201,"src":"306:7:20"},"id":7619,"nodeType":"InheritanceSpecifier","src":"306:7:20"},{"baseName":{"id":7620,"name":"Ownable","nameLocations":["315:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"315:7:20"},"id":7621,"nodeType":"InheritanceSpecifier","src":"315:7:20"}],"canonicalName":"MultichainNFT","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8018,"linearizedBaseContracts":[8018,147,1201,284,1382,1324,4084,4096,2554],"name":"MultichainNFT","nameLocation":"289:13:20","nodeType":"ContractDefinition","nodes":[{"global":false,"id":7624,"libraryName":{"id":7622,"name":"Strings","nameLocations":["335:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":4060,"src":"335:7:20"},"nodeType":"UsingForDirective","src":"329:26:20","typeName":{"id":7623,"name":"uint256","nodeType":"ElementaryTypeName","src":"347:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"functionSelector":"11eac855","id":7627,"mutability":"mutable","name":"usdcToken","nameLocation":"407:9:20","nodeType":"VariableDeclaration","scope":8018,"src":"393:23:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1614","typeString":"contract IERC20"},"typeName":{"id":7626,"nodeType":"UserDefinedTypeName","pathNode":{"id":7625,"name":"IERC20","nameLocations":["393:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":1614,"src":"393:6:20"},"referencedDeclaration":1614,"src":"393:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1614","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"8f9a8837","id":7630,"mutability":"mutable","name":"mintPriceETH","nameLocation":"457:12:20","nodeType":"VariableDeclaration","scope":8018,"src":"442:40:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7628,"name":"uint256","nodeType":"ElementaryTypeName","src":"442:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"302e3031","id":7629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"472:10:20","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"value":"0.01"},"visibility":"public"},{"constant":false,"functionSelector":"5f853338","id":7637,"mutability":"mutable","name":"mintPriceUSDC","nameLocation":"525:13:20","nodeType":"VariableDeclaration","scope":8018,"src":"510:41:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7631,"name":"uint256","nodeType":"ElementaryTypeName","src":"510:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_10000000_by_1","typeString":"int_const 10000000"},"id":7636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"541:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"id":7635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"546:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"36","id":7634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"550:1:20","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"546:5:20","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"}},"src":"541:10:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000_by_1","typeString":"int_const 10000000"}},"visibility":"public"},{"canonicalName":"MultichainNFT.TokenMetadata","id":7644,"members":[{"constant":false,"id":7639,"mutability":"mutable","name":"imageURI","nameLocation":"650:8:20","nodeType":"VariableDeclaration","scope":7644,"src":"643:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7638,"name":"string","nodeType":"ElementaryTypeName","src":"643:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7641,"mutability":"mutable","name":"promptText","nameLocation":"701:10:20","nodeType":"VariableDeclaration","scope":7644,"src":"694:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7640,"name":"string","nodeType":"ElementaryTypeName","src":"694:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7643,"mutability":"mutable","name":"creator","nameLocation":"769:7:20","nodeType":"VariableDeclaration","scope":7644,"src":"761:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7642,"name":"address","nodeType":"ElementaryTypeName","src":"761:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"TokenMetadata","nameLocation":"619:13:20","nodeType":"StructDefinition","scope":8018,"src":"612:204:20","visibility":"public"},{"constant":false,"functionSelector":"6914db60","id":7649,"mutability":"mutable","name":"tokenMetadata","nameLocation":"912:13:20","nodeType":"VariableDeclaration","scope":8018,"src":"871:54:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$7644_storage_$","typeString":"mapping(uint256 => struct MultichainNFT.TokenMetadata)"},"typeName":{"id":7648,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7645,"name":"uint256","nodeType":"ElementaryTypeName","src":"879:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"871:33:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$7644_storage_$","typeString":"mapping(uint256 => struct MultichainNFT.TokenMetadata)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7647,"nodeType":"UserDefinedTypeName","pathNode":{"id":7646,"name":"TokenMetadata","nameLocations":["890:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":7644,"src":"890:13:20"},"referencedDeclaration":7644,"src":"890:13:20","typeDescriptions":{"typeIdentifier":"t_struct$_TokenMetadata_$7644_storage_ptr","typeString":"struct MultichainNFT.TokenMetadata"}}},"visibility":"public"},{"constant":false,"id":7651,"mutability":"mutable","name":"_tokenIdCounter","nameLocation":"981:15:20","nodeType":"VariableDeclaration","scope":8018,"src":"965:31:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7650,"name":"uint256","nodeType":"ElementaryTypeName","src":"965:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":7653,"mutability":"mutable","name":"_baseURI","nameLocation":"1051:8:20","nodeType":"VariableDeclaration","scope":8018,"src":"1036:23:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":7652,"name":"string","nodeType":"ElementaryTypeName","src":"1036:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"anonymous":false,"eventSelector":"ec2cd236ed6d37bf5a71276ac93889db12834493a090efd543a3d2eca8dcdcc8","id":7661,"name":"TokenMinted","nameLocation":"1090:11:20","nodeType":"EventDefinition","parameters":{"id":7660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7655,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1118:7:20","nodeType":"VariableDeclaration","scope":7661,"src":"1102:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7654,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7657,"indexed":true,"mutability":"mutable","name":"creator","nameLocation":"1143:7:20","nodeType":"VariableDeclaration","scope":7661,"src":"1127:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7656,"name":"address","nodeType":"ElementaryTypeName","src":"1127:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7659,"indexed":false,"mutability":"mutable","name":"promptText","nameLocation":"1159:10:20","nodeType":"VariableDeclaration","scope":7661,"src":"1152:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7658,"name":"string","nodeType":"ElementaryTypeName","src":"1152:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1101:69:20"},"src":"1084:87:20"},{"anonymous":false,"eventSelector":"945c1c4e99aa89f648fbfe3df471b916f719e16d960fcec0737d4d56bd696838","id":7667,"name":"PriceUpdated","nameLocation":"1182:12:20","nodeType":"EventDefinition","parameters":{"id":7666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7663,"indexed":false,"mutability":"mutable","name":"newPriceETH","nameLocation":"1203:11:20","nodeType":"VariableDeclaration","scope":7667,"src":"1195:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7662,"name":"uint256","nodeType":"ElementaryTypeName","src":"1195:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7665,"indexed":false,"mutability":"mutable","name":"newPriceUSDC","nameLocation":"1224:12:20","nodeType":"VariableDeclaration","scope":7667,"src":"1216:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7664,"name":"uint256","nodeType":"ElementaryTypeName","src":"1216:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1194:43:20"},"src":"1176:62:20"},{"body":{"id":7689,"nodeType":"Block","src":"1314:72:20","statements":[{"expression":{"id":7683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7679,"name":"usdcToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7627,"src":"1324:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1614","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7681,"name":"_usdcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"1343:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7680,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"1336:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1614_$","typeString":"type(contract IERC20)"}},"id":7682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1336:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1614","typeString":"contract IERC20"}},"src":"1324:32:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1614","typeString":"contract IERC20"}},"id":7684,"nodeType":"ExpressionStatement","src":"1324:32:20"},{"expression":{"id":7687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7685,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7653,"src":"1366:8:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"","id":7686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1377:2:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"src":"1366:13:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7688,"nodeType":"ExpressionStatement","src":"1366:13:20"}]},"id":7690,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"","id":7672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1290:2:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"id":7673,"kind":"baseConstructorSpecifier","modifierName":{"id":7671,"name":"ERC1155","nameLocations":["1282:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":1201,"src":"1282:7:20"},"nodeType":"ModifierInvocation","src":"1282:11:20"},{"arguments":[{"expression":{"id":7675,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1302:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1306:6:20","memberName":"sender","nodeType":"MemberAccess","src":"1302:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7677,"kind":"baseConstructorSpecifier","modifierName":{"id":7674,"name":"Ownable","nameLocations":["1294:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1294:7:20"},"nodeType":"ModifierInvocation","src":"1294:19:20"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7669,"mutability":"mutable","name":"_usdcAddress","nameLocation":"1268:12:20","nodeType":"VariableDeclaration","scope":7690,"src":"1260:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7668,"name":"address","nodeType":"ElementaryTypeName","src":"1260:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1259:22:20"},"returnParameters":{"id":7678,"nodeType":"ParameterList","parameters":[],"src":"1314:0:20"},"scope":8018,"src":"1248:138:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7744,"nodeType":"Block","src":"1715:467:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7701,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1733:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1737:5:20","memberName":"value","nodeType":"MemberAccess","src":"1733:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7703,"name":"mintPriceETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7630,"src":"1746:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7704,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7697,"src":"1761:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1746:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1733:35:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74204554482073656e74","id":7707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1770:23:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404","typeString":"literal_string \"Insufficient ETH sent\""},"value":"Insufficient ETH sent"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404","typeString":"literal_string \"Insufficient ETH sent\""}],"id":7700,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1725:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1725:69:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7709,"nodeType":"ExpressionStatement","src":"1725:69:20"},{"assignments":[7711],"declarations":[{"constant":false,"id":7711,"mutability":"mutable","name":"tokenId","nameLocation":"1821:7:20","nodeType":"VariableDeclaration","scope":7744,"src":"1813:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7710,"name":"uint256","nodeType":"ElementaryTypeName","src":"1813:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7713,"initialValue":{"id":7712,"name":"_tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7651,"src":"1831:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1813:33:20"},{"expression":{"id":7716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7714,"name":"_tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7651,"src":"1856:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":7715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1875:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1856:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7717,"nodeType":"ExpressionStatement","src":"1856:20:20"},{"expression":{"arguments":[{"expression":{"id":7719,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1901:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1905:6:20","memberName":"sender","nodeType":"MemberAccess","src":"1901:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7721,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7711,"src":"1913:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7722,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7697,"src":"1922:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":7723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1931:2:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":7718,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"1895:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":7724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1895:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7725,"nodeType":"ExpressionStatement","src":"1895:39:20"},{"expression":{"id":7735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7726,"name":"tokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7649,"src":"1953:13:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$7644_storage_$","typeString":"mapping(uint256 => struct MultichainNFT.TokenMetadata storage ref)"}},"id":7728,"indexExpression":{"id":7727,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7711,"src":"1967:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1953:22:20","typeDescriptions":{"typeIdentifier":"t_struct$_TokenMetadata_$7644_storage","typeString":"struct MultichainNFT.TokenMetadata storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7730,"name":"_imageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7693,"src":"2016:9:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7731,"name":"_promptText","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7695,"src":"2051:11:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":7732,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2085:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2089:6:20","memberName":"sender","nodeType":"MemberAccess","src":"2085:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7729,"name":"TokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7644,"src":"1978:13:20","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_TokenMetadata_$7644_storage_ptr_$","typeString":"type(struct MultichainNFT.TokenMetadata storage pointer)"}},"id":7734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2006:8:20","2039:10:20","2076:7:20"],"names":["imageURI","promptText","creator"],"nodeType":"FunctionCall","src":"1978:128:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenMetadata_$7644_memory_ptr","typeString":"struct MultichainNFT.TokenMetadata memory"}},"src":"1953:153:20","typeDescriptions":{"typeIdentifier":"t_struct$_TokenMetadata_$7644_storage","typeString":"struct MultichainNFT.TokenMetadata storage ref"}},"id":7736,"nodeType":"ExpressionStatement","src":"1953:153:20"},{"eventCall":{"arguments":[{"id":7738,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7711,"src":"2142:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7739,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2151:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2155:6:20","memberName":"sender","nodeType":"MemberAccess","src":"2151:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7741,"name":"_promptText","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7695,"src":"2163:11:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7737,"name":"TokenMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7661,"src":"2130:11:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,string memory)"}},"id":7742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2130:45:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7743,"nodeType":"EmitStatement","src":"2125:50:20"}]},"documentation":{"id":7691,"nodeType":"StructuredDocumentation","src":"1396:207:20","text":" @dev Mint a new token with ETH payment\n @param _imageURI URI pointing to the PNG data\n @param _promptText The AI prompt text used\n @param _amount Number of tokens to mint"},"functionSelector":"5baae42d","id":7745,"implemented":true,"kind":"function","modifiers":[],"name":"mintWithETH","nameLocation":"1617:11:20","nodeType":"FunctionDefinition","parameters":{"id":7698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7693,"mutability":"mutable","name":"_imageURI","nameLocation":"1643:9:20","nodeType":"VariableDeclaration","scope":7745,"src":"1629:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7692,"name":"string","nodeType":"ElementaryTypeName","src":"1629:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7695,"mutability":"mutable","name":"_promptText","nameLocation":"1668:11:20","nodeType":"VariableDeclaration","scope":7745,"src":"1654:25:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7694,"name":"string","nodeType":"ElementaryTypeName","src":"1654:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7697,"mutability":"mutable","name":"_amount","nameLocation":"1689:7:20","nodeType":"VariableDeclaration","scope":7745,"src":"1681:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7696,"name":"uint256","nodeType":"ElementaryTypeName","src":"1681:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1628:69:20"},"returnParameters":{"id":7699,"nodeType":"ParameterList","parameters":[],"src":"1715:0:20"},"scope":8018,"src":"1608:574:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":7820,"nodeType":"Block","src":"2505:703:20","statements":[{"assignments":[7756],"declarations":[{"constant":false,"id":7756,"mutability":"mutable","name":"totalPrice","nameLocation":"2523:10:20","nodeType":"VariableDeclaration","scope":7820,"src":"2515:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7755,"name":"uint256","nodeType":"ElementaryTypeName","src":"2515:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7760,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7757,"name":"mintPriceUSDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7637,"src":"2536:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7758,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7752,"src":"2552:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2536:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2515:44:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":7764,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2597:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2601:6:20","memberName":"sender","nodeType":"MemberAccess","src":"2597:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7762,"name":"usdcToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7627,"src":"2577:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1614","typeString":"contract IERC20"}},"id":7763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2587:9:20","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1571,"src":"2577:19:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":7766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2577:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7767,"name":"totalPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7756,"src":"2612:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2577:45:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420555344432062616c616e6365","id":7769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2624:27:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_40a05d66d0175ecd11e5a65435b281d52a1c32bbc687760a717d83801a914a3c","typeString":"literal_string \"Insufficient USDC balance\""},"value":"Insufficient USDC balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_40a05d66d0175ecd11e5a65435b281d52a1c32bbc687760a717d83801a914a3c","typeString":"literal_string \"Insufficient USDC balance\""}],"id":7761,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2569:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2569:83:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7771,"nodeType":"ExpressionStatement","src":"2569:83:20"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":7775,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2757:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:6:20","memberName":"sender","nodeType":"MemberAccess","src":"2757:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7779,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2777:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_MultichainNFT_$8018","typeString":"contract MultichainNFT"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MultichainNFT_$8018","typeString":"contract MultichainNFT"}],"id":7778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2769:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7777,"name":"address","nodeType":"ElementaryTypeName","src":"2769:7:20","typeDescriptions":{}}},"id":7780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2769:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7781,"name":"totalPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7756,"src":"2784:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7773,"name":"usdcToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7627,"src":"2734:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1614","typeString":"contract IERC20"}},"id":7774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2744:12:20","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1613,"src":"2734:22:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":7782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2734:61:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"55534443207472616e73666572206661696c6564","id":7783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2797:22:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_032fb3428477d66798bdf7801f58a252d723dc1362b9dfac5726f85f81cca815","typeString":"literal_string \"USDC transfer failed\""},"value":"USDC transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_032fb3428477d66798bdf7801f58a252d723dc1362b9dfac5726f85f81cca815","typeString":"literal_string \"USDC transfer failed\""}],"id":7772,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2726:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2726:94:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7785,"nodeType":"ExpressionStatement","src":"2726:94:20"},{"assignments":[7787],"declarations":[{"constant":false,"id":7787,"mutability":"mutable","name":"tokenId","nameLocation":"2847:7:20","nodeType":"VariableDeclaration","scope":7820,"src":"2839:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7786,"name":"uint256","nodeType":"ElementaryTypeName","src":"2839:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7789,"initialValue":{"id":7788,"name":"_tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7651,"src":"2857:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2839:33:20"},{"expression":{"id":7792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7790,"name":"_tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7651,"src":"2882:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":7791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2901:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2882:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7793,"nodeType":"ExpressionStatement","src":"2882:20:20"},{"expression":{"arguments":[{"expression":{"id":7795,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2927:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2931:6:20","memberName":"sender","nodeType":"MemberAccess","src":"2927:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7797,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7787,"src":"2939:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7798,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7752,"src":"2948:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":7799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2957:2:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":7794,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"2921:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":7800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2921:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7801,"nodeType":"ExpressionStatement","src":"2921:39:20"},{"expression":{"id":7811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7802,"name":"tokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7649,"src":"2979:13:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$7644_storage_$","typeString":"mapping(uint256 => struct MultichainNFT.TokenMetadata storage ref)"}},"id":7804,"indexExpression":{"id":7803,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7787,"src":"2993:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2979:22:20","typeDescriptions":{"typeIdentifier":"t_struct$_TokenMetadata_$7644_storage","typeString":"struct MultichainNFT.TokenMetadata storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7806,"name":"_imageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7748,"src":"3042:9:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7807,"name":"_promptText","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7750,"src":"3077:11:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":7808,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3111:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3115:6:20","memberName":"sender","nodeType":"MemberAccess","src":"3111:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7805,"name":"TokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7644,"src":"3004:13:20","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_TokenMetadata_$7644_storage_ptr_$","typeString":"type(struct MultichainNFT.TokenMetadata storage pointer)"}},"id":7810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3032:8:20","3065:10:20","3102:7:20"],"names":["imageURI","promptText","creator"],"nodeType":"FunctionCall","src":"3004:128:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenMetadata_$7644_memory_ptr","typeString":"struct MultichainNFT.TokenMetadata memory"}},"src":"2979:153:20","typeDescriptions":{"typeIdentifier":"t_struct$_TokenMetadata_$7644_storage","typeString":"struct MultichainNFT.TokenMetadata storage ref"}},"id":7812,"nodeType":"ExpressionStatement","src":"2979:153:20"},{"eventCall":{"arguments":[{"id":7814,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7787,"src":"3168:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7815,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3177:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3181:6:20","memberName":"sender","nodeType":"MemberAccess","src":"3177:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7817,"name":"_promptText","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7750,"src":"3189:11:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7813,"name":"TokenMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7661,"src":"3156:11:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,string memory)"}},"id":7818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3156:45:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7819,"nodeType":"EmitStatement","src":"3151:50:20"}]},"documentation":{"id":7746,"nodeType":"StructuredDocumentation","src":"2192:208:20","text":" @dev Mint a new token with USDC payment\n @param _imageURI URI pointing to the PNG data\n @param _promptText The AI prompt text used\n @param _amount Number of tokens to mint"},"functionSelector":"a1456765","id":7821,"implemented":true,"kind":"function","modifiers":[],"name":"mintWithUSDC","nameLocation":"2414:12:20","nodeType":"FunctionDefinition","parameters":{"id":7753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7748,"mutability":"mutable","name":"_imageURI","nameLocation":"2441:9:20","nodeType":"VariableDeclaration","scope":7821,"src":"2427:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7747,"name":"string","nodeType":"ElementaryTypeName","src":"2427:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7750,"mutability":"mutable","name":"_promptText","nameLocation":"2466:11:20","nodeType":"VariableDeclaration","scope":7821,"src":"2452:25:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7749,"name":"string","nodeType":"ElementaryTypeName","src":"2452:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7752,"mutability":"mutable","name":"_amount","nameLocation":"2487:7:20","nodeType":"VariableDeclaration","scope":7821,"src":"2479:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7751,"name":"uint256","nodeType":"ElementaryTypeName","src":"2479:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2426:69:20"},"returnParameters":{"id":7754,"nodeType":"ParameterList","parameters":[],"src":"2505:0:20"},"scope":8018,"src":"2405:803:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7841,"nodeType":"Block","src":"3414:105:20","statements":[{"expression":{"arguments":[{"arguments":[{"id":7832,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7824,"src":"3440:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7831,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7927,"src":"3432:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":7833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3432:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":7834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3450:22:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":7830,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3424:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3424:49:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7836,"nodeType":"ExpressionStatement","src":"3424:49:20"},{"expression":{"baseExpression":{"id":7837,"name":"tokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7649,"src":"3490:13:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$7644_storage_$","typeString":"mapping(uint256 => struct MultichainNFT.TokenMetadata storage ref)"}},"id":7839,"indexExpression":{"id":7838,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7824,"src":"3504:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3490:22:20","typeDescriptions":{"typeIdentifier":"t_struct$_TokenMetadata_$7644_storage","typeString":"struct MultichainNFT.TokenMetadata storage ref"}},"functionReturnParameters":7829,"id":7840,"nodeType":"Return","src":"3483:29:20"}]},"documentation":{"id":7822,"nodeType":"StructuredDocumentation","src":"3218:103:20","text":" @dev Get the complete metadata for a token\n @param tokenId The ID of the token"},"functionSelector":"60316801","id":7842,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenMetadata","nameLocation":"3335:16:20","nodeType":"FunctionDefinition","parameters":{"id":7825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7824,"mutability":"mutable","name":"tokenId","nameLocation":"3360:7:20","nodeType":"VariableDeclaration","scope":7842,"src":"3352:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7823,"name":"uint256","nodeType":"ElementaryTypeName","src":"3352:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3351:17:20"},"returnParameters":{"id":7829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7828,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7842,"src":"3392:20:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenMetadata_$7644_memory_ptr","typeString":"struct MultichainNFT.TokenMetadata"},"typeName":{"id":7827,"nodeType":"UserDefinedTypeName","pathNode":{"id":7826,"name":"TokenMetadata","nameLocations":["3392:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":7644,"src":"3392:13:20"},"referencedDeclaration":7644,"src":"3392:13:20","typeDescriptions":{"typeIdentifier":"t_struct$_TokenMetadata_$7644_storage_ptr","typeString":"struct MultichainNFT.TokenMetadata"}},"visibility":"internal"}],"src":"3391:22:20"},"scope":8018,"src":"3326:193:20","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7865,"nodeType":"Block","src":"3751:135:20","statements":[{"expression":{"id":7854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7852,"name":"mintPriceETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7630,"src":"3761:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7853,"name":"newPriceETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7845,"src":"3776:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3761:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7855,"nodeType":"ExpressionStatement","src":"3761:26:20"},{"expression":{"id":7858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7856,"name":"mintPriceUSDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7637,"src":"3797:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7857,"name":"newPriceUSDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7847,"src":"3813:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3797:28:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7859,"nodeType":"ExpressionStatement","src":"3797:28:20"},{"eventCall":{"arguments":[{"id":7861,"name":"newPriceETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7845,"src":"3853:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7862,"name":"newPriceUSDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7847,"src":"3866:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7860,"name":"PriceUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7667,"src":"3840:12:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":7863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3840:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7864,"nodeType":"EmitStatement","src":"3835:44:20"}]},"documentation":{"id":7843,"nodeType":"StructuredDocumentation","src":"3529:133:20","text":" @dev Update minting prices\n @param newPriceETH New price in ETH\n @param newPriceUSDC New price in USDC"},"functionSelector":"ef88d7f0","id":7866,"implemented":true,"kind":"function","modifiers":[{"id":7850,"kind":"modifierInvocation","modifierName":{"id":7849,"name":"onlyOwner","nameLocations":["3741:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3741:9:20"},"nodeType":"ModifierInvocation","src":"3741:9:20"}],"name":"updatePrices","nameLocation":"3676:12:20","nodeType":"FunctionDefinition","parameters":{"id":7848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7845,"mutability":"mutable","name":"newPriceETH","nameLocation":"3697:11:20","nodeType":"VariableDeclaration","scope":7866,"src":"3689:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7844,"name":"uint256","nodeType":"ElementaryTypeName","src":"3689:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7847,"mutability":"mutable","name":"newPriceUSDC","nameLocation":"3718:12:20","nodeType":"VariableDeclaration","scope":7866,"src":"3710:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7846,"name":"uint256","nodeType":"ElementaryTypeName","src":"3710:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3688:43:20"},"returnParameters":{"id":7851,"nodeType":"ParameterList","parameters":[],"src":"3751:0:20"},"scope":8018,"src":"3667:219:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7878,"nodeType":"Block","src":"4063:38:20","statements":[{"expression":{"id":7876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7874,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7653,"src":"4073:8:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7875,"name":"newBaseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7869,"src":"4084:10:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4073:21:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7877,"nodeType":"ExpressionStatement","src":"4073:21:20"}]},"documentation":{"id":7867,"nodeType":"StructuredDocumentation","src":"3896:97:20","text":" @dev Set the base URI for token metadata\n @param newBaseURI New base URI"},"functionSelector":"55f804b3","id":7879,"implemented":true,"kind":"function","modifiers":[{"id":7872,"kind":"modifierInvocation","modifierName":{"id":7871,"name":"onlyOwner","nameLocations":["4053:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"4053:9:20"},"nodeType":"ModifierInvocation","src":"4053:9:20"}],"name":"setBaseURI","nameLocation":"4007:10:20","nodeType":"FunctionDefinition","parameters":{"id":7870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7869,"mutability":"mutable","name":"newBaseURI","nameLocation":"4032:10:20","nodeType":"VariableDeclaration","scope":7879,"src":"4018:24:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7868,"name":"string","nodeType":"ElementaryTypeName","src":"4018:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4017:26:20"},"returnParameters":{"id":7873,"nodeType":"ParameterList","parameters":[],"src":"4063:0:20"},"scope":8018,"src":"3998:103:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[387],"body":{"id":7906,"nodeType":"Block","src":"4260:148:20","statements":[{"expression":{"arguments":[{"arguments":[{"id":7890,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7882,"src":"4286:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7889,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7927,"src":"4278:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":7891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4278:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"55524920717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":7892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4296:33:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_1cdec463df0fbdce13585c1435e3c4772f0033ebb8a813b127e59d923b0c9730","typeString":"literal_string \"URI query for nonexistent token\""},"value":"URI query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1cdec463df0fbdce13585c1435e3c4772f0033ebb8a813b127e59d923b0c9730","typeString":"literal_string \"URI query for nonexistent token\""}],"id":7888,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4270:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:60:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7894,"nodeType":"ExpressionStatement","src":"4270:60:20"},{"expression":{"arguments":[{"arguments":[{"id":7899,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7653,"src":"4371:8:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7900,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7882,"src":"4381:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4389:8:20","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2938,"src":"4381:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":7902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4381:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":7897,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4354:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4358:12:20","memberName":"encodePacked","nodeType":"MemberAccess","src":"4354:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4354:46:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4347:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":7895,"name":"string","nodeType":"ElementaryTypeName","src":"4347:6:20","typeDescriptions":{}}},"id":7904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4347:54:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7887,"id":7905,"nodeType":"Return","src":"4340:61:20"}]},"documentation":{"id":7880,"nodeType":"StructuredDocumentation","src":"4111:69:20","text":" @dev Override URI function to construct token URIs"},"functionSelector":"0e89341c","id":7907,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"4194:3:20","nodeType":"FunctionDefinition","overrides":{"id":7884,"nodeType":"OverrideSpecifier","overrides":[],"src":"4227:8:20"},"parameters":{"id":7883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7882,"mutability":"mutable","name":"tokenId","nameLocation":"4206:7:20","nodeType":"VariableDeclaration","scope":7907,"src":"4198:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7881,"name":"uint256","nodeType":"ElementaryTypeName","src":"4198:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4197:17:20"},"returnParameters":{"id":7887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7907,"src":"4245:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7885,"name":"string","nodeType":"ElementaryTypeName","src":"4245:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4244:15:20"},"scope":8018,"src":"4185:223:20","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7926,"nodeType":"Block","src":"4533:73:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"expression":{"baseExpression":{"id":7917,"name":"tokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7649,"src":"4556:13:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$7644_storage_$","typeString":"mapping(uint256 => struct MultichainNFT.TokenMetadata storage ref)"}},"id":7919,"indexExpression":{"id":7918,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"4570:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4556:22:20","typeDescriptions":{"typeIdentifier":"t_struct$_TokenMetadata_$7644_storage","typeString":"struct MultichainNFT.TokenMetadata storage ref"}},"id":7920,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4579:8:20","memberName":"imageURI","nodeType":"MemberAccess","referencedDeclaration":7639,"src":"4556:31:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":7916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4550:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7915,"name":"bytes","nodeType":"ElementaryTypeName","src":"4550:5:20","typeDescriptions":{}}},"id":7921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4550:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":7922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4589:6:20","memberName":"length","nodeType":"MemberAccess","src":"4550:45:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4598:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4550:49:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7914,"id":7925,"nodeType":"Return","src":"4543:56:20"}]},"documentation":{"id":7908,"nodeType":"StructuredDocumentation","src":"4418:47:20","text":" @dev Check if a token exists"},"id":7927,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"4479:7:20","nodeType":"FunctionDefinition","parameters":{"id":7911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7910,"mutability":"mutable","name":"tokenId","nameLocation":"4495:7:20","nodeType":"VariableDeclaration","scope":7927,"src":"4487:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7909,"name":"uint256","nodeType":"ElementaryTypeName","src":"4487:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4486:17:20"},"returnParameters":{"id":7914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7927,"src":"4527:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7912,"name":"bool","nodeType":"ElementaryTypeName","src":"4527:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4526:6:20"},"scope":8018,"src":"4470:136:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7957,"nodeType":"Block","src":"4717:152:20","statements":[{"assignments":[7934],"declarations":[{"constant":false,"id":7934,"mutability":"mutable","name":"balance","nameLocation":"4735:7:20","nodeType":"VariableDeclaration","scope":7957,"src":"4727:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7933,"name":"uint256","nodeType":"ElementaryTypeName","src":"4727:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7940,"initialValue":{"expression":{"arguments":[{"id":7937,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4753:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_MultichainNFT_$8018","typeString":"contract MultichainNFT"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MultichainNFT_$8018","typeString":"contract MultichainNFT"}],"id":7936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4745:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7935,"name":"address","nodeType":"ElementaryTypeName","src":"4745:7:20","typeDescriptions":{}}},"id":7938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4745:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4759:7:20","memberName":"balance","nodeType":"MemberAccess","src":"4745:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4727:39:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7942,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7934,"src":"4784:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4794:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4784:11:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2045544820746f207769746864726177","id":7945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4797:20:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95","typeString":"literal_string \"No ETH to withdraw\""},"value":"No ETH to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95","typeString":"literal_string \"No ETH to withdraw\""}],"id":7941,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4776:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4776:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7947,"nodeType":"ExpressionStatement","src":"4776:42:20"},{"expression":{"arguments":[{"id":7954,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7934,"src":"4854:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":7950,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"4836:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4836:7:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4828:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":7948,"name":"address","nodeType":"ElementaryTypeName","src":"4828:8:20","stateMutability":"payable","typeDescriptions":{}}},"id":7952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4828:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":7953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4845:8:20","memberName":"transfer","nodeType":"MemberAccess","src":"4828:25:20","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4828:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7956,"nodeType":"ExpressionStatement","src":"4828:34:20"}]},"documentation":{"id":7928,"nodeType":"StructuredDocumentation","src":"4616:54:20","text":" @dev Withdraw ETH from the contract"},"functionSelector":"e086e5ec","id":7958,"implemented":true,"kind":"function","modifiers":[{"id":7931,"kind":"modifierInvocation","modifierName":{"id":7930,"name":"onlyOwner","nameLocations":["4707:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"4707:9:20"},"nodeType":"ModifierInvocation","src":"4707:9:20"}],"name":"withdrawETH","nameLocation":"4684:11:20","nodeType":"FunctionDefinition","parameters":{"id":7929,"nodeType":"ParameterList","parameters":[],"src":"4695:2:20"},"returnParameters":{"id":7932,"nodeType":"ParameterList","parameters":[],"src":"4717:0:20"},"scope":8018,"src":"4675:194:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7991,"nodeType":"Block","src":"4982:201:20","statements":[{"assignments":[7965],"declarations":[{"constant":false,"id":7965,"mutability":"mutable","name":"balance","nameLocation":"5000:7:20","nodeType":"VariableDeclaration","scope":7991,"src":"4992:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7964,"name":"uint256","nodeType":"ElementaryTypeName","src":"4992:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7973,"initialValue":{"arguments":[{"arguments":[{"id":7970,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5038:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_MultichainNFT_$8018","typeString":"contract MultichainNFT"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MultichainNFT_$8018","typeString":"contract MultichainNFT"}],"id":7969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5030:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7968,"name":"address","nodeType":"ElementaryTypeName","src":"5030:7:20","typeDescriptions":{}}},"id":7971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5030:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7966,"name":"usdcToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7627,"src":"5010:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1614","typeString":"contract IERC20"}},"id":7967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5020:9:20","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1571,"src":"5010:19:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":7972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5010:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4992:52:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7975,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7965,"src":"5062:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5062:11:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f205553444320746f207769746864726177","id":7978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5075:21:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_64693eab493143313e305fd1ec05b7e651a9150030395218d84e3550222a6e10","typeString":"literal_string \"No USDC to withdraw\""},"value":"No USDC to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_64693eab493143313e305fd1ec05b7e651a9150030395218d84e3550222a6e10","typeString":"literal_string \"No USDC to withdraw\""}],"id":7974,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5054:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5054:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7980,"nodeType":"ExpressionStatement","src":"5054:43:20"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":7984,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"5134:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5134:7:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7986,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7965,"src":"5143:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7982,"name":"usdcToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7627,"src":"5115:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1614","typeString":"contract IERC20"}},"id":7983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5125:8:20","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1581,"src":"5115:18:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":7987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5115:36:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"55534443207472616e73666572206661696c6564","id":7988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5153:22:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_032fb3428477d66798bdf7801f58a252d723dc1362b9dfac5726f85f81cca815","typeString":"literal_string \"USDC transfer failed\""},"value":"USDC transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_032fb3428477d66798bdf7801f58a252d723dc1362b9dfac5726f85f81cca815","typeString":"literal_string \"USDC transfer failed\""}],"id":7981,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5107:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5107:69:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7990,"nodeType":"ExpressionStatement","src":"5107:69:20"}]},"documentation":{"id":7959,"nodeType":"StructuredDocumentation","src":"4879:55:20","text":" @dev Withdraw USDC from the contract"},"functionSelector":"d8fc063d","id":7992,"implemented":true,"kind":"function","modifiers":[{"id":7962,"kind":"modifierInvocation","modifierName":{"id":7961,"name":"onlyOwner","nameLocations":["4972:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"4972:9:20"},"nodeType":"ModifierInvocation","src":"4972:9:20"}],"name":"withdrawUSDC","nameLocation":"4948:12:20","nodeType":"FunctionDefinition","parameters":{"id":7960,"nodeType":"ParameterList","parameters":[],"src":"4960:2:20"},"returnParameters":{"id":7963,"nodeType":"ParameterList","parameters":[],"src":"4982:0:20"},"scope":8018,"src":"4939:244:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8016,"nodeType":"Block","src":"5330:117:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8001,"name":"newUSDCAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7995,"src":"5348:14:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5374:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5366:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8002,"name":"address","nodeType":"ElementaryTypeName","src":"5366:7:20","typeDescriptions":{}}},"id":8005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5366:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5348:28:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061646472657373","id":8007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5378:17:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""},"value":"Invalid address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""}],"id":8000,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5340:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5340:56:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8009,"nodeType":"ExpressionStatement","src":"5340:56:20"},{"expression":{"id":8014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8010,"name":"usdcToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7627,"src":"5406:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1614","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8012,"name":"newUSDCAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7995,"src":"5425:14:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8011,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"5418:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1614_$","typeString":"type(contract IERC20)"}},"id":8013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5418:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1614","typeString":"contract IERC20"}},"src":"5406:34:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1614","typeString":"contract IERC20"}},"id":8015,"nodeType":"ExpressionStatement","src":"5406:34:20"}]},"documentation":{"id":7993,"nodeType":"StructuredDocumentation","src":"5193:62:20","text":" @dev Update the USDC token contract address"},"functionSelector":"7d81c4c1","id":8017,"implemented":true,"kind":"function","modifiers":[{"id":7998,"kind":"modifierInvocation","modifierName":{"id":7997,"name":"onlyOwner","nameLocations":["5320:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"5320:9:20"},"nodeType":"ModifierInvocation","src":"5320:9:20"}],"name":"updateUSDCAddress","nameLocation":"5269:17:20","nodeType":"FunctionDefinition","parameters":{"id":7996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7995,"mutability":"mutable","name":"newUSDCAddress","nameLocation":"5295:14:20","nodeType":"VariableDeclaration","scope":8017,"src":"5287:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7994,"name":"address","nodeType":"ElementaryTypeName","src":"5287:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5286:24:20"},"returnParameters":{"id":7999,"nodeType":"ParameterList","parameters":[],"src":"5330:0:20"},"scope":8018,"src":"5260:187:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":8019,"src":"280:5169:20","usedErrors":[13,18,249,254,259,266,271,276,283],"usedEvents":[24,1221,1236,1245,1252,7661,7667]}],"src":"32:5417:20"},"id":20}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","errors":{"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the address provided by the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":8,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"devdoc":{"details":"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.","errors":{"ERC1155InsufficientBalance(address,uint256,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC1155InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC1155InvalidArrayLength(uint256,uint256)":[{"details":"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.","params":{"idsLength":"Length of the array of token identifiers","valuesLength":"Length of the array of token amounts"}}],"ERC1155InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC1155InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC1155InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC1155MissingApprovalForAll(address,address)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","owner":"Address of the current owner of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"devdoc":{"details":"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"devdoc":{"details":"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ERC1155":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155","errors":{"ERC1155InsufficientBalance(address,uint256,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC1155InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC1155InvalidArrayLength(uint256,uint256)":[{"details":"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.","params":{"idsLength":"Length of the array of token identifiers","valuesLength":"Length of the array of token amounts"}}],"ERC1155InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC1155InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC1155InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC1155MissingApprovalForAll(address,address)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","owner":"Address of the current owner of a token."}}]},"events":{"ApprovalForAll(address,address,bool)":{"details":"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."},"TransferBatch(address,address,address,uint256[],uint256[])":{"details":"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."},"TransferSingle(address,address,address,uint256,uint256)":{"details":"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."},"URI(string,uint256)":{"details":"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."}},"kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"See {IERC1155-balanceOf}."},"balanceOfBatch(address[],uint256[])":{"details":"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."},"constructor":{"details":"See {_setURI}."},"isApprovedForAll(address,address)":{"details":"See {IERC1155-isApprovedForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"See {IERC1155-safeBatchTransferFrom}."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"See {IERC1155-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC1155-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"uri(uint256)":{"details":"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x22933f0f4897ff70a991c3baebfbc2574fd052dc4bae7fcafec45b07c1f23dd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13674cffad18cec55f013056496d7d2e3a34bd7bdbe23d1ef0c7588088c73367\",\"dweb:/ipfs/QmcBkrwxNvCApG48Gyby2L6qCNtuhaFncGpbJt3zuukTmu\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":326,"contract":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_uint256,t_mapping(t_address,t_uint256))"},{"astId":332,"contract":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155","label":"_operatorApprovals","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":334,"contract":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155","label":"_uri","offset":0,"slot":"2","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].","events":{"ApprovalForAll(address,address,bool)":{"details":"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."},"TransferBatch(address,address,address,uint256[],uint256[])":{"details":"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."},"TransferSingle(address,address,address,uint256,uint256)":{"details":"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."},"URI(string,uint256)":{"details":"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."}},"kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"Returns the value of tokens of token type `id` owned by `account`."},"balanceOfBatch(address[],uint256[])":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."},"isApprovedForAll(address,address)":{"details":"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."},"setApprovalForAll(address,bool)":{"details":"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.","kind":"dev","methods":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":{"details":"Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).","params":{"data":"Additional data with no specified format","from":"The address which previously owned the token","ids":"An array containing ids of each token being transferred (order and length must match values array)","operator":"The address which initiated the batch transfer (i.e. msg.sender)","values":"An array containing amounts of each token being transferred (order and length must match ids array)"},"returns":{"_0":"`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"}},"onERC1155Received(address,address,uint256,uint256,bytes)":{"details":"Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).","params":{"data":"Additional data with no specified format","from":"The address which previously owned the token","id":"The ID of the token being transferred","operator":"The address which initiated the transfer (i.e. msg.sender)","value":"The amount of tokens being transferred"},"returns":{"_0":"`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"}},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"IERC1155MetadataURI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].","events":{"ApprovalForAll(address,address,bool)":{"details":"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."},"TransferBatch(address,address,address,uint256[],uint256[])":{"details":"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."},"TransferSingle(address,address,address,uint256,uint256)":{"details":"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."},"URI(string,uint256)":{"details":"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."}},"kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"Returns the value of tokens of token type `id` owned by `account`."},"balanceOfBatch(address[],uint256[])":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."},"isApprovedForAll(address,address)":{"details":"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."},"setApprovalForAll(address,bool)":{"details":"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"uri(uint256)":{"details":"Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ERC1155Utils":{"abi":[],"devdoc":{"details":"Library that provide common ERC-1155 utility functions. See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155]. _Available since v5.1._","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220862f9cf7c37e4e00f32357ae65b920eabc76703176e741c140303a83ebd765ae64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0x2F SWAP13 0xF7 0xC3 PUSH31 0x4E00F32357AE65B920EABC76703176E741C140303A83EBD765AE64736F6C63 NUMBER STOP ADDMOD XOR STOP CALLER ","sourceMap":"439:3094:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;439:3094:6;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220862f9cf7c37e4e00f32357ae65b920eabc76703176e741c140303a83ebd765ae64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0x2F SWAP13 0xF7 0xC3 PUSH31 0x4E00F32357AE65B920EABC76703176E741C140303A83EBD765AE64736F6C63 NUMBER STOP ADDMOD XOR STOP CALLER ","sourceMap":"439:3094:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-1155 utility functions. See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":\"ERC1155Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC-20 standard as defined in the ERC.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Arrays.sol":{"Arrays":{"abi":[],"devdoc":{"details":"Collection of functions related to array types.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122009574a4ae675c0f0eaa7f260d7bbda19b4872b48f4418cd11b5a407de92a389864736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD JUMPI BLOBBASEFEE BLOBBASEFEE 0xE6 PUSH22 0xC0F0EAA7F260D7BBDA19B4872B48F4418CD11B5A407D 0xE9 0x2A CODESIZE SWAP9 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"459:17881:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;459:17881:8;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122009574a4ae675c0f0eaa7f260d7bbda19b4872b48f4418cd11b5a407de92a389864736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD JUMPI BLOBBASEFEE BLOBBASEFEE 0xE6 PUSH22 0xC0F0EAA7F260D7BBDA19B4872B48F4418CD11B5A407D 0xE9 0x2A CODESIZE SWAP9 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"459:17881:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Comparators.sol":{"Comparators":{"abi":[],"devdoc":{"details":"Provides a set of functions to compare values. _Available since v5.1._","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201d11ebb3380ab6142873a5581e6490a477fdba3bde6460d772f02b2e66f6a3c564736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR GT 0xEB 0xB3 CODESIZE EXP 0xB6 EQ 0x28 PUSH20 0xA5581E6490A477FDBA3BDE6460D772F02B2E66F6 LOG3 0xC5 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"224:218:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;224:218:9;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201d11ebb3380ab6142873a5581e6490a477fdba3bde6460d772f02b2e66f6a3c564736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR GT 0xEB 0xB3 CODESIZE EXP 0xB6 EQ 0x28 PUSH20 0xA5581E6490A477FDBA3BDE6460D772F02B2E66F6 LOG3 0xC5 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"224:218:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to compare values. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Comparators.sol\":\"Comparators\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"devdoc":{"details":"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._","kind":"dev","methods":{},"stateVariables":{"ARRAY_OUT_OF_BOUNDS":{"details":"array out of bounds access"},"ASSERT":{"details":"used by the assert() builtin"},"DIVISION_BY_ZERO":{"details":"division or modulo by zero"},"EMPTY_ARRAY_POP":{"details":"empty array pop"},"ENUM_CONVERSION_ERROR":{"details":"enum conversion error"},"GENERIC":{"details":"generic / unspecified error"},"INVALID_INTERNAL_FUNCTION":{"details":"calling invalid internal function"},"RESOURCE_ERROR":{"details":"resource error (too large allocation or too large array)"},"STORAGE_ENCODING_ERROR":{"details":"invalid encoding in storage"},"UNDER_OVERFLOW":{"details":"arithmetic underflow or overflow"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220159ad86a6e1d46e770fc8f91a8862e857529a68fb5236f140391bcd8a99f19a364736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO SWAP11 0xD8 PUSH11 0x6E1D46E770FC8F91A8862E DUP6 PUSH22 0x29A68FB5236F140391BCD8A99F19A364736F6C634300 ADDMOD XOR STOP CALLER ","sourceMap":"657:1315:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220159ad86a6e1d46e770fc8f91a8862e857529a68fb5236f140391bcd8a99f19a364736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO SWAP11 0xD8 PUSH11 0x6E1D46E770FC8F91A8862E DUP6 PUSH22 0x29A68FB5236F140391BCD8A99F19A364736F6C634300 ADDMOD XOR STOP CALLER ","sourceMap":"657:1315:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"SlotDerivation":{"abi":[],"devdoc":{"details":"Library for computing storage (and transient storage) locations from namespaces and deriving slots corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by the solidity language / compiler. See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.]. Example usage: ```solidity contract Example {     // Add the library methods     using StorageSlot for bytes32;     using SlotDerivation for bytes32;     // Declare a namespace     string private constant _NAMESPACE = \"<namespace>\" // eg. OpenZeppelin.Slot     function setValueInNamespace(uint256 key, address newValue) internal {         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;     }     function getValueInNamespace(uint256 key) internal view returns (address) {         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;     } } ``` TIP: Consider using this library along with {StorageSlot}. NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking upgrade safety will ignore the slots accessed through this library. _Available since v5.1._","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220098ea9591f0d16d2bcd115bd4f97080eed9e113fbd4921ba920e09b8e388166364736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD DUP15 0xA9 MSIZE 0x1F 0xD AND 0xD2 0xBC 0xD1 ISZERO 0xBD 0x4F SWAP8 ADDMOD 0xE 0xED SWAP15 GT EXTCODEHASH 0xBD BLOBHASH 0x21 0xBA SWAP3 0xE MULMOD 0xB8 0xE3 DUP9 AND PUSH4 0x64736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"1598:3723:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1598:3723:12;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220098ea9591f0d16d2bcd115bd4f97080eed9e113fbd4921ba920e09b8e388166364736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD DUP15 0xA9 MSIZE 0x1F 0xD AND 0xD2 0xBC 0xD1 ISZERO 0xBD 0x4F SWAP8 ADDMOD 0xE 0xED SWAP15 GT EXTCODEHASH 0xBD BLOBHASH 0x21 0xBA SWAP3 0xE MULMOD 0xB8 0xE3 DUP9 AND PUSH4 0x64736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"1598:3723:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for computing storage (and transient storage) locations from namespaces and deriving slots corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by the solidity language / compiler. See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.]. Example usage: ```solidity contract Example {     // Add the library methods     using StorageSlot for bytes32;     using SlotDerivation for bytes32;     // Declare a namespace     string private constant _NAMESPACE = \\\"<namespace>\\\" // eg. OpenZeppelin.Slot     function setValueInNamespace(uint256 key, address newValue) internal {         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;     }     function getValueInNamespace(uint256 key) internal view returns (address) {         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;     } } ``` TIP: Consider using this library along with {StorageSlot}. NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking upgrade safety will ignore the slots accessed through this library. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":\"SlotDerivation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"devdoc":{"details":"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204ab50920abfae362e3dbbf964b7d95a4213cd8e8e13b3f103e9c997636bcd98d64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBBASEFEE 0xB5 MULMOD KECCAK256 0xAB STATICCALL 0xE3 PUSH3 0xE3DBBF SWAP7 0x4B PUSH30 0x95A4213CD8E8E13B3F103E9C997636BCD98D64736F6C6343000818003300 ","sourceMap":"1407:2774:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1407:2774:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204ab50920abfae362e3dbbf964b7d95a4213cd8e8e13b3f103e9c997636bcd98d64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBBASEFEE 0xB5 MULMOD KECCAK256 0xAB STATICCALL 0xE3 PUSH3 0xE3DBBF SWAP7 0x4B PUSH30 0x95A4213CD8E8E13B3F103E9C997636BCD98D64736F6C6343000818003300 ","sourceMap":"1407:2774:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"devdoc":{"details":"String operations.","errors":{"StringsInsufficientHexLength(uint256,uint256)":[{"details":"The `value` string doesn't fit in the specified `length`."}],"StringsInvalidAddressFormat()":[{"details":"The string being parsed is not a properly formatted address."}],"StringsInvalidChar()":[{"details":"The string being parsed contains characters that are not in scope of the given base."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205de2fbf31a21e3cced3d682fd9fcb85896c56137fdd35db502753dd987057c9264736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TSTORE 0xE2 0xFB RETURN BYTE 0x21 0xE3 0xCC 0xED RETURNDATASIZE PUSH9 0x2FD9FCB85896C56137 REVERT 0xD3 TSTORE 0xB5 MUL PUSH22 0x3DD987057C9264736F6C634300081800330000000000 ","sourceMap":"297:16541:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;297:16541:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205de2fbf31a21e3cced3d682fd9fcb85896c56137fdd35db502753dd987057c9264736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TSTORE 0xE2 0xFB RETURN BYTE 0x21 0xE3 0xCC 0xED RETURNDATASIZE PUSH9 0x2FD9FCB85896C56137 REVERT 0xD3 TSTORE 0xB5 MUL PUSH22 0x3DD987057C9264736F6C634300081800330000000000 ","sourceMap":"297:16541:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220203dbf2bfd80280d2fffe672fb2265aeb50dfb11aa535f3217c667dee6b29bb464736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 RETURNDATASIZE 0xBF 0x2B REVERT DUP1 0x28 0xD 0x2F SELFDESTRUCT 0xE6 PUSH19 0xFB2265AEB50DFB11AA535F3217C667DEE6B29B 0xB4 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"281:28026:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:28026:17;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220203dbf2bfd80280d2fffe672fb2265aeb50dfb11aa535f3217c667dee6b29bb464736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 RETURNDATASIZE 0xBF 0x2B REVERT DUP1 0x28 0xD 0x2F SELFDESTRUCT 0xE6 PUSH19 0xFB2265AEB50DFB11AA535F3217C667DEE6B29B 0xB4 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"281:28026:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"devdoc":{"details":"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.","errors":{"SafeCastOverflowedIntDowncast(uint8,int256)":[{"details":"Value doesn't fit in an int of `bits` size."}],"SafeCastOverflowedIntToUint(int256)":[{"details":"An int value doesn't fit in an uint of `bits` size."}],"SafeCastOverflowedUintDowncast(uint8,uint256)":[{"details":"Value doesn't fit in an uint of `bits` size."}],"SafeCastOverflowedUintToInt(uint256)":[{"details":"An uint value doesn't fit in an int of `bits` size."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204005e5670eccce3cdc8895276c7f55cbb23905220798c53405eb274f4fc5216c64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH SDIV 0xE5 PUSH8 0xECCCE3CDC889527 PUSH13 0x7F55CBB23905220798C53405EB 0x27 0x4F 0x4F 0xC5 0x21 PUSH13 0x64736F6C634300081800330000 ","sourceMap":"769:34173:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:18;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204005e5670eccce3cdc8895276c7f55cbb23905220798c53405eb274f4fc5216c64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH SDIV 0xE5 PUSH8 0xECCCE3CDC889527 PUSH13 0x7F55CBB23905220798C53405EB 0x27 0x4F 0x4F 0xC5 0x21 PUSH13 0x64736F6C634300081800330000 ","sourceMap":"769:34173:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"devdoc":{"details":"Standard signed math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ef3f1a7f30b92eb9ab47a7c2987e0c17716a2d1c0bd8e48a7c1702bf9cfba6eb64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF EXTCODEHASH BYTE PUSH32 0x30B92EB9AB47A7C2987E0C17716A2D1C0BD8E48A7C1702BF9CFBA6EB64736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"258:2354:19:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;258:2354:19;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ef3f1a7f30b92eb9ab47a7c2987e0c17716a2d1c0bd8e48a7c1702bf9cfba6eb64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF EXTCODEHASH BYTE PUSH32 0x30B92EB9AB47A7C2987E0C17716A2D1C0BD8E48A7C1702BF9CFBA6EB64736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"258:2354:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/NFTCollection.sol":{"MultichainNFT":{"abi":[{"inputs":[{"internalType":"address","name":"_usdcAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newPriceETH","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newPriceUSDC","type":"uint256"}],"name":"PriceUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"creator","type":"address"},{"indexed":false,"internalType":"string","name":"promptText","type":"string"}],"name":"TokenMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getTokenMetadata","outputs":[{"components":[{"internalType":"string","name":"imageURI","type":"string"},{"internalType":"string","name":"promptText","type":"string"},{"internalType":"address","name":"creator","type":"address"}],"internalType":"struct MultichainNFT.TokenMetadata","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mintPriceETH","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mintPriceUSDC","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_imageURI","type":"string"},{"internalType":"string","name":"_promptText","type":"string"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"mintWithETH","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"string","name":"_imageURI","type":"string"},{"internalType":"string","name":"_promptText","type":"string"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"mintWithUSDC","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"newBaseURI","type":"string"}],"name":"setBaseURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokenMetadata","outputs":[{"internalType":"string","name":"imageURI","type":"string"},{"internalType":"string","name":"promptText","type":"string"},{"internalType":"address","name":"creator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newPriceETH","type":"uint256"},{"internalType":"uint256","name":"newPriceUSDC","type":"uint256"}],"name":"updatePrices","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newUSDCAddress","type":"address"}],"name":"updateUSDCAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"usdcToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawUSDC","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"errors":{"ERC1155InsufficientBalance(address,uint256,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC1155InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC1155InvalidArrayLength(uint256,uint256)":[{"details":"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.","params":{"idsLength":"Length of the array of token identifiers","valuesLength":"Length of the array of token amounts"}}],"ERC1155InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC1155InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC1155InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC1155MissingApprovalForAll(address,address)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","owner":"Address of the current owner of a token."}}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"events":{"ApprovalForAll(address,address,bool)":{"details":"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."},"TransferBatch(address,address,address,uint256[],uint256[])":{"details":"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."},"TransferSingle(address,address,address,uint256,uint256)":{"details":"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."},"URI(string,uint256)":{"details":"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."}},"kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"See {IERC1155-balanceOf}."},"balanceOfBatch(address[],uint256[])":{"details":"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."},"getTokenMetadata(uint256)":{"details":"Get the complete metadata for a token","params":{"tokenId":"The ID of the token"}},"isApprovedForAll(address,address)":{"details":"See {IERC1155-isApprovedForAll}."},"mintWithETH(string,string,uint256)":{"details":"Mint a new token with ETH payment","params":{"_amount":"Number of tokens to mint","_imageURI":"URI pointing to the PNG data","_promptText":"The AI prompt text used"}},"mintWithUSDC(string,string,uint256)":{"details":"Mint a new token with USDC payment","params":{"_amount":"Number of tokens to mint","_imageURI":"URI pointing to the PNG data","_promptText":"The AI prompt text used"}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"See {IERC1155-safeBatchTransferFrom}."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"See {IERC1155-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC1155-setApprovalForAll}."},"setBaseURI(string)":{"details":"Set the base URI for token metadata","params":{"newBaseURI":"New base URI"}},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"updatePrices(uint256,uint256)":{"details":"Update minting prices","params":{"newPriceETH":"New price in ETH","newPriceUSDC":"New price in USDC"}},"updateUSDCAddress(address)":{"details":"Update the USDC token contract address"},"uri(uint256)":{"details":"Override URI function to construct token URIs"},"withdrawETH()":{"details":"Withdraw ETH from the contract"},"withdrawUSDC()":{"details":"Withdraw USDC from the contract"}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_345":{"entryPoint":null,"id":345,"parameterSlots":1,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_7690":{"entryPoint":null,"id":7690,"parameterSlots":1,"returnSlots":0},"@_setURI_962":{"entryPoint":223,"id":962,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":241,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":323,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":455,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":540,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":395,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":373,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:3226:21","nodeType":"YulBlock","src":"0:3226:21","statements":[{"nativeSrc":"6:3:21","nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nativeSrc":"95:209:21","nodeType":"YulBlock","src":"95:209:21","statements":[{"body":{"nativeSrc":"141:16:21","nodeType":"YulBlock","src":"141:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"150:1:21","nodeType":"YulLiteral","src":"150:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"153:1:21","nodeType":"YulLiteral","src":"153:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"143:6:21","nodeType":"YulIdentifier","src":"143:6:21"},"nativeSrc":"143:12:21","nodeType":"YulFunctionCall","src":"143:12:21"},"nativeSrc":"143:12:21","nodeType":"YulExpressionStatement","src":"143:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"116:7:21","nodeType":"YulIdentifier","src":"116:7:21"},{"name":"headStart","nativeSrc":"125:9:21","nodeType":"YulIdentifier","src":"125:9:21"}],"functionName":{"name":"sub","nativeSrc":"112:3:21","nodeType":"YulIdentifier","src":"112:3:21"},"nativeSrc":"112:23:21","nodeType":"YulFunctionCall","src":"112:23:21"},{"kind":"number","nativeSrc":"137:2:21","nodeType":"YulLiteral","src":"137:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"108:3:21","nodeType":"YulIdentifier","src":"108:3:21"},"nativeSrc":"108:32:21","nodeType":"YulFunctionCall","src":"108:32:21"},"nativeSrc":"105:52:21","nodeType":"YulIf","src":"105:52:21"},{"nativeSrc":"166:29:21","nodeType":"YulVariableDeclaration","src":"166:29:21","value":{"arguments":[{"name":"headStart","nativeSrc":"185:9:21","nodeType":"YulIdentifier","src":"185:9:21"}],"functionName":{"name":"mload","nativeSrc":"179:5:21","nodeType":"YulIdentifier","src":"179:5:21"},"nativeSrc":"179:16:21","nodeType":"YulFunctionCall","src":"179:16:21"},"variables":[{"name":"value","nativeSrc":"170:5:21","nodeType":"YulTypedName","src":"170:5:21","type":""}]},{"body":{"nativeSrc":"258:16:21","nodeType":"YulBlock","src":"258:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"267:1:21","nodeType":"YulLiteral","src":"267:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"270:1:21","nodeType":"YulLiteral","src":"270:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"260:6:21","nodeType":"YulIdentifier","src":"260:6:21"},"nativeSrc":"260:12:21","nodeType":"YulFunctionCall","src":"260:12:21"},"nativeSrc":"260:12:21","nodeType":"YulExpressionStatement","src":"260:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"217:5:21","nodeType":"YulIdentifier","src":"217:5:21"},{"arguments":[{"name":"value","nativeSrc":"228:5:21","nodeType":"YulIdentifier","src":"228:5:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"243:3:21","nodeType":"YulLiteral","src":"243:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"248:1:21","nodeType":"YulLiteral","src":"248:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"239:3:21","nodeType":"YulIdentifier","src":"239:3:21"},"nativeSrc":"239:11:21","nodeType":"YulFunctionCall","src":"239:11:21"},{"kind":"number","nativeSrc":"252:1:21","nodeType":"YulLiteral","src":"252:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"235:3:21","nodeType":"YulIdentifier","src":"235:3:21"},"nativeSrc":"235:19:21","nodeType":"YulFunctionCall","src":"235:19:21"}],"functionName":{"name":"and","nativeSrc":"224:3:21","nodeType":"YulIdentifier","src":"224:3:21"},"nativeSrc":"224:31:21","nodeType":"YulFunctionCall","src":"224:31:21"}],"functionName":{"name":"eq","nativeSrc":"214:2:21","nodeType":"YulIdentifier","src":"214:2:21"},"nativeSrc":"214:42:21","nodeType":"YulFunctionCall","src":"214:42:21"}],"functionName":{"name":"iszero","nativeSrc":"207:6:21","nodeType":"YulIdentifier","src":"207:6:21"},"nativeSrc":"207:50:21","nodeType":"YulFunctionCall","src":"207:50:21"},"nativeSrc":"204:70:21","nodeType":"YulIf","src":"204:70:21"},{"nativeSrc":"283:15:21","nodeType":"YulAssignment","src":"283:15:21","value":{"name":"value","nativeSrc":"293:5:21","nodeType":"YulIdentifier","src":"293:5:21"},"variableNames":[{"name":"value0","nativeSrc":"283:6:21","nodeType":"YulIdentifier","src":"283:6:21"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"14:290:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"61:9:21","nodeType":"YulTypedName","src":"61:9:21","type":""},{"name":"dataEnd","nativeSrc":"72:7:21","nodeType":"YulTypedName","src":"72:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"84:6:21","nodeType":"YulTypedName","src":"84:6:21","type":""}],"src":"14:290:21"},{"body":{"nativeSrc":"410:102:21","nodeType":"YulBlock","src":"410:102:21","statements":[{"nativeSrc":"420:26:21","nodeType":"YulAssignment","src":"420:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"432:9:21","nodeType":"YulIdentifier","src":"432:9:21"},{"kind":"number","nativeSrc":"443:2:21","nodeType":"YulLiteral","src":"443:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"428:3:21","nodeType":"YulIdentifier","src":"428:3:21"},"nativeSrc":"428:18:21","nodeType":"YulFunctionCall","src":"428:18:21"},"variableNames":[{"name":"tail","nativeSrc":"420:4:21","nodeType":"YulIdentifier","src":"420:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"462:9:21","nodeType":"YulIdentifier","src":"462:9:21"},{"arguments":[{"name":"value0","nativeSrc":"477:6:21","nodeType":"YulIdentifier","src":"477:6:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"493:3:21","nodeType":"YulLiteral","src":"493:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"498:1:21","nodeType":"YulLiteral","src":"498:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"489:3:21","nodeType":"YulIdentifier","src":"489:3:21"},"nativeSrc":"489:11:21","nodeType":"YulFunctionCall","src":"489:11:21"},{"kind":"number","nativeSrc":"502:1:21","nodeType":"YulLiteral","src":"502:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"485:3:21","nodeType":"YulIdentifier","src":"485:3:21"},"nativeSrc":"485:19:21","nodeType":"YulFunctionCall","src":"485:19:21"}],"functionName":{"name":"and","nativeSrc":"473:3:21","nodeType":"YulIdentifier","src":"473:3:21"},"nativeSrc":"473:32:21","nodeType":"YulFunctionCall","src":"473:32:21"}],"functionName":{"name":"mstore","nativeSrc":"455:6:21","nodeType":"YulIdentifier","src":"455:6:21"},"nativeSrc":"455:51:21","nodeType":"YulFunctionCall","src":"455:51:21"},"nativeSrc":"455:51:21","nodeType":"YulExpressionStatement","src":"455:51:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"309:203:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"379:9:21","nodeType":"YulTypedName","src":"379:9:21","type":""},{"name":"value0","nativeSrc":"390:6:21","nodeType":"YulTypedName","src":"390:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"401:4:21","nodeType":"YulTypedName","src":"401:4:21","type":""}],"src":"309:203:21"},{"body":{"nativeSrc":"549:95:21","nodeType":"YulBlock","src":"549:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"566:1:21","nodeType":"YulLiteral","src":"566:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"573:3:21","nodeType":"YulLiteral","src":"573:3:21","type":"","value":"224"},{"kind":"number","nativeSrc":"578:10:21","nodeType":"YulLiteral","src":"578:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"569:3:21","nodeType":"YulIdentifier","src":"569:3:21"},"nativeSrc":"569:20:21","nodeType":"YulFunctionCall","src":"569:20:21"}],"functionName":{"name":"mstore","nativeSrc":"559:6:21","nodeType":"YulIdentifier","src":"559:6:21"},"nativeSrc":"559:31:21","nodeType":"YulFunctionCall","src":"559:31:21"},"nativeSrc":"559:31:21","nodeType":"YulExpressionStatement","src":"559:31:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"606:1:21","nodeType":"YulLiteral","src":"606:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"609:4:21","nodeType":"YulLiteral","src":"609:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"599:6:21","nodeType":"YulIdentifier","src":"599:6:21"},"nativeSrc":"599:15:21","nodeType":"YulFunctionCall","src":"599:15:21"},"nativeSrc":"599:15:21","nodeType":"YulExpressionStatement","src":"599:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"630:1:21","nodeType":"YulLiteral","src":"630:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"633:4:21","nodeType":"YulLiteral","src":"633:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"623:6:21","nodeType":"YulIdentifier","src":"623:6:21"},"nativeSrc":"623:15:21","nodeType":"YulFunctionCall","src":"623:15:21"},"nativeSrc":"623:15:21","nodeType":"YulExpressionStatement","src":"623:15:21"}]},"name":"panic_error_0x41","nativeSrc":"517:127:21","nodeType":"YulFunctionDefinition","src":"517:127:21"},{"body":{"nativeSrc":"704:325:21","nodeType":"YulBlock","src":"704:325:21","statements":[{"nativeSrc":"714:22:21","nodeType":"YulAssignment","src":"714:22:21","value":{"arguments":[{"kind":"number","nativeSrc":"728:1:21","nodeType":"YulLiteral","src":"728:1:21","type":"","value":"1"},{"name":"data","nativeSrc":"731:4:21","nodeType":"YulIdentifier","src":"731:4:21"}],"functionName":{"name":"shr","nativeSrc":"724:3:21","nodeType":"YulIdentifier","src":"724:3:21"},"nativeSrc":"724:12:21","nodeType":"YulFunctionCall","src":"724:12:21"},"variableNames":[{"name":"length","nativeSrc":"714:6:21","nodeType":"YulIdentifier","src":"714:6:21"}]},{"nativeSrc":"745:38:21","nodeType":"YulVariableDeclaration","src":"745:38:21","value":{"arguments":[{"name":"data","nativeSrc":"775:4:21","nodeType":"YulIdentifier","src":"775:4:21"},{"kind":"number","nativeSrc":"781:1:21","nodeType":"YulLiteral","src":"781:1:21","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"771:3:21","nodeType":"YulIdentifier","src":"771:3:21"},"nativeSrc":"771:12:21","nodeType":"YulFunctionCall","src":"771:12:21"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"749:18:21","nodeType":"YulTypedName","src":"749:18:21","type":""}]},{"body":{"nativeSrc":"822:31:21","nodeType":"YulBlock","src":"822:31:21","statements":[{"nativeSrc":"824:27:21","nodeType":"YulAssignment","src":"824:27:21","value":{"arguments":[{"name":"length","nativeSrc":"838:6:21","nodeType":"YulIdentifier","src":"838:6:21"},{"kind":"number","nativeSrc":"846:4:21","nodeType":"YulLiteral","src":"846:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"834:3:21","nodeType":"YulIdentifier","src":"834:3:21"},"nativeSrc":"834:17:21","nodeType":"YulFunctionCall","src":"834:17:21"},"variableNames":[{"name":"length","nativeSrc":"824:6:21","nodeType":"YulIdentifier","src":"824:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"802:18:21","nodeType":"YulIdentifier","src":"802:18:21"}],"functionName":{"name":"iszero","nativeSrc":"795:6:21","nodeType":"YulIdentifier","src":"795:6:21"},"nativeSrc":"795:26:21","nodeType":"YulFunctionCall","src":"795:26:21"},"nativeSrc":"792:61:21","nodeType":"YulIf","src":"792:61:21"},{"body":{"nativeSrc":"912:111:21","nodeType":"YulBlock","src":"912:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"933:1:21","nodeType":"YulLiteral","src":"933:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"940:3:21","nodeType":"YulLiteral","src":"940:3:21","type":"","value":"224"},{"kind":"number","nativeSrc":"945:10:21","nodeType":"YulLiteral","src":"945:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"936:3:21","nodeType":"YulIdentifier","src":"936:3:21"},"nativeSrc":"936:20:21","nodeType":"YulFunctionCall","src":"936:20:21"}],"functionName":{"name":"mstore","nativeSrc":"926:6:21","nodeType":"YulIdentifier","src":"926:6:21"},"nativeSrc":"926:31:21","nodeType":"YulFunctionCall","src":"926:31:21"},"nativeSrc":"926:31:21","nodeType":"YulExpressionStatement","src":"926:31:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"977:1:21","nodeType":"YulLiteral","src":"977:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"980:4:21","nodeType":"YulLiteral","src":"980:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"970:6:21","nodeType":"YulIdentifier","src":"970:6:21"},"nativeSrc":"970:15:21","nodeType":"YulFunctionCall","src":"970:15:21"},"nativeSrc":"970:15:21","nodeType":"YulExpressionStatement","src":"970:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1005:1:21","nodeType":"YulLiteral","src":"1005:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1008:4:21","nodeType":"YulLiteral","src":"1008:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"998:6:21","nodeType":"YulIdentifier","src":"998:6:21"},"nativeSrc":"998:15:21","nodeType":"YulFunctionCall","src":"998:15:21"},"nativeSrc":"998:15:21","nodeType":"YulExpressionStatement","src":"998:15:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"868:18:21","nodeType":"YulIdentifier","src":"868:18:21"},{"arguments":[{"name":"length","nativeSrc":"891:6:21","nodeType":"YulIdentifier","src":"891:6:21"},{"kind":"number","nativeSrc":"899:2:21","nodeType":"YulLiteral","src":"899:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"888:2:21","nodeType":"YulIdentifier","src":"888:2:21"},"nativeSrc":"888:14:21","nodeType":"YulFunctionCall","src":"888:14:21"}],"functionName":{"name":"eq","nativeSrc":"865:2:21","nodeType":"YulIdentifier","src":"865:2:21"},"nativeSrc":"865:38:21","nodeType":"YulFunctionCall","src":"865:38:21"},"nativeSrc":"862:161:21","nodeType":"YulIf","src":"862:161:21"}]},"name":"extract_byte_array_length","nativeSrc":"649:380:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"684:4:21","nodeType":"YulTypedName","src":"684:4:21","type":""}],"returnVariables":[{"name":"length","nativeSrc":"693:6:21","nodeType":"YulTypedName","src":"693:6:21","type":""}],"src":"649:380:21"},{"body":{"nativeSrc":"1090:65:21","nodeType":"YulBlock","src":"1090:65:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1107:1:21","nodeType":"YulLiteral","src":"1107:1:21","type":"","value":"0"},{"name":"ptr","nativeSrc":"1110:3:21","nodeType":"YulIdentifier","src":"1110:3:21"}],"functionName":{"name":"mstore","nativeSrc":"1100:6:21","nodeType":"YulIdentifier","src":"1100:6:21"},"nativeSrc":"1100:14:21","nodeType":"YulFunctionCall","src":"1100:14:21"},"nativeSrc":"1100:14:21","nodeType":"YulExpressionStatement","src":"1100:14:21"},{"nativeSrc":"1123:26:21","nodeType":"YulAssignment","src":"1123:26:21","value":{"arguments":[{"kind":"number","nativeSrc":"1141:1:21","nodeType":"YulLiteral","src":"1141:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1144:4:21","nodeType":"YulLiteral","src":"1144:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"1131:9:21","nodeType":"YulIdentifier","src":"1131:9:21"},"nativeSrc":"1131:18:21","nodeType":"YulFunctionCall","src":"1131:18:21"},"variableNames":[{"name":"data","nativeSrc":"1123:4:21","nodeType":"YulIdentifier","src":"1123:4:21"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"1034:121:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"1073:3:21","nodeType":"YulTypedName","src":"1073:3:21","type":""}],"returnVariables":[{"name":"data","nativeSrc":"1081:4:21","nodeType":"YulTypedName","src":"1081:4:21","type":""}],"src":"1034:121:21"},{"body":{"nativeSrc":"1241:462:21","nodeType":"YulBlock","src":"1241:462:21","statements":[{"body":{"nativeSrc":"1274:423:21","nodeType":"YulBlock","src":"1274:423:21","statements":[{"nativeSrc":"1288:11:21","nodeType":"YulVariableDeclaration","src":"1288:11:21","value":{"kind":"number","nativeSrc":"1298:1:21","nodeType":"YulLiteral","src":"1298:1:21","type":"","value":"0"},"variables":[{"name":"_1","nativeSrc":"1292:2:21","nodeType":"YulTypedName","src":"1292:2:21","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1319:1:21","nodeType":"YulLiteral","src":"1319:1:21","type":"","value":"0"},{"name":"array","nativeSrc":"1322:5:21","nodeType":"YulIdentifier","src":"1322:5:21"}],"functionName":{"name":"mstore","nativeSrc":"1312:6:21","nodeType":"YulIdentifier","src":"1312:6:21"},"nativeSrc":"1312:16:21","nodeType":"YulFunctionCall","src":"1312:16:21"},"nativeSrc":"1312:16:21","nodeType":"YulExpressionStatement","src":"1312:16:21"},{"nativeSrc":"1341:30:21","nodeType":"YulVariableDeclaration","src":"1341:30:21","value":{"arguments":[{"kind":"number","nativeSrc":"1363:1:21","nodeType":"YulLiteral","src":"1363:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1366:4:21","nodeType":"YulLiteral","src":"1366:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"1353:9:21","nodeType":"YulIdentifier","src":"1353:9:21"},"nativeSrc":"1353:18:21","nodeType":"YulFunctionCall","src":"1353:18:21"},"variables":[{"name":"data","nativeSrc":"1345:4:21","nodeType":"YulTypedName","src":"1345:4:21","type":""}]},{"nativeSrc":"1384:57:21","nodeType":"YulVariableDeclaration","src":"1384:57:21","value":{"arguments":[{"name":"data","nativeSrc":"1407:4:21","nodeType":"YulIdentifier","src":"1407:4:21"},{"arguments":[{"kind":"number","nativeSrc":"1417:1:21","nodeType":"YulLiteral","src":"1417:1:21","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"1424:10:21","nodeType":"YulIdentifier","src":"1424:10:21"},{"kind":"number","nativeSrc":"1436:2:21","nodeType":"YulLiteral","src":"1436:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1420:3:21","nodeType":"YulIdentifier","src":"1420:3:21"},"nativeSrc":"1420:19:21","nodeType":"YulFunctionCall","src":"1420:19:21"}],"functionName":{"name":"shr","nativeSrc":"1413:3:21","nodeType":"YulIdentifier","src":"1413:3:21"},"nativeSrc":"1413:27:21","nodeType":"YulFunctionCall","src":"1413:27:21"}],"functionName":{"name":"add","nativeSrc":"1403:3:21","nodeType":"YulIdentifier","src":"1403:3:21"},"nativeSrc":"1403:38:21","nodeType":"YulFunctionCall","src":"1403:38:21"},"variables":[{"name":"deleteStart","nativeSrc":"1388:11:21","nodeType":"YulTypedName","src":"1388:11:21","type":""}]},{"body":{"nativeSrc":"1478:23:21","nodeType":"YulBlock","src":"1478:23:21","statements":[{"nativeSrc":"1480:19:21","nodeType":"YulAssignment","src":"1480:19:21","value":{"name":"data","nativeSrc":"1495:4:21","nodeType":"YulIdentifier","src":"1495:4:21"},"variableNames":[{"name":"deleteStart","nativeSrc":"1480:11:21","nodeType":"YulIdentifier","src":"1480:11:21"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"1460:10:21","nodeType":"YulIdentifier","src":"1460:10:21"},{"kind":"number","nativeSrc":"1472:4:21","nodeType":"YulLiteral","src":"1472:4:21","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"1457:2:21","nodeType":"YulIdentifier","src":"1457:2:21"},"nativeSrc":"1457:20:21","nodeType":"YulFunctionCall","src":"1457:20:21"},"nativeSrc":"1454:47:21","nodeType":"YulIf","src":"1454:47:21"},{"nativeSrc":"1514:41:21","nodeType":"YulVariableDeclaration","src":"1514:41:21","value":{"arguments":[{"name":"data","nativeSrc":"1528:4:21","nodeType":"YulIdentifier","src":"1528:4:21"},{"arguments":[{"kind":"number","nativeSrc":"1538:1:21","nodeType":"YulLiteral","src":"1538:1:21","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"1545:3:21","nodeType":"YulIdentifier","src":"1545:3:21"},{"kind":"number","nativeSrc":"1550:2:21","nodeType":"YulLiteral","src":"1550:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1541:3:21","nodeType":"YulIdentifier","src":"1541:3:21"},"nativeSrc":"1541:12:21","nodeType":"YulFunctionCall","src":"1541:12:21"}],"functionName":{"name":"shr","nativeSrc":"1534:3:21","nodeType":"YulIdentifier","src":"1534:3:21"},"nativeSrc":"1534:20:21","nodeType":"YulFunctionCall","src":"1534:20:21"}],"functionName":{"name":"add","nativeSrc":"1524:3:21","nodeType":"YulIdentifier","src":"1524:3:21"},"nativeSrc":"1524:31:21","nodeType":"YulFunctionCall","src":"1524:31:21"},"variables":[{"name":"_2","nativeSrc":"1518:2:21","nodeType":"YulTypedName","src":"1518:2:21","type":""}]},{"nativeSrc":"1568:24:21","nodeType":"YulVariableDeclaration","src":"1568:24:21","value":{"name":"deleteStart","nativeSrc":"1581:11:21","nodeType":"YulIdentifier","src":"1581:11:21"},"variables":[{"name":"start","nativeSrc":"1572:5:21","nodeType":"YulTypedName","src":"1572:5:21","type":""}]},{"body":{"nativeSrc":"1666:21:21","nodeType":"YulBlock","src":"1666:21:21","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"1675:5:21","nodeType":"YulIdentifier","src":"1675:5:21"},{"name":"_1","nativeSrc":"1682:2:21","nodeType":"YulIdentifier","src":"1682:2:21"}],"functionName":{"name":"sstore","nativeSrc":"1668:6:21","nodeType":"YulIdentifier","src":"1668:6:21"},"nativeSrc":"1668:17:21","nodeType":"YulFunctionCall","src":"1668:17:21"},"nativeSrc":"1668:17:21","nodeType":"YulExpressionStatement","src":"1668:17:21"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"1616:5:21","nodeType":"YulIdentifier","src":"1616:5:21"},{"name":"_2","nativeSrc":"1623:2:21","nodeType":"YulIdentifier","src":"1623:2:21"}],"functionName":{"name":"lt","nativeSrc":"1613:2:21","nodeType":"YulIdentifier","src":"1613:2:21"},"nativeSrc":"1613:13:21","nodeType":"YulFunctionCall","src":"1613:13:21"},"nativeSrc":"1605:82:21","nodeType":"YulForLoop","post":{"nativeSrc":"1627:26:21","nodeType":"YulBlock","src":"1627:26:21","statements":[{"nativeSrc":"1629:22:21","nodeType":"YulAssignment","src":"1629:22:21","value":{"arguments":[{"name":"start","nativeSrc":"1642:5:21","nodeType":"YulIdentifier","src":"1642:5:21"},{"kind":"number","nativeSrc":"1649:1:21","nodeType":"YulLiteral","src":"1649:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"1638:3:21","nodeType":"YulIdentifier","src":"1638:3:21"},"nativeSrc":"1638:13:21","nodeType":"YulFunctionCall","src":"1638:13:21"},"variableNames":[{"name":"start","nativeSrc":"1629:5:21","nodeType":"YulIdentifier","src":"1629:5:21"}]}]},"pre":{"nativeSrc":"1609:3:21","nodeType":"YulBlock","src":"1609:3:21","statements":[]},"src":"1605:82:21"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"1257:3:21","nodeType":"YulIdentifier","src":"1257:3:21"},{"kind":"number","nativeSrc":"1262:2:21","nodeType":"YulLiteral","src":"1262:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"1254:2:21","nodeType":"YulIdentifier","src":"1254:2:21"},"nativeSrc":"1254:11:21","nodeType":"YulFunctionCall","src":"1254:11:21"},"nativeSrc":"1251:446:21","nodeType":"YulIf","src":"1251:446:21"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"1160:543:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"1213:5:21","nodeType":"YulTypedName","src":"1213:5:21","type":""},{"name":"len","nativeSrc":"1220:3:21","nodeType":"YulTypedName","src":"1220:3:21","type":""},{"name":"startIndex","nativeSrc":"1225:10:21","nodeType":"YulTypedName","src":"1225:10:21","type":""}],"src":"1160:543:21"},{"body":{"nativeSrc":"1793:81:21","nodeType":"YulBlock","src":"1793:81:21","statements":[{"nativeSrc":"1803:65:21","nodeType":"YulAssignment","src":"1803:65:21","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"1818:4:21","nodeType":"YulIdentifier","src":"1818:4:21"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1836:1:21","nodeType":"YulLiteral","src":"1836:1:21","type":"","value":"3"},{"name":"len","nativeSrc":"1839:3:21","nodeType":"YulIdentifier","src":"1839:3:21"}],"functionName":{"name":"shl","nativeSrc":"1832:3:21","nodeType":"YulIdentifier","src":"1832:3:21"},"nativeSrc":"1832:11:21","nodeType":"YulFunctionCall","src":"1832:11:21"},{"arguments":[{"kind":"number","nativeSrc":"1849:1:21","nodeType":"YulLiteral","src":"1849:1:21","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1845:3:21","nodeType":"YulIdentifier","src":"1845:3:21"},"nativeSrc":"1845:6:21","nodeType":"YulFunctionCall","src":"1845:6:21"}],"functionName":{"name":"shr","nativeSrc":"1828:3:21","nodeType":"YulIdentifier","src":"1828:3:21"},"nativeSrc":"1828:24:21","nodeType":"YulFunctionCall","src":"1828:24:21"}],"functionName":{"name":"not","nativeSrc":"1824:3:21","nodeType":"YulIdentifier","src":"1824:3:21"},"nativeSrc":"1824:29:21","nodeType":"YulFunctionCall","src":"1824:29:21"}],"functionName":{"name":"and","nativeSrc":"1814:3:21","nodeType":"YulIdentifier","src":"1814:3:21"},"nativeSrc":"1814:40:21","nodeType":"YulFunctionCall","src":"1814:40:21"},{"arguments":[{"kind":"number","nativeSrc":"1860:1:21","nodeType":"YulLiteral","src":"1860:1:21","type":"","value":"1"},{"name":"len","nativeSrc":"1863:3:21","nodeType":"YulIdentifier","src":"1863:3:21"}],"functionName":{"name":"shl","nativeSrc":"1856:3:21","nodeType":"YulIdentifier","src":"1856:3:21"},"nativeSrc":"1856:11:21","nodeType":"YulFunctionCall","src":"1856:11:21"}],"functionName":{"name":"or","nativeSrc":"1811:2:21","nodeType":"YulIdentifier","src":"1811:2:21"},"nativeSrc":"1811:57:21","nodeType":"YulFunctionCall","src":"1811:57:21"},"variableNames":[{"name":"used","nativeSrc":"1803:4:21","nodeType":"YulIdentifier","src":"1803:4:21"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"1708:166:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"1770:4:21","nodeType":"YulTypedName","src":"1770:4:21","type":""},{"name":"len","nativeSrc":"1776:3:21","nodeType":"YulTypedName","src":"1776:3:21","type":""}],"returnVariables":[{"name":"used","nativeSrc":"1784:4:21","nodeType":"YulTypedName","src":"1784:4:21","type":""}],"src":"1708:166:21"},{"body":{"nativeSrc":"1975:1249:21","nodeType":"YulBlock","src":"1975:1249:21","statements":[{"nativeSrc":"1985:24:21","nodeType":"YulVariableDeclaration","src":"1985:24:21","value":{"arguments":[{"name":"src","nativeSrc":"2005:3:21","nodeType":"YulIdentifier","src":"2005:3:21"}],"functionName":{"name":"mload","nativeSrc":"1999:5:21","nodeType":"YulIdentifier","src":"1999:5:21"},"nativeSrc":"1999:10:21","nodeType":"YulFunctionCall","src":"1999:10:21"},"variables":[{"name":"newLen","nativeSrc":"1989:6:21","nodeType":"YulTypedName","src":"1989:6:21","type":""}]},{"body":{"nativeSrc":"2052:22:21","nodeType":"YulBlock","src":"2052:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"2054:16:21","nodeType":"YulIdentifier","src":"2054:16:21"},"nativeSrc":"2054:18:21","nodeType":"YulFunctionCall","src":"2054:18:21"},"nativeSrc":"2054:18:21","nodeType":"YulExpressionStatement","src":"2054:18:21"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"2024:6:21","nodeType":"YulIdentifier","src":"2024:6:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2040:2:21","nodeType":"YulLiteral","src":"2040:2:21","type":"","value":"64"},{"kind":"number","nativeSrc":"2044:1:21","nodeType":"YulLiteral","src":"2044:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2036:3:21","nodeType":"YulIdentifier","src":"2036:3:21"},"nativeSrc":"2036:10:21","nodeType":"YulFunctionCall","src":"2036:10:21"},{"kind":"number","nativeSrc":"2048:1:21","nodeType":"YulLiteral","src":"2048:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2032:3:21","nodeType":"YulIdentifier","src":"2032:3:21"},"nativeSrc":"2032:18:21","nodeType":"YulFunctionCall","src":"2032:18:21"}],"functionName":{"name":"gt","nativeSrc":"2021:2:21","nodeType":"YulIdentifier","src":"2021:2:21"},"nativeSrc":"2021:30:21","nodeType":"YulFunctionCall","src":"2021:30:21"},"nativeSrc":"2018:56:21","nodeType":"YulIf","src":"2018:56:21"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2127:4:21","nodeType":"YulIdentifier","src":"2127:4:21"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"2165:4:21","nodeType":"YulIdentifier","src":"2165:4:21"}],"functionName":{"name":"sload","nativeSrc":"2159:5:21","nodeType":"YulIdentifier","src":"2159:5:21"},"nativeSrc":"2159:11:21","nodeType":"YulFunctionCall","src":"2159:11:21"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"2133:25:21","nodeType":"YulIdentifier","src":"2133:25:21"},"nativeSrc":"2133:38:21","nodeType":"YulFunctionCall","src":"2133:38:21"},{"name":"newLen","nativeSrc":"2173:6:21","nodeType":"YulIdentifier","src":"2173:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"2083:43:21","nodeType":"YulIdentifier","src":"2083:43:21"},"nativeSrc":"2083:97:21","nodeType":"YulFunctionCall","src":"2083:97:21"},"nativeSrc":"2083:97:21","nodeType":"YulExpressionStatement","src":"2083:97:21"},{"nativeSrc":"2189:18:21","nodeType":"YulVariableDeclaration","src":"2189:18:21","value":{"kind":"number","nativeSrc":"2206:1:21","nodeType":"YulLiteral","src":"2206:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"2193:9:21","nodeType":"YulTypedName","src":"2193:9:21","type":""}]},{"nativeSrc":"2216:23:21","nodeType":"YulVariableDeclaration","src":"2216:23:21","value":{"kind":"number","nativeSrc":"2235:4:21","nodeType":"YulLiteral","src":"2235:4:21","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nativeSrc":"2220:11:21","nodeType":"YulTypedName","src":"2220:11:21","type":""}]},{"nativeSrc":"2248:17:21","nodeType":"YulAssignment","src":"2248:17:21","value":{"kind":"number","nativeSrc":"2261:4:21","nodeType":"YulLiteral","src":"2261:4:21","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"2248:9:21","nodeType":"YulIdentifier","src":"2248:9:21"}]},{"cases":[{"body":{"nativeSrc":"2311:656:21","nodeType":"YulBlock","src":"2311:656:21","statements":[{"nativeSrc":"2325:35:21","nodeType":"YulVariableDeclaration","src":"2325:35:21","value":{"arguments":[{"name":"newLen","nativeSrc":"2344:6:21","nodeType":"YulIdentifier","src":"2344:6:21"},{"arguments":[{"kind":"number","nativeSrc":"2356:2:21","nodeType":"YulLiteral","src":"2356:2:21","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2352:3:21","nodeType":"YulIdentifier","src":"2352:3:21"},"nativeSrc":"2352:7:21","nodeType":"YulFunctionCall","src":"2352:7:21"}],"functionName":{"name":"and","nativeSrc":"2340:3:21","nodeType":"YulIdentifier","src":"2340:3:21"},"nativeSrc":"2340:20:21","nodeType":"YulFunctionCall","src":"2340:20:21"},"variables":[{"name":"loopEnd","nativeSrc":"2329:7:21","nodeType":"YulTypedName","src":"2329:7:21","type":""}]},{"nativeSrc":"2373:49:21","nodeType":"YulVariableDeclaration","src":"2373:49:21","value":{"arguments":[{"name":"slot","nativeSrc":"2417:4:21","nodeType":"YulIdentifier","src":"2417:4:21"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"2387:29:21","nodeType":"YulIdentifier","src":"2387:29:21"},"nativeSrc":"2387:35:21","nodeType":"YulFunctionCall","src":"2387:35:21"},"variables":[{"name":"dstPtr","nativeSrc":"2377:6:21","nodeType":"YulTypedName","src":"2377:6:21","type":""}]},{"nativeSrc":"2435:10:21","nodeType":"YulVariableDeclaration","src":"2435:10:21","value":{"kind":"number","nativeSrc":"2444:1:21","nodeType":"YulLiteral","src":"2444:1:21","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"2439:1:21","nodeType":"YulTypedName","src":"2439:1:21","type":""}]},{"body":{"nativeSrc":"2522:172:21","nodeType":"YulBlock","src":"2522:172:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"2547:6:21","nodeType":"YulIdentifier","src":"2547:6:21"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2565:3:21","nodeType":"YulIdentifier","src":"2565:3:21"},{"name":"srcOffset","nativeSrc":"2570:9:21","nodeType":"YulIdentifier","src":"2570:9:21"}],"functionName":{"name":"add","nativeSrc":"2561:3:21","nodeType":"YulIdentifier","src":"2561:3:21"},"nativeSrc":"2561:19:21","nodeType":"YulFunctionCall","src":"2561:19:21"}],"functionName":{"name":"mload","nativeSrc":"2555:5:21","nodeType":"YulIdentifier","src":"2555:5:21"},"nativeSrc":"2555:26:21","nodeType":"YulFunctionCall","src":"2555:26:21"}],"functionName":{"name":"sstore","nativeSrc":"2540:6:21","nodeType":"YulIdentifier","src":"2540:6:21"},"nativeSrc":"2540:42:21","nodeType":"YulFunctionCall","src":"2540:42:21"},"nativeSrc":"2540:42:21","nodeType":"YulExpressionStatement","src":"2540:42:21"},{"nativeSrc":"2599:24:21","nodeType":"YulAssignment","src":"2599:24:21","value":{"arguments":[{"name":"dstPtr","nativeSrc":"2613:6:21","nodeType":"YulIdentifier","src":"2613:6:21"},{"kind":"number","nativeSrc":"2621:1:21","nodeType":"YulLiteral","src":"2621:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2609:3:21","nodeType":"YulIdentifier","src":"2609:3:21"},"nativeSrc":"2609:14:21","nodeType":"YulFunctionCall","src":"2609:14:21"},"variableNames":[{"name":"dstPtr","nativeSrc":"2599:6:21","nodeType":"YulIdentifier","src":"2599:6:21"}]},{"nativeSrc":"2640:40:21","nodeType":"YulAssignment","src":"2640:40:21","value":{"arguments":[{"name":"srcOffset","nativeSrc":"2657:9:21","nodeType":"YulIdentifier","src":"2657:9:21"},{"name":"srcOffset_1","nativeSrc":"2668:11:21","nodeType":"YulIdentifier","src":"2668:11:21"}],"functionName":{"name":"add","nativeSrc":"2653:3:21","nodeType":"YulIdentifier","src":"2653:3:21"},"nativeSrc":"2653:27:21","nodeType":"YulFunctionCall","src":"2653:27:21"},"variableNames":[{"name":"srcOffset","nativeSrc":"2640:9:21","nodeType":"YulIdentifier","src":"2640:9:21"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"2469:1:21","nodeType":"YulIdentifier","src":"2469:1:21"},{"name":"loopEnd","nativeSrc":"2472:7:21","nodeType":"YulIdentifier","src":"2472:7:21"}],"functionName":{"name":"lt","nativeSrc":"2466:2:21","nodeType":"YulIdentifier","src":"2466:2:21"},"nativeSrc":"2466:14:21","nodeType":"YulFunctionCall","src":"2466:14:21"},"nativeSrc":"2458:236:21","nodeType":"YulForLoop","post":{"nativeSrc":"2481:28:21","nodeType":"YulBlock","src":"2481:28:21","statements":[{"nativeSrc":"2483:24:21","nodeType":"YulAssignment","src":"2483:24:21","value":{"arguments":[{"name":"i","nativeSrc":"2492:1:21","nodeType":"YulIdentifier","src":"2492:1:21"},{"name":"srcOffset_1","nativeSrc":"2495:11:21","nodeType":"YulIdentifier","src":"2495:11:21"}],"functionName":{"name":"add","nativeSrc":"2488:3:21","nodeType":"YulIdentifier","src":"2488:3:21"},"nativeSrc":"2488:19:21","nodeType":"YulFunctionCall","src":"2488:19:21"},"variableNames":[{"name":"i","nativeSrc":"2483:1:21","nodeType":"YulIdentifier","src":"2483:1:21"}]}]},"pre":{"nativeSrc":"2462:3:21","nodeType":"YulBlock","src":"2462:3:21","statements":[]},"src":"2458:236:21"},{"body":{"nativeSrc":"2742:166:21","nodeType":"YulBlock","src":"2742:166:21","statements":[{"nativeSrc":"2760:43:21","nodeType":"YulVariableDeclaration","src":"2760:43:21","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2787:3:21","nodeType":"YulIdentifier","src":"2787:3:21"},{"name":"srcOffset","nativeSrc":"2792:9:21","nodeType":"YulIdentifier","src":"2792:9:21"}],"functionName":{"name":"add","nativeSrc":"2783:3:21","nodeType":"YulIdentifier","src":"2783:3:21"},"nativeSrc":"2783:19:21","nodeType":"YulFunctionCall","src":"2783:19:21"}],"functionName":{"name":"mload","nativeSrc":"2777:5:21","nodeType":"YulIdentifier","src":"2777:5:21"},"nativeSrc":"2777:26:21","nodeType":"YulFunctionCall","src":"2777:26:21"},"variables":[{"name":"lastValue","nativeSrc":"2764:9:21","nodeType":"YulTypedName","src":"2764:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"2827:6:21","nodeType":"YulIdentifier","src":"2827:6:21"},{"arguments":[{"name":"lastValue","nativeSrc":"2839:9:21","nodeType":"YulIdentifier","src":"2839:9:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2866:1:21","nodeType":"YulLiteral","src":"2866:1:21","type":"","value":"3"},{"name":"newLen","nativeSrc":"2869:6:21","nodeType":"YulIdentifier","src":"2869:6:21"}],"functionName":{"name":"shl","nativeSrc":"2862:3:21","nodeType":"YulIdentifier","src":"2862:3:21"},"nativeSrc":"2862:14:21","nodeType":"YulFunctionCall","src":"2862:14:21"},{"kind":"number","nativeSrc":"2878:3:21","nodeType":"YulLiteral","src":"2878:3:21","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"2858:3:21","nodeType":"YulIdentifier","src":"2858:3:21"},"nativeSrc":"2858:24:21","nodeType":"YulFunctionCall","src":"2858:24:21"},{"arguments":[{"kind":"number","nativeSrc":"2888:1:21","nodeType":"YulLiteral","src":"2888:1:21","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2884:3:21","nodeType":"YulIdentifier","src":"2884:3:21"},"nativeSrc":"2884:6:21","nodeType":"YulFunctionCall","src":"2884:6:21"}],"functionName":{"name":"shr","nativeSrc":"2854:3:21","nodeType":"YulIdentifier","src":"2854:3:21"},"nativeSrc":"2854:37:21","nodeType":"YulFunctionCall","src":"2854:37:21"}],"functionName":{"name":"not","nativeSrc":"2850:3:21","nodeType":"YulIdentifier","src":"2850:3:21"},"nativeSrc":"2850:42:21","nodeType":"YulFunctionCall","src":"2850:42:21"}],"functionName":{"name":"and","nativeSrc":"2835:3:21","nodeType":"YulIdentifier","src":"2835:3:21"},"nativeSrc":"2835:58:21","nodeType":"YulFunctionCall","src":"2835:58:21"}],"functionName":{"name":"sstore","nativeSrc":"2820:6:21","nodeType":"YulIdentifier","src":"2820:6:21"},"nativeSrc":"2820:74:21","nodeType":"YulFunctionCall","src":"2820:74:21"},"nativeSrc":"2820:74:21","nodeType":"YulExpressionStatement","src":"2820:74:21"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"2713:7:21","nodeType":"YulIdentifier","src":"2713:7:21"},{"name":"newLen","nativeSrc":"2722:6:21","nodeType":"YulIdentifier","src":"2722:6:21"}],"functionName":{"name":"lt","nativeSrc":"2710:2:21","nodeType":"YulIdentifier","src":"2710:2:21"},"nativeSrc":"2710:19:21","nodeType":"YulFunctionCall","src":"2710:19:21"},"nativeSrc":"2707:201:21","nodeType":"YulIf","src":"2707:201:21"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2928:4:21","nodeType":"YulIdentifier","src":"2928:4:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2942:1:21","nodeType":"YulLiteral","src":"2942:1:21","type":"","value":"1"},{"name":"newLen","nativeSrc":"2945:6:21","nodeType":"YulIdentifier","src":"2945:6:21"}],"functionName":{"name":"shl","nativeSrc":"2938:3:21","nodeType":"YulIdentifier","src":"2938:3:21"},"nativeSrc":"2938:14:21","nodeType":"YulFunctionCall","src":"2938:14:21"},{"kind":"number","nativeSrc":"2954:1:21","nodeType":"YulLiteral","src":"2954:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2934:3:21","nodeType":"YulIdentifier","src":"2934:3:21"},"nativeSrc":"2934:22:21","nodeType":"YulFunctionCall","src":"2934:22:21"}],"functionName":{"name":"sstore","nativeSrc":"2921:6:21","nodeType":"YulIdentifier","src":"2921:6:21"},"nativeSrc":"2921:36:21","nodeType":"YulFunctionCall","src":"2921:36:21"},"nativeSrc":"2921:36:21","nodeType":"YulExpressionStatement","src":"2921:36:21"}]},"nativeSrc":"2304:663:21","nodeType":"YulCase","src":"2304:663:21","value":{"kind":"number","nativeSrc":"2309:1:21","nodeType":"YulLiteral","src":"2309:1:21","type":"","value":"1"}},{"body":{"nativeSrc":"2984:234:21","nodeType":"YulBlock","src":"2984:234:21","statements":[{"nativeSrc":"2998:14:21","nodeType":"YulVariableDeclaration","src":"2998:14:21","value":{"kind":"number","nativeSrc":"3011:1:21","nodeType":"YulLiteral","src":"3011:1:21","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"3002:5:21","nodeType":"YulTypedName","src":"3002:5:21","type":""}]},{"body":{"nativeSrc":"3047:67:21","nodeType":"YulBlock","src":"3047:67:21","statements":[{"nativeSrc":"3065:35:21","nodeType":"YulAssignment","src":"3065:35:21","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3084:3:21","nodeType":"YulIdentifier","src":"3084:3:21"},{"name":"srcOffset","nativeSrc":"3089:9:21","nodeType":"YulIdentifier","src":"3089:9:21"}],"functionName":{"name":"add","nativeSrc":"3080:3:21","nodeType":"YulIdentifier","src":"3080:3:21"},"nativeSrc":"3080:19:21","nodeType":"YulFunctionCall","src":"3080:19:21"}],"functionName":{"name":"mload","nativeSrc":"3074:5:21","nodeType":"YulIdentifier","src":"3074:5:21"},"nativeSrc":"3074:26:21","nodeType":"YulFunctionCall","src":"3074:26:21"},"variableNames":[{"name":"value","nativeSrc":"3065:5:21","nodeType":"YulIdentifier","src":"3065:5:21"}]}]},"condition":{"name":"newLen","nativeSrc":"3028:6:21","nodeType":"YulIdentifier","src":"3028:6:21"},"nativeSrc":"3025:89:21","nodeType":"YulIf","src":"3025:89:21"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3134:4:21","nodeType":"YulIdentifier","src":"3134:4:21"},{"arguments":[{"name":"value","nativeSrc":"3193:5:21","nodeType":"YulIdentifier","src":"3193:5:21"},{"name":"newLen","nativeSrc":"3200:6:21","nodeType":"YulIdentifier","src":"3200:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"3140:52:21","nodeType":"YulIdentifier","src":"3140:52:21"},"nativeSrc":"3140:67:21","nodeType":"YulFunctionCall","src":"3140:67:21"}],"functionName":{"name":"sstore","nativeSrc":"3127:6:21","nodeType":"YulIdentifier","src":"3127:6:21"},"nativeSrc":"3127:81:21","nodeType":"YulFunctionCall","src":"3127:81:21"},"nativeSrc":"3127:81:21","nodeType":"YulExpressionStatement","src":"3127:81:21"}]},"nativeSrc":"2976:242:21","nodeType":"YulCase","src":"2976:242:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"2284:6:21","nodeType":"YulIdentifier","src":"2284:6:21"},{"kind":"number","nativeSrc":"2292:2:21","nodeType":"YulLiteral","src":"2292:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"2281:2:21","nodeType":"YulIdentifier","src":"2281:2:21"},"nativeSrc":"2281:14:21","nodeType":"YulFunctionCall","src":"2281:14:21"},"nativeSrc":"2274:944:21","nodeType":"YulSwitch","src":"2274:944:21"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"1879:1345:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"1960:4:21","nodeType":"YulTypedName","src":"1960:4:21","type":""},{"name":"src","nativeSrc":"1966:3:21","nodeType":"YulTypedName","src":"1966:3:21","type":""}],"src":"1879:1345:21"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6080604052662386f26fc10000600555629896806006553480156200002357600080fd5b506040516200307e3803806200307e833981016040819052620000469162000143565b60408051602081019091526000815233906200006281620000df565b506001600160a01b0381166200009257604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6200009d81620000f1565b50600480546001600160a01b0319166001600160a01b038316179055604080516020810190915260008152600990620000d790826200021c565b5050620002e8565b6002620000ed82826200021c565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200015657600080fd5b81516001600160a01b03811681146200016e57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001a057607f821691505b602082108103620001c157634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000217576000816000526020600020601f850160051c81016020861015620001f25750805b601f850160051c820191505b818110156200021357828155600101620001fe565b5050505b505050565b81516001600160401b0381111562000238576200023862000175565b62000250816200024984546200018b565b84620001c7565b602080601f8311600181146200028857600084156200026f5750858301515b600019600386901b1c1916600185901b17855562000213565b600085815260208120601f198616915b82811015620002b95788860151825594840194600190910190840162000298565b5085821015620002d85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b612d8680620002f86000396000f3fe60806040526004361061017f5760003560e01c8063715018a6116100d6578063d8fc063d1161007f578063ef88d7f011610059578063ef88d7f014610490578063f242432a146104b0578063f2fde38b146104d057600080fd5b8063d8fc063d14610410578063e086e5ec14610425578063e985e9c51461043a57600080fd5b80638f9a8837116100b05780638f9a8837146103ba578063a1456765146103d0578063a22cb465146103f057600080fd5b8063715018a61461035a5780637d81c4c11461036f5780638da5cb5b1461038f57600080fd5b80634e1273f4116101385780635f853338116101125780635f853338146102e857806360316801146102fe5780636914db601461032b57600080fd5b80634e1273f41461028857806355f804b3146102b55780635baae42d146102d557600080fd5b80630e89341c116101695780630e89341c146101e757806311eac855146102145780632eb2c2d61461026657600080fd5b8062fdd58e1461018457806301ffc9a7146101b7575b600080fd5b34801561019057600080fd5b506101a461019f36600461222b565b6104f0565b6040519081526020015b60405180910390f35b3480156101c357600080fd5b506101d76101d2366004612283565b610525565b60405190151581526020016101ae565b3480156101f357600080fd5b506102076102023660046122a7565b610608565b6040516101ae919061232e565b34801561022057600080fd5b506004546102419073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101ae565b34801561027257600080fd5b506102866102813660046124e0565b6106b0565b005b34801561029457600080fd5b506102a86102a336600461258a565b610776565b6040516101ae9190612686565b3480156102c157600080fd5b506102866102d0366004612699565b61085c565b6102866102e33660046126d6565b610874565b3480156102f457600080fd5b506101a460065481565b34801561030a57600080fd5b5061031e6103193660046122a7565b6109fb565b6040516101ae9190612743565b34801561033757600080fd5b5061034b6103463660046122a7565b610bea565b6040516101ae939291906127c7565b34801561036657600080fd5b50610286610d32565b34801561037b57600080fd5b5061028661038a366004612813565b610d46565b34801561039b57600080fd5b5060035473ffffffffffffffffffffffffffffffffffffffff16610241565b3480156103c657600080fd5b506101a460055481565b3480156103dc57600080fd5b506102866103eb3660046126d6565b610e12565b3480156103fc57600080fd5b5061028661040b36600461283c565b61113b565b34801561041c57600080fd5b50610286611146565b34801561043157600080fd5b5061028661138e565b34801561044657600080fd5b506101d7610455366004612873565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205460ff1690565b34801561049c57600080fd5b506102866104ab3660046128a6565b611445565b3480156104bc57600080fd5b506102866104cb3660046128c8565b611494565b3480156104dc57600080fd5b506102866104eb366004612813565b611552565b60008181526020818152604080832073ffffffffffffffffffffffffffffffffffffffff861684529091529020545b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fd9b67a260000000000000000000000000000000000000000000000000000000014806105b857507fffffffff0000000000000000000000000000000000000000000000000000000082167f0e89341c00000000000000000000000000000000000000000000000000000000145b8061051f57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff0000000000000000000000000000000000000000000000000000000083161461051f565b6060610613826115b3565b61067e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f55524920717565727920666f72206e6f6e6578697374656e7420746f6b656e0060448201526064015b60405180910390fd5b6009610689836115d9565b60405160200161069a929190612980565b6040516020818303038152906040529050919050565b3373ffffffffffffffffffffffffffffffffffffffff8616811480159061070a575073ffffffffffffffffffffffffffffffffffffffff80871660009081526001602090815260408083209385168352929052205460ff16155b15610761576040517fe237d92200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808316600483015287166024820152604401610675565b61076e8686868686611697565b505050505050565b606081518351146107c057815183516040517f5b05999100000000000000000000000000000000000000000000000000000000815260048101929092526024820152604401610675565b6000835167ffffffffffffffff8111156107dc576107dc612341565b604051908082528060200260200182016040528015610805578160200160208202803683370190505b50905060005b84518110156108545760208082028601015161082f906020808402870101516104f0565b82828151811061084157610841612a25565b602090810291909101015260010161080b565b509392505050565b61086461174b565b60096108708282612aa1565b5050565b806005546108829190612bea565b3410156108eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e73756666696369656e74204554482073656e7400000000000000000000006044820152606401610675565b600880549060019060006108ff8385612c01565b925050819055506109213382846040518060200160405280600081525061179e565b60408051606081018252858152602080820186905233828401526000848152600790915291909120815181906109579082612aa1565b506020820151600182019061096c9082612aa1565b5060409182015160029190910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90921691909117905551339082907fec2cd236ed6d37bf5a71276ac93889db12834493a090efd543a3d2eca8dcdcc8906109ed90879061232e565b60405180910390a350505050565b60408051606080820183528082526020820152600091810191909152610a20826115b3565b610a86576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f546f6b656e20646f6573206e6f742065786973740000000000000000000000006044820152606401610675565b60008281526007602052604090819020815160608101909252805482908290610aae9061292d565b80601f0160208091040260200160405190810160405280929190818152602001828054610ada9061292d565b8015610b275780601f10610afc57610100808354040283529160200191610b27565b820191906000526020600020905b815481529060010190602001808311610b0a57829003601f168201915b50505050508152602001600182018054610b409061292d565b80601f0160208091040260200160405190810160405280929190818152602001828054610b6c9061292d565b8015610bb95780601f10610b8e57610100808354040283529160200191610bb9565b820191906000526020600020905b815481529060010190602001808311610b9c57829003601f168201915b50505091835250506002919091015473ffffffffffffffffffffffffffffffffffffffff1660209091015292915050565b600760205260009081526040902080548190610c059061292d565b80601f0160208091040260200160405190810160405280929190818152602001828054610c319061292d565b8015610c7e5780601f10610c5357610100808354040283529160200191610c7e565b820191906000526020600020905b815481529060010190602001808311610c6157829003601f168201915b505050505090806001018054610c939061292d565b80601f0160208091040260200160405190810160405280929190818152602001828054610cbf9061292d565b8015610d0c5780601f10610ce157610100808354040283529160200191610d0c565b820191906000526020600020905b815481529060010190602001808311610cef57829003601f168201915b5050506002909301549192505073ffffffffffffffffffffffffffffffffffffffff1683565b610d3a61174b565b610d446000611821565b565b610d4e61174b565b73ffffffffffffffffffffffffffffffffffffffff8116610dcb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f496e76616c6964206164647265737300000000000000000000000000000000006044820152606401610675565b600480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600081600654610e229190612bea565b600480546040517f70a082310000000000000000000000000000000000000000000000000000000081523392810192909252919250829173ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015610e96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eba9190612c14565b1015610f22576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f496e73756666696369656e7420555344432062616c616e6365000000000000006044820152606401610675565b600480546040517f23b872dd00000000000000000000000000000000000000000000000000000000815233928101929092523060248301526044820183905273ffffffffffffffffffffffffffffffffffffffff16906323b872dd906064016020604051808303816000875af1158015610fa0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc49190612c2d565b61102a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f55534443207472616e73666572206661696c65640000000000000000000000006044820152606401610675565b6008805490600190600061103e8385612c01565b925050819055506110603382856040518060200160405280600081525061179e565b60408051606081018252868152602080820187905233828401526000848152600790915291909120815181906110969082612aa1565b50602082015160018201906110ab9082612aa1565b5060409182015160029190910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90921691909117905551339082907fec2cd236ed6d37bf5a71276ac93889db12834493a090efd543a3d2eca8dcdcc89061112c90889061232e565b60405180910390a35050505050565b610870338383611898565b61114e61174b565b600480546040517f70a08231000000000000000000000000000000000000000000000000000000008152309281019290925260009173ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa1580156111c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e69190612c14565b905060008111611252576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f205553444320746f207769746864726177000000000000000000000000006044820152606401610675565b60045473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb61128f60035473ffffffffffffffffffffffffffffffffffffffff1690565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602481018490526044016020604051808303816000875af1158015611301573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113259190612c2d565b61138b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f55534443207472616e73666572206661696c65640000000000000000000000006044820152606401610675565b50565b61139661174b565b47806113fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4e6f2045544820746f20776974686472617700000000000000000000000000006044820152606401610675565b60035460405173ffffffffffffffffffffffffffffffffffffffff9091169082156108fc029083906000818181858888f19350505050158015610870573d6000803e3d6000fd5b61144d61174b565b6005829055600681905560408051838152602081018390527f945c1c4e99aa89f648fbfe3df471b916f719e16d960fcec0737d4d56bd696838910160405180910390a15050565b3373ffffffffffffffffffffffffffffffffffffffff861681148015906114ee575073ffffffffffffffffffffffffffffffffffffffff80871660009081526001602090815260408083209385168352929052205460ff16155b15611545576040517fe237d92200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808316600483015287166024820152604401610675565b61076e8686868686611980565b61155a61174b565b73ffffffffffffffffffffffffffffffffffffffff81166115aa576040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152602401610675565b61138b81611821565b600081815260076020526040812080548291906115cf9061292d565b9050119050919050565b606060006115e683611a5b565b600101905060008167ffffffffffffffff81111561160657611606612341565b6040519080825280601f01601f191660200182016040528015611630576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a850494508461163a57509392505050565b73ffffffffffffffffffffffffffffffffffffffff84166116e7576040517f57f447ce00000000000000000000000000000000000000000000000000000000815260006004820152602401610675565b73ffffffffffffffffffffffffffffffffffffffff8516611737576040517f01a8351400000000000000000000000000000000000000000000000000000000815260006004820152602401610675565b6117448585858585611b3d565b5050505050565b60035473ffffffffffffffffffffffffffffffffffffffff163314610d44576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610675565b73ffffffffffffffffffffffffffffffffffffffff84166117ee576040517f57f447ce00000000000000000000000000000000000000000000000000000000815260006004820152602401610675565b6040805160018082526020820186905281830190815260608201859052608082019092529061076e600087848487611b3d565b6003805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b73ffffffffffffffffffffffffffffffffffffffff82166118e8576040517fced3e10000000000000000000000000000000000000000000000000000000000815260006004820152602401610675565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff84166119d0576040517f57f447ce00000000000000000000000000000000000000000000000000000000815260006004820152602401610675565b73ffffffffffffffffffffffffffffffffffffffff8516611a20576040517f01a8351400000000000000000000000000000000000000000000000000000000815260006004820152602401610675565b60408051600180825260208201869052818301908152606082018590526080820190925290611a528787848487611b3d565b50505050505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611aa4577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310611ad0576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310611aee57662386f26fc10000830492506010015b6305f5e1008310611b06576305f5e100830492506008015b6127108310611b1a57612710830492506004015b60648310611b2c576064830492506002015b600a831061051f5760010192915050565b611b4985858585611b9d565b73ffffffffffffffffffffffffffffffffffffffff8416156117445782513390600103611b8f5760208481015190840151611b88838989858589611e7f565b505061076e565b61076e818787878787612071565b8051825114611be557815181516040517f5b05999100000000000000000000000000000000000000000000000000000000815260048101929092526024820152604401610675565b3360005b8351811015611d525760208181028581018201519085019091015173ffffffffffffffffffffffffffffffffffffffff881615611ce95760008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8c16845290915290205481811015611cb5576040517f03dee4c500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a166004820152602481018290526044810183905260648101849052608401610675565b60008381526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8d16845290915290209082900390555b73ffffffffffffffffffffffffffffffffffffffff871615611d485760008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8b16845290915281208054839290611d42908490612c01565b90915550505b5050600101611be9565b508251600103611dfa57602083015160009060208401519091508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051611deb929190918252602082015260400190565b60405180910390a45050611744565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051611e70929190612c4a565b60405180910390a45050505050565b73ffffffffffffffffffffffffffffffffffffffff84163b1561076e576040517ff23a6e6100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063f23a6e6190611ef69089908990889088908890600401612c78565b6020604051808303816000875af1925050508015611f4f575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252611f4c91810190612cc8565b60015b611fde573d808015611f7d576040519150601f19603f3d011682016040523d82523d6000602084013e611f82565b606091505b508051600003611fd6576040517f57f447ce00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86166004820152602401610675565b805181602001fd5b7fffffffff0000000000000000000000000000000000000000000000000000000081167ff23a6e610000000000000000000000000000000000000000000000000000000014611a52576040517f57f447ce00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86166004820152602401610675565b73ffffffffffffffffffffffffffffffffffffffff84163b1561076e576040517fbc197c8100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063bc197c81906120e89089908990889088908890600401612ce5565b6020604051808303816000875af1925050508015612141575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261213e91810190612cc8565b60015b61216f573d808015611f7d576040519150601f19603f3d011682016040523d82523d6000602084013e611f82565b7fffffffff0000000000000000000000000000000000000000000000000000000081167fbc197c810000000000000000000000000000000000000000000000000000000014611a52576040517f57f447ce00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86166004820152602401610675565b803573ffffffffffffffffffffffffffffffffffffffff8116811461222657600080fd5b919050565b6000806040838503121561223e57600080fd5b61224783612202565b946020939093013593505050565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461138b57600080fd5b60006020828403121561229557600080fd5b81356122a081612255565b9392505050565b6000602082840312156122b957600080fd5b5035919050565b60005b838110156122db5781810151838201526020016122c3565b50506000910152565b600081518084526122fc8160208601602086016122c0565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006122a060208301846122e4565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156123b7576123b7612341565b604052919050565b600067ffffffffffffffff8211156123d9576123d9612341565b5060051b60200190565b600082601f8301126123f457600080fd5b81356020612409612404836123bf565b612370565b8083825260208201915060208460051b87010193508684111561242b57600080fd5b602086015b848110156124475780358352918301918301612430565b509695505050505050565b600082601f83011261246357600080fd5b813567ffffffffffffffff81111561247d5761247d612341565b6124ae60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601612370565b8181528460208386010111156124c357600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156124f857600080fd5b61250186612202565b945061250f60208701612202565b9350604086013567ffffffffffffffff8082111561252c57600080fd5b61253889838a016123e3565b9450606088013591508082111561254e57600080fd5b61255a89838a016123e3565b9350608088013591508082111561257057600080fd5b5061257d88828901612452565b9150509295509295909350565b6000806040838503121561259d57600080fd5b823567ffffffffffffffff808211156125b557600080fd5b818501915085601f8301126125c957600080fd5b813560206125d9612404836123bf565b82815260059290921b840181019181810190898411156125f857600080fd5b948201945b8386101561261d5761260e86612202565b825294820194908201906125fd565b9650508601359250508082111561263357600080fd5b50612640858286016123e3565b9150509250929050565b60008151808452602080850194506020840160005b8381101561267b5781518752958201959082019060010161265f565b509495945050505050565b6020815260006122a0602083018461264a565b6000602082840312156126ab57600080fd5b813567ffffffffffffffff8111156126c257600080fd5b6126ce84828501612452565b949350505050565b6000806000606084860312156126eb57600080fd5b833567ffffffffffffffff8082111561270357600080fd5b61270f87838801612452565b9450602086013591508082111561272557600080fd5b5061273286828701612452565b925050604084013590509250925092565b60208152600082516060602084015261275f60808401826122e4565b905060208401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe084830301604085015261279a82826122e4565b91505073ffffffffffffffffffffffffffffffffffffffff60408501511660608401528091505092915050565b6060815260006127da60608301866122e4565b82810360208401526127ec81866122e4565b91505073ffffffffffffffffffffffffffffffffffffffff83166040830152949350505050565b60006020828403121561282557600080fd5b6122a082612202565b801515811461138b57600080fd5b6000806040838503121561284f57600080fd5b61285883612202565b915060208301356128688161282e565b809150509250929050565b6000806040838503121561288657600080fd5b61288f83612202565b915061289d60208401612202565b90509250929050565b600080604083850312156128b957600080fd5b50508035926020909101359150565b600080600080600060a086880312156128e057600080fd5b6128e986612202565b94506128f760208701612202565b93506040860135925060608601359150608086013567ffffffffffffffff81111561292157600080fd5b61257d88828901612452565b600181811c9082168061294157607f821691505b60208210810361297a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600080845461298e8161292d565b600182811680156129a657600181146129d957612a08565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0084168752821515830287019450612a08565b8860005260208060002060005b858110156129ff5781548a8201529084019082016129e6565b50505082870194505b505050508351612a1c8183602088016122c0565b01949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b601f821115612a9c576000816000526020600020601f850160051c81016020861015612a7d5750805b601f850160051c820191505b8181101561076e57828155600101612a89565b505050565b815167ffffffffffffffff811115612abb57612abb612341565b612acf81612ac9845461292d565b84612a54565b602080601f831160018114612b225760008415612aec5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b17855561076e565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015612b6f57888601518255948401946001909101908401612b50565b5085821015612bab57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808202811582820484141761051f5761051f612bbb565b8082018082111561051f5761051f612bbb565b600060208284031215612c2657600080fd5b5051919050565b600060208284031215612c3f57600080fd5b81516122a08161282e565b604081526000612c5d604083018561264a565b8281036020840152612c6f818561264a565b95945050505050565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525084604083015283606083015260a06080830152612cbd60a08301846122e4565b979650505050505050565b600060208284031215612cda57600080fd5b81516122a081612255565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525060a06040830152612d1e60a083018661264a565b8281036060840152612d30818661264a565b90508281036080840152612d4481856122e4565b9897505050505050505056fea264697066735822122072008fdefab80797b148791ef0efeca74a6a908e88e0db64892124f4567bf75d64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH7 0x2386F26FC10000 PUSH1 0x5 SSTORE PUSH3 0x989680 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x307E CODESIZE SUB DUP1 PUSH3 0x307E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x46 SWAP2 PUSH3 0x143 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE CALLER SWAP1 PUSH3 0x62 DUP2 PUSH3 0xDF JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x92 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x9D DUP2 PUSH3 0xF1 JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x9 SWAP1 PUSH3 0xD7 SWAP1 DUP3 PUSH3 0x21C JUMP JUMPDEST POP POP PUSH3 0x2E8 JUMP JUMPDEST PUSH1 0x2 PUSH3 0xED DUP3 DUP3 PUSH3 0x21C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1A0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1C1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x217 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1F2 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x213 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FE JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x238 JUMPI PUSH3 0x238 PUSH3 0x175 JUMP JUMPDEST PUSH3 0x250 DUP2 PUSH3 0x249 DUP5 SLOAD PUSH3 0x18B JUMP JUMPDEST DUP5 PUSH3 0x1C7 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x288 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x26F JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x213 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B9 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x298 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D8 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x2D86 DUP1 PUSH3 0x2F8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x17F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xD6 JUMPI DUP1 PUSH4 0xD8FC063D GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xEF88D7F0 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xEF88D7F0 EQ PUSH2 0x490 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD8FC063D EQ PUSH2 0x410 JUMPI DUP1 PUSH4 0xE086E5EC EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x43A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8F9A8837 GT PUSH2 0xB0 JUMPI DUP1 PUSH4 0x8F9A8837 EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0xA1456765 EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0x7D81C4C1 EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x138 JUMPI DUP1 PUSH4 0x5F853338 GT PUSH2 0x112 JUMPI DUP1 PUSH4 0x5F853338 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x60316801 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0x6914DB60 EQ PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x5BAAE42D EQ PUSH2 0x2D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE89341C GT PUSH2 0x169 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x11EAC855 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1B7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A4 PUSH2 0x19F CALLDATASIZE PUSH1 0x4 PUSH2 0x222B JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D7 PUSH2 0x1D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2283 JUMP JUMPDEST PUSH2 0x525 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x207 PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0x22A7 JUMP JUMPDEST PUSH2 0x608 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x232E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x241 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x286 PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0x24E0 JUMP JUMPDEST PUSH2 0x6B0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0x2A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x258A JUMP JUMPDEST PUSH2 0x776 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x2686 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x286 PUSH2 0x2D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2699 JUMP JUMPDEST PUSH2 0x85C JUMP JUMPDEST PUSH2 0x286 PUSH2 0x2E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x26D6 JUMP JUMPDEST PUSH2 0x874 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A4 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31E PUSH2 0x319 CALLDATASIZE PUSH1 0x4 PUSH2 0x22A7 JUMP JUMPDEST PUSH2 0x9FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x2743 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x346 CALLDATASIZE PUSH1 0x4 PUSH2 0x22A7 JUMP JUMPDEST PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27C7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x286 PUSH2 0xD32 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x286 PUSH2 0x38A CALLDATASIZE PUSH1 0x4 PUSH2 0x2813 JUMP JUMPDEST PUSH2 0xD46 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x241 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A4 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x286 PUSH2 0x3EB CALLDATASIZE PUSH1 0x4 PUSH2 0x26D6 JUMP JUMPDEST PUSH2 0xE12 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x286 PUSH2 0x40B CALLDATASIZE PUSH1 0x4 PUSH2 0x283C JUMP JUMPDEST PUSH2 0x113B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x286 PUSH2 0x1146 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x286 PUSH2 0x138E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D7 PUSH2 0x455 CALLDATASIZE PUSH1 0x4 PUSH2 0x2873 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x286 PUSH2 0x4AB CALLDATASIZE PUSH1 0x4 PUSH2 0x28A6 JUMP JUMPDEST PUSH2 0x1445 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x286 PUSH2 0x4CB CALLDATASIZE PUSH1 0x4 PUSH2 0x28C8 JUMP JUMPDEST PUSH2 0x1494 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x286 PUSH2 0x4EB CALLDATASIZE PUSH1 0x4 PUSH2 0x2813 JUMP JUMPDEST PUSH2 0x1552 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x5B8 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x51F JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ PUSH2 0x51F JUMP JUMPDEST PUSH1 0x60 PUSH2 0x613 DUP3 PUSH2 0x15B3 JUMP JUMPDEST PUSH2 0x67E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x55524920717565727920666F72206E6F6E6578697374656E7420746F6B656E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH2 0x689 DUP4 PUSH2 0x15D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x69A SWAP3 SWAP2 SWAP1 PUSH2 0x2980 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x70A JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x761 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x675 JUMP JUMPDEST PUSH2 0x76E DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1697 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x7C0 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7DC JUMPI PUSH2 0x7DC PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x805 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x854 JUMPI PUSH1 0x20 DUP1 DUP3 MUL DUP7 ADD ADD MLOAD PUSH2 0x82F SWAP1 PUSH1 0x20 DUP1 DUP5 MUL DUP8 ADD ADD MLOAD PUSH2 0x4F0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x841 JUMPI PUSH2 0x841 PUSH2 0x2A25 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x80B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x864 PUSH2 0x174B JUMP JUMPDEST PUSH1 0x9 PUSH2 0x870 DUP3 DUP3 PUSH2 0x2AA1 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 SLOAD PUSH2 0x882 SWAP2 SWAP1 PUSH2 0x2BEA JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x8EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204554482073656E740000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x0 PUSH2 0x8FF DUP4 DUP6 PUSH2 0x2C01 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x921 CALLER DUP3 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x179E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE DUP6 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP7 SWAP1 MSTORE CALLER DUP3 DUP5 ADD MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0x957 SWAP1 DUP3 PUSH2 0x2AA1 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x96C SWAP1 DUP3 PUSH2 0x2AA1 JUMP JUMPDEST POP PUSH1 0x40 SWAP2 DUP3 ADD MLOAD PUSH1 0x2 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD CALLER SWAP1 DUP3 SWAP1 PUSH32 0xEC2CD236ED6D37BF5A71276AC93889DB12834493A090EFD543A3D2ECA8DCDCC8 SWAP1 PUSH2 0x9ED SWAP1 DUP8 SWAP1 PUSH2 0x232E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP1 DUP3 ADD DUP4 MSTORE DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0xA20 DUP3 PUSH2 0x15B3 JUMP JUMPDEST PUSH2 0xA86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20646F6573206E6F74206578697374000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH2 0xAAE SWAP1 PUSH2 0x292D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xADA SWAP1 PUSH2 0x292D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB27 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAFC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB27 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB0A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0xB40 SWAP1 PUSH2 0x292D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB6C SWAP1 PUSH2 0x292D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBB9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB8E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBB9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB9C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x2 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0xC05 SWAP1 PUSH2 0x292D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC31 SWAP1 PUSH2 0x292D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC7E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC53 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC7E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC61 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xC93 SWAP1 PUSH2 0x292D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCBF SWAP1 PUSH2 0x292D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD0C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCE1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD0C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCEF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x2 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 JUMP JUMPDEST PUSH2 0xD3A PUSH2 0x174B JUMP JUMPDEST PUSH2 0xD44 PUSH1 0x0 PUSH2 0x1821 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xD4E PUSH2 0x174B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xDCB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x6 SLOAD PUSH2 0xE22 SWAP2 SWAP1 PUSH2 0x2BEA JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE96 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEBA SWAP2 SWAP1 PUSH2 0x2C14 JUMP JUMPDEST LT ISZERO PUSH2 0xF22 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420555344432062616C616E636500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFA0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFC4 SWAP2 SWAP1 PUSH2 0x2C2D JUMP JUMPDEST PUSH2 0x102A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x55534443207472616E73666572206661696C6564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x0 PUSH2 0x103E DUP4 DUP6 PUSH2 0x2C01 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1060 CALLER DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x179E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE DUP7 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP8 SWAP1 MSTORE CALLER DUP3 DUP5 ADD MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0x1096 SWAP1 DUP3 PUSH2 0x2AA1 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x10AB SWAP1 DUP3 PUSH2 0x2AA1 JUMP JUMPDEST POP PUSH1 0x40 SWAP2 DUP3 ADD MLOAD PUSH1 0x2 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD CALLER SWAP1 DUP3 SWAP1 PUSH32 0xEC2CD236ED6D37BF5A71276AC93889DB12834493A090EFD543A3D2ECA8DCDCC8 SWAP1 PUSH2 0x112C SWAP1 DUP9 SWAP1 PUSH2 0x232E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x870 CALLER DUP4 DUP4 PUSH2 0x1898 JUMP JUMPDEST PUSH2 0x114E PUSH2 0x174B JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11E6 SWAP2 SWAP1 PUSH2 0x2C14 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1252 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F205553444320746F20776974686472617700000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x128F PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1301 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1325 SWAP2 SWAP1 PUSH2 0x2C2D JUMP JUMPDEST PUSH2 0x138B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x55534443207472616E73666572206661696C6564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x675 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1396 PUSH2 0x174B JUMP JUMPDEST SELFBALANCE DUP1 PUSH2 0x13FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2045544820746F2077697468647261770000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x870 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x144D PUSH2 0x174B JUMP JUMPDEST PUSH1 0x5 DUP3 SWAP1 SSTORE PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x945C1C4E99AA89F648FBFE3DF471B916F719E16D960FCEC0737D4D56BD696838 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x14EE JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1545 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x675 JUMP JUMPDEST PUSH2 0x76E DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1980 JUMP JUMPDEST PUSH2 0x155A PUSH2 0x174B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x15AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x675 JUMP JUMPDEST PUSH2 0x138B DUP2 PUSH2 0x1821 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x15CF SWAP1 PUSH2 0x292D JUMP JUMPDEST SWAP1 POP GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x15E6 DUP4 PUSH2 0x1A5B JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1606 JUMPI PUSH2 0x1606 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1630 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x163A JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x16E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x675 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH2 0x1737 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x675 JUMP JUMPDEST PUSH2 0x1744 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1B3D JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xD44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x675 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x17EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x76E PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1B3D JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x18E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x675 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x19D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x675 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH2 0x1A20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x1A52 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1B3D JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1AA4 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1AD0 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1AEE JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1B06 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1B1A JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1B2C JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x51F JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B49 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1B9D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND ISZERO PUSH2 0x1744 JUMPI DUP3 MLOAD CALLER SWAP1 PUSH1 0x1 SUB PUSH2 0x1B8F JUMPI PUSH1 0x20 DUP5 DUP2 ADD MLOAD SWAP1 DUP5 ADD MLOAD PUSH2 0x1B88 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1E7F JUMP JUMPDEST POP POP PUSH2 0x76E JUMP JUMPDEST PUSH2 0x76E DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x2071 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x1BE5 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x675 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1D52 JUMPI PUSH1 0x20 DUP2 DUP2 MUL DUP6 DUP2 ADD DUP3 ADD MLOAD SWAP1 DUP6 ADD SWAP1 SWAP2 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND ISZERO PUSH2 0x1CE9 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1CB5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x84 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND ISZERO PUSH2 0x1D48 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1D42 SWAP1 DUP5 SWAP1 PUSH2 0x2C01 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x1BE9 JUMP JUMPDEST POP DUP3 MLOAD PUSH1 0x1 SUB PUSH2 0x1DFA JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x0 SWAP1 PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP2 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1DEB SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x1744 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1E70 SWAP3 SWAP2 SWAP1 PUSH2 0x2C4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND EXTCODESIZE ISZERO PUSH2 0x76E JUMPI PUSH1 0x40 MLOAD PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x1EF6 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2C78 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1F4F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1F4C SWAP2 DUP2 ADD SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1FDE JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1F7D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1F82 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1FD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x675 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 EQ PUSH2 0x1A52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x675 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND EXTCODESIZE ISZERO PUSH2 0x76E JUMPI PUSH1 0x40 MLOAD PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x20E8 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2CE5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2141 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x213E SWAP2 DUP2 ADD SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x216F JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1F7D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1F82 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 EQ PUSH2 0x1A52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x675 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x223E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2247 DUP4 PUSH2 0x2202 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x138B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x22A0 DUP2 PUSH2 0x2255 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22DB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x22C3 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x22FC DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x22C0 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x22A0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x22E4 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x23B7 JUMPI PUSH2 0x23B7 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x23D9 JUMPI PUSH2 0x23D9 PUSH2 0x2341 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x23F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2409 PUSH2 0x2404 DUP4 PUSH2 0x23BF JUMP JUMPDEST PUSH2 0x2370 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x242B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2447 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x2430 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x247D JUMPI PUSH2 0x247D PUSH2 0x2341 JUMP JUMPDEST PUSH2 0x24AE PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 ADD AND ADD PUSH2 0x2370 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x24C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x24F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2501 DUP7 PUSH2 0x2202 JUMP JUMPDEST SWAP5 POP PUSH2 0x250F PUSH1 0x20 DUP8 ADD PUSH2 0x2202 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x252C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2538 DUP10 DUP4 DUP11 ADD PUSH2 0x23E3 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x254E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x255A DUP10 DUP4 DUP11 ADD PUSH2 0x23E3 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2570 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257D DUP9 DUP3 DUP10 ADD PUSH2 0x2452 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x259D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x25B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x25C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x25D9 PUSH2 0x2404 DUP4 PUSH2 0x23BF JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x25F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x261D JUMPI PUSH2 0x260E DUP7 PUSH2 0x2202 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x25FD JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x2633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2640 DUP6 DUP3 DUP7 ADD PUSH2 0x23E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x267B JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x265F JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x22A0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x264A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26CE DUP5 DUP3 DUP6 ADD PUSH2 0x2452 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x26EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2703 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x270F DUP8 DUP4 DUP9 ADD PUSH2 0x2452 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2732 DUP7 DUP3 DUP8 ADD PUSH2 0x2452 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH1 0x60 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x275F PUSH1 0x80 DUP5 ADD DUP3 PUSH2 0x22E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP5 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP5 DUP4 SUB ADD PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x279A DUP3 DUP3 PUSH2 0x22E4 JUMP JUMPDEST SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP6 ADD MLOAD AND PUSH1 0x60 DUP5 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x27DA PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x22E4 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x27EC DUP2 DUP7 PUSH2 0x22E4 JUMP JUMPDEST SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2825 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22A0 DUP3 PUSH2 0x2202 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x138B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x284F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2858 DUP4 PUSH2 0x2202 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2868 DUP2 PUSH2 0x282E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2886 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x288F DUP4 PUSH2 0x2202 JUMP JUMPDEST SWAP2 POP PUSH2 0x289D PUSH1 0x20 DUP5 ADD PUSH2 0x2202 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x28E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28E9 DUP7 PUSH2 0x2202 JUMP JUMPDEST SWAP5 POP PUSH2 0x28F7 PUSH1 0x20 DUP8 ADD PUSH2 0x2202 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2921 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x257D DUP9 DUP3 DUP10 ADD PUSH2 0x2452 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2941 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x297A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD PUSH2 0x298E DUP2 PUSH2 0x292D JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x29A6 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x29D9 JUMPI PUSH2 0x2A08 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x2A08 JUMP JUMPDEST DUP9 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x29FF JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x29E6 JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP POP POP POP DUP4 MLOAD PUSH2 0x2A1C DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x22C0 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2A9C JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2A7D JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x76E JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2A89 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2ABB JUMPI PUSH2 0x2ABB PUSH2 0x2341 JUMP JUMPDEST PUSH2 0x2ACF DUP2 PUSH2 0x2AC9 DUP5 SLOAD PUSH2 0x292D JUMP JUMPDEST DUP5 PUSH2 0x2A54 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2B22 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2AEC JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x76E JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2B6F JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2B50 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x2BAB JUMPI DUP8 DUP6 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x51F JUMPI PUSH2 0x51F PUSH2 0x2BBB JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x51F JUMPI PUSH2 0x51F PUSH2 0x2BBB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x22A0 DUP2 PUSH2 0x282E JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2C5D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x264A JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2C6F DUP2 DUP6 PUSH2 0x264A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2CBD PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x22E4 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x22A0 DUP2 PUSH2 0x2255 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0xA0 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2D1E PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x264A JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2D30 DUP2 DUP7 PUSH2 0x264A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x2D44 DUP2 DUP6 PUSH2 0x22E4 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x8FDEFAB80797B148791EF0EFECA74A6A908E DUP9 0xE0 0xDB PUSH5 0x892124F456 PUSH28 0xF75D64736F6C63430008180033000000000000000000000000000000 ","sourceMap":"280:5169:20:-:0;;;472:10;442:40;;541:10;510:41;;1248:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1249:62:2;;;;;;;;;-1:-1:-1;1249:62:2;;1302:10:20;;1291:13:2;1249:62;1291:7;:13::i;:::-;-1:-1:-1;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;455:51:21;428:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1324:9:20::2;:32:::0;;-1:-1:-1;;;;;;1324:32:20::2;-1:-1:-1::0;;;;;1324:32:20;::::2;;::::0;;1366:13:::2;::::0;;::::2;::::0;::::2;::::0;;;-1:-1:-1;1366:13:20;;:8:::2;::::0;:13:::2;::::0;:8;:13:::2;:::i;:::-;;1248:138:::0;280:5169;;10290:86:2;10356:4;:13;10363:6;10356:4;:13;:::i;:::-;;10290:86;:::o;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:290:21:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:21;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:21:o;517:127::-;578:10;573:3;569:20;566:1;559:31;609:4;606:1;599:15;633:4;630:1;623:15;649:380;728:1;724:12;;;;771;;;792:61;;846:4;838:6;834:17;824:27;;792:61;899:2;891:6;888:14;868:18;865:38;862:161;;945:10;940:3;936:20;933:1;926:31;980:4;977:1;970:15;1008:4;1005:1;998:15;862:161;;649:380;;;:::o;1160:543::-;1262:2;1257:3;1254:11;1251:446;;;1298:1;1322:5;1319:1;1312:16;1366:4;1363:1;1353:18;1436:2;1424:10;1420:19;1417:1;1413:27;1407:4;1403:38;1472:4;1460:10;1457:20;1454:47;;;-1:-1:-1;1495:4:21;1454:47;1550:2;1545:3;1541:12;1538:1;1534:20;1528:4;1524:31;1514:41;;1605:82;1623:2;1616:5;1613:13;1605:82;;;1668:17;;;1649:1;1638:13;1605:82;;;1609:3;;;1251:446;1160:543;;;:::o;1879:1345::-;1999:10;;-1:-1:-1;;;;;2021:30:21;;2018:56;;;2054:18;;:::i;:::-;2083:97;2173:6;2133:38;2165:4;2159:11;2133:38;:::i;:::-;2127:4;2083:97;:::i;:::-;2235:4;;2292:2;2281:14;;2309:1;2304:663;;;;3011:1;3028:6;3025:89;;;-1:-1:-1;3080:19:21;;;3074:26;3025:89;-1:-1:-1;;1836:1:21;1832:11;;;1828:24;1824:29;1814:40;1860:1;1856:11;;;1811:57;3127:81;;2274:944;;2304:663;1107:1;1100:14;;;1144:4;1131:18;;-1:-1:-1;;2340:20:21;;;2458:236;2472:7;2469:1;2466:14;2458:236;;;2561:19;;;2555:26;2540:42;;2653:27;;;;2621:1;2609:14;;;;2488:19;;2458:236;;;2462:3;2722:6;2713:7;2710:19;2707:201;;;2783:19;;;2777:26;-1:-1:-1;;2866:1:21;2862:14;;;2878:3;2858:24;2854:37;2850:42;2835:58;2820:74;;2707:201;-1:-1:-1;;;;;2954:1:21;2938:14;;;2934:22;2921:36;;-1:-1:-1;1879:1345:21:o;:::-;280:5169:20;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_asSingletonArrays_1200":{"entryPoint":null,"id":1200,"parameterSlots":2,"returnSlots":2},"@_checkOwner_84":{"entryPoint":5963,"id":84,"parameterSlots":0,"returnSlots":0},"@_exists_7927":{"entryPoint":5555,"id":7927,"parameterSlots":1,"returnSlots":1},"@_mint_1014":{"entryPoint":6046,"id":1014,"parameterSlots":4,"returnSlots":0},"@_msgSender_2536":{"entryPoint":null,"id":2536,"parameterSlots":0,"returnSlots":1},"@_safeBatchTransferFrom_951":{"entryPoint":5783,"id":951,"parameterSlots":5,"returnSlots":0},"@_safeTransferFrom_896":{"entryPoint":6528,"id":896,"parameterSlots":5,"returnSlots":0},"@_setApprovalForAll_1184":{"entryPoint":6296,"id":1184,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":6177,"id":146,"parameterSlots":1,"returnSlots":0},"@_updateWithAcceptanceCheck_830":{"entryPoint":6973,"id":830,"parameterSlots":5,"returnSlots":0},"@_update_750":{"entryPoint":7069,"id":750,"parameterSlots":4,"returnSlots":0},"@balanceOfBatch_474":{"entryPoint":1910,"id":474,"parameterSlots":2,"returnSlots":1},"@balanceOf_404":{"entryPoint":1264,"id":404,"parameterSlots":2,"returnSlots":1},"@checkOnERC1155BatchReceived_1535":{"entryPoint":8305,"id":1535,"parameterSlots":6,"returnSlots":0},"@checkOnERC1155Received_1461":{"entryPoint":7807,"id":1461,"parameterSlots":6,"returnSlots":0},"@getTokenMetadata_7842":{"entryPoint":2555,"id":7842,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_507":{"entryPoint":null,"id":507,"parameterSlots":2,"returnSlots":1},"@log10_5474":{"entryPoint":6747,"id":5474,"parameterSlots":1,"returnSlots":1},"@mintPriceETH_7630":{"entryPoint":null,"id":7630,"parameterSlots":0,"returnSlots":0},"@mintPriceUSDC_7637":{"entryPoint":null,"id":7637,"parameterSlots":0,"returnSlots":0},"@mintWithETH_7745":{"entryPoint":2164,"id":7745,"parameterSlots":3,"returnSlots":0},"@mintWithUSDC_7821":{"entryPoint":3602,"id":7821,"parameterSlots":3,"returnSlots":0},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":3378,"id":98,"parameterSlots":0,"returnSlots":0},"@safeBatchTransferFrom_597":{"entryPoint":1712,"id":597,"parameterSlots":5,"returnSlots":0},"@safeTransferFrom_551":{"entryPoint":5268,"id":551,"parameterSlots":5,"returnSlots":0},"@setApprovalForAll_490":{"entryPoint":4411,"id":490,"parameterSlots":2,"returnSlots":0},"@setBaseURI_7879":{"entryPoint":2140,"id":7879,"parameterSlots":1,"returnSlots":0},"@supportsInterface_376":{"entryPoint":1317,"id":376,"parameterSlots":1,"returnSlots":1},"@supportsInterface_4083":{"entryPoint":null,"id":4083,"parameterSlots":1,"returnSlots":1},"@toString_2938":{"entryPoint":5593,"id":2938,"parameterSlots":1,"returnSlots":1},"@tokenMetadata_7649":{"entryPoint":3050,"id":7649,"parameterSlots":0,"returnSlots":0},"@transferOwnership_126":{"entryPoint":5458,"id":126,"parameterSlots":1,"returnSlots":0},"@unsafeMemoryAccess_2432":{"entryPoint":null,"id":2432,"parameterSlots":2,"returnSlots":1},"@unsafeMemoryAccess_2458":{"entryPoint":null,"id":2458,"parameterSlots":2,"returnSlots":1},"@updatePrices_7866":{"entryPoint":5189,"id":7866,"parameterSlots":2,"returnSlots":0},"@updateUSDCAddress_8017":{"entryPoint":3398,"id":8017,"parameterSlots":1,"returnSlots":0},"@uri_7907":{"entryPoint":1544,"id":7907,"parameterSlots":1,"returnSlots":1},"@usdcToken_7627":{"entryPoint":null,"id":7627,"parameterSlots":0,"returnSlots":0},"@withdrawETH_7958":{"entryPoint":5006,"id":7958,"parameterSlots":0,"returnSlots":0},"@withdrawUSDC_7992":{"entryPoint":4422,"id":7992,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":8706,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_uint256_dyn":{"entryPoint":9187,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes":{"entryPoint":9298,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":10259,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":10355,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":9440,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":10440,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_bool":{"entryPoint":10300,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":8747,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9610,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":11309,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4":{"entryPoint":8835,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":11464,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":9881,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256":{"entryPoint":9942,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256":{"entryPoint":8871,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":11284,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":10406,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_array_uint256_dyn":{"entryPoint":9802,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":8932,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":10624,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":11493,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":11384,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":9862,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":11338,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$1614__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9006,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_address__fromStack_reversed":{"entryPoint":10183,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_stringliteral_032fb3428477d66798bdf7801f58a252d723dc1362b9dfac5726f85f81cca815__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1cdec463df0fbdce13585c1435e3c4772f0033ebb8a813b127e59d923b0c9730__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_40a05d66d0175ecd11e5a65435b281d52a1c32bbc687760a717d83801a914a3c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_64693eab493143313e305fd1ec05b7e651a9150030395218d84e3550222a6e10__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_TokenMetadata_$7644_memory_ptr__to_t_struct$_TokenMetadata_$7644_memory_ptr__fromStack_reversed":{"entryPoint":10051,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":9072,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":9151,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":11265,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":11242,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":10836,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":10913,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":8896,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":10541,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":11195,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":10789,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":9025,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bool":{"entryPoint":10286,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":8789,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:23415:21","nodeType":"YulBlock","src":"0:23415:21","statements":[{"nativeSrc":"6:3:21","nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nativeSrc":"63:147:21","nodeType":"YulBlock","src":"63:147:21","statements":[{"nativeSrc":"73:29:21","nodeType":"YulAssignment","src":"73:29:21","value":{"arguments":[{"name":"offset","nativeSrc":"95:6:21","nodeType":"YulIdentifier","src":"95:6:21"}],"functionName":{"name":"calldataload","nativeSrc":"82:12:21","nodeType":"YulIdentifier","src":"82:12:21"},"nativeSrc":"82:20:21","nodeType":"YulFunctionCall","src":"82:20:21"},"variableNames":[{"name":"value","nativeSrc":"73:5:21","nodeType":"YulIdentifier","src":"73:5:21"}]},{"body":{"nativeSrc":"188:16:21","nodeType":"YulBlock","src":"188:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"197:1:21","nodeType":"YulLiteral","src":"197:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"200:1:21","nodeType":"YulLiteral","src":"200:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"190:6:21","nodeType":"YulIdentifier","src":"190:6:21"},"nativeSrc":"190:12:21","nodeType":"YulFunctionCall","src":"190:12:21"},"nativeSrc":"190:12:21","nodeType":"YulExpressionStatement","src":"190:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"124:5:21","nodeType":"YulIdentifier","src":"124:5:21"},{"arguments":[{"name":"value","nativeSrc":"135:5:21","nodeType":"YulIdentifier","src":"135:5:21"},{"kind":"number","nativeSrc":"142:42:21","nodeType":"YulLiteral","src":"142:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"131:3:21","nodeType":"YulIdentifier","src":"131:3:21"},"nativeSrc":"131:54:21","nodeType":"YulFunctionCall","src":"131:54:21"}],"functionName":{"name":"eq","nativeSrc":"121:2:21","nodeType":"YulIdentifier","src":"121:2:21"},"nativeSrc":"121:65:21","nodeType":"YulFunctionCall","src":"121:65:21"}],"functionName":{"name":"iszero","nativeSrc":"114:6:21","nodeType":"YulIdentifier","src":"114:6:21"},"nativeSrc":"114:73:21","nodeType":"YulFunctionCall","src":"114:73:21"},"nativeSrc":"111:93:21","nodeType":"YulIf","src":"111:93:21"}]},"name":"abi_decode_address","nativeSrc":"14:196:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"42:6:21","nodeType":"YulTypedName","src":"42:6:21","type":""}],"returnVariables":[{"name":"value","nativeSrc":"53:5:21","nodeType":"YulTypedName","src":"53:5:21","type":""}],"src":"14:196:21"},{"body":{"nativeSrc":"302:167:21","nodeType":"YulBlock","src":"302:167:21","statements":[{"body":{"nativeSrc":"348:16:21","nodeType":"YulBlock","src":"348:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"357:1:21","nodeType":"YulLiteral","src":"357:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"360:1:21","nodeType":"YulLiteral","src":"360:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"350:6:21","nodeType":"YulIdentifier","src":"350:6:21"},"nativeSrc":"350:12:21","nodeType":"YulFunctionCall","src":"350:12:21"},"nativeSrc":"350:12:21","nodeType":"YulExpressionStatement","src":"350:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"323:7:21","nodeType":"YulIdentifier","src":"323:7:21"},{"name":"headStart","nativeSrc":"332:9:21","nodeType":"YulIdentifier","src":"332:9:21"}],"functionName":{"name":"sub","nativeSrc":"319:3:21","nodeType":"YulIdentifier","src":"319:3:21"},"nativeSrc":"319:23:21","nodeType":"YulFunctionCall","src":"319:23:21"},{"kind":"number","nativeSrc":"344:2:21","nodeType":"YulLiteral","src":"344:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"315:3:21","nodeType":"YulIdentifier","src":"315:3:21"},"nativeSrc":"315:32:21","nodeType":"YulFunctionCall","src":"315:32:21"},"nativeSrc":"312:52:21","nodeType":"YulIf","src":"312:52:21"},{"nativeSrc":"373:39:21","nodeType":"YulAssignment","src":"373:39:21","value":{"arguments":[{"name":"headStart","nativeSrc":"402:9:21","nodeType":"YulIdentifier","src":"402:9:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"383:18:21","nodeType":"YulIdentifier","src":"383:18:21"},"nativeSrc":"383:29:21","nodeType":"YulFunctionCall","src":"383:29:21"},"variableNames":[{"name":"value0","nativeSrc":"373:6:21","nodeType":"YulIdentifier","src":"373:6:21"}]},{"nativeSrc":"421:42:21","nodeType":"YulAssignment","src":"421:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"448:9:21","nodeType":"YulIdentifier","src":"448:9:21"},{"kind":"number","nativeSrc":"459:2:21","nodeType":"YulLiteral","src":"459:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"444:3:21","nodeType":"YulIdentifier","src":"444:3:21"},"nativeSrc":"444:18:21","nodeType":"YulFunctionCall","src":"444:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"431:12:21","nodeType":"YulIdentifier","src":"431:12:21"},"nativeSrc":"431:32:21","nodeType":"YulFunctionCall","src":"431:32:21"},"variableNames":[{"name":"value1","nativeSrc":"421:6:21","nodeType":"YulIdentifier","src":"421:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"215:254:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"260:9:21","nodeType":"YulTypedName","src":"260:9:21","type":""},{"name":"dataEnd","nativeSrc":"271:7:21","nodeType":"YulTypedName","src":"271:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"283:6:21","nodeType":"YulTypedName","src":"283:6:21","type":""},{"name":"value1","nativeSrc":"291:6:21","nodeType":"YulTypedName","src":"291:6:21","type":""}],"src":"215:254:21"},{"body":{"nativeSrc":"575:76:21","nodeType":"YulBlock","src":"575:76:21","statements":[{"nativeSrc":"585:26:21","nodeType":"YulAssignment","src":"585:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"597:9:21","nodeType":"YulIdentifier","src":"597:9:21"},{"kind":"number","nativeSrc":"608:2:21","nodeType":"YulLiteral","src":"608:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"593:3:21","nodeType":"YulIdentifier","src":"593:3:21"},"nativeSrc":"593:18:21","nodeType":"YulFunctionCall","src":"593:18:21"},"variableNames":[{"name":"tail","nativeSrc":"585:4:21","nodeType":"YulIdentifier","src":"585:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"627:9:21","nodeType":"YulIdentifier","src":"627:9:21"},{"name":"value0","nativeSrc":"638:6:21","nodeType":"YulIdentifier","src":"638:6:21"}],"functionName":{"name":"mstore","nativeSrc":"620:6:21","nodeType":"YulIdentifier","src":"620:6:21"},"nativeSrc":"620:25:21","nodeType":"YulFunctionCall","src":"620:25:21"},"nativeSrc":"620:25:21","nodeType":"YulExpressionStatement","src":"620:25:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"474:177:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"544:9:21","nodeType":"YulTypedName","src":"544:9:21","type":""},{"name":"value0","nativeSrc":"555:6:21","nodeType":"YulTypedName","src":"555:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"566:4:21","nodeType":"YulTypedName","src":"566:4:21","type":""}],"src":"474:177:21"},{"body":{"nativeSrc":"700:133:21","nodeType":"YulBlock","src":"700:133:21","statements":[{"body":{"nativeSrc":"811:16:21","nodeType":"YulBlock","src":"811:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"820:1:21","nodeType":"YulLiteral","src":"820:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"823:1:21","nodeType":"YulLiteral","src":"823:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"813:6:21","nodeType":"YulIdentifier","src":"813:6:21"},"nativeSrc":"813:12:21","nodeType":"YulFunctionCall","src":"813:12:21"},"nativeSrc":"813:12:21","nodeType":"YulExpressionStatement","src":"813:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"723:5:21","nodeType":"YulIdentifier","src":"723:5:21"},{"arguments":[{"name":"value","nativeSrc":"734:5:21","nodeType":"YulIdentifier","src":"734:5:21"},{"kind":"number","nativeSrc":"741:66:21","nodeType":"YulLiteral","src":"741:66:21","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"730:3:21","nodeType":"YulIdentifier","src":"730:3:21"},"nativeSrc":"730:78:21","nodeType":"YulFunctionCall","src":"730:78:21"}],"functionName":{"name":"eq","nativeSrc":"720:2:21","nodeType":"YulIdentifier","src":"720:2:21"},"nativeSrc":"720:89:21","nodeType":"YulFunctionCall","src":"720:89:21"}],"functionName":{"name":"iszero","nativeSrc":"713:6:21","nodeType":"YulIdentifier","src":"713:6:21"},"nativeSrc":"713:97:21","nodeType":"YulFunctionCall","src":"713:97:21"},"nativeSrc":"710:117:21","nodeType":"YulIf","src":"710:117:21"}]},"name":"validator_revert_bytes4","nativeSrc":"656:177:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"689:5:21","nodeType":"YulTypedName","src":"689:5:21","type":""}],"src":"656:177:21"},{"body":{"nativeSrc":"907:176:21","nodeType":"YulBlock","src":"907:176:21","statements":[{"body":{"nativeSrc":"953:16:21","nodeType":"YulBlock","src":"953:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"962:1:21","nodeType":"YulLiteral","src":"962:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"965:1:21","nodeType":"YulLiteral","src":"965:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"955:6:21","nodeType":"YulIdentifier","src":"955:6:21"},"nativeSrc":"955:12:21","nodeType":"YulFunctionCall","src":"955:12:21"},"nativeSrc":"955:12:21","nodeType":"YulExpressionStatement","src":"955:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"928:7:21","nodeType":"YulIdentifier","src":"928:7:21"},{"name":"headStart","nativeSrc":"937:9:21","nodeType":"YulIdentifier","src":"937:9:21"}],"functionName":{"name":"sub","nativeSrc":"924:3:21","nodeType":"YulIdentifier","src":"924:3:21"},"nativeSrc":"924:23:21","nodeType":"YulFunctionCall","src":"924:23:21"},{"kind":"number","nativeSrc":"949:2:21","nodeType":"YulLiteral","src":"949:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"920:3:21","nodeType":"YulIdentifier","src":"920:3:21"},"nativeSrc":"920:32:21","nodeType":"YulFunctionCall","src":"920:32:21"},"nativeSrc":"917:52:21","nodeType":"YulIf","src":"917:52:21"},{"nativeSrc":"978:36:21","nodeType":"YulVariableDeclaration","src":"978:36:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1004:9:21","nodeType":"YulIdentifier","src":"1004:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"991:12:21","nodeType":"YulIdentifier","src":"991:12:21"},"nativeSrc":"991:23:21","nodeType":"YulFunctionCall","src":"991:23:21"},"variables":[{"name":"value","nativeSrc":"982:5:21","nodeType":"YulTypedName","src":"982:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1047:5:21","nodeType":"YulIdentifier","src":"1047:5:21"}],"functionName":{"name":"validator_revert_bytes4","nativeSrc":"1023:23:21","nodeType":"YulIdentifier","src":"1023:23:21"},"nativeSrc":"1023:30:21","nodeType":"YulFunctionCall","src":"1023:30:21"},"nativeSrc":"1023:30:21","nodeType":"YulExpressionStatement","src":"1023:30:21"},{"nativeSrc":"1062:15:21","nodeType":"YulAssignment","src":"1062:15:21","value":{"name":"value","nativeSrc":"1072:5:21","nodeType":"YulIdentifier","src":"1072:5:21"},"variableNames":[{"name":"value0","nativeSrc":"1062:6:21","nodeType":"YulIdentifier","src":"1062:6:21"}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"838:245:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"873:9:21","nodeType":"YulTypedName","src":"873:9:21","type":""},{"name":"dataEnd","nativeSrc":"884:7:21","nodeType":"YulTypedName","src":"884:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"896:6:21","nodeType":"YulTypedName","src":"896:6:21","type":""}],"src":"838:245:21"},{"body":{"nativeSrc":"1183:92:21","nodeType":"YulBlock","src":"1183:92:21","statements":[{"nativeSrc":"1193:26:21","nodeType":"YulAssignment","src":"1193:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1205:9:21","nodeType":"YulIdentifier","src":"1205:9:21"},{"kind":"number","nativeSrc":"1216:2:21","nodeType":"YulLiteral","src":"1216:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1201:3:21","nodeType":"YulIdentifier","src":"1201:3:21"},"nativeSrc":"1201:18:21","nodeType":"YulFunctionCall","src":"1201:18:21"},"variableNames":[{"name":"tail","nativeSrc":"1193:4:21","nodeType":"YulIdentifier","src":"1193:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1235:9:21","nodeType":"YulIdentifier","src":"1235:9:21"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"1260:6:21","nodeType":"YulIdentifier","src":"1260:6:21"}],"functionName":{"name":"iszero","nativeSrc":"1253:6:21","nodeType":"YulIdentifier","src":"1253:6:21"},"nativeSrc":"1253:14:21","nodeType":"YulFunctionCall","src":"1253:14:21"}],"functionName":{"name":"iszero","nativeSrc":"1246:6:21","nodeType":"YulIdentifier","src":"1246:6:21"},"nativeSrc":"1246:22:21","nodeType":"YulFunctionCall","src":"1246:22:21"}],"functionName":{"name":"mstore","nativeSrc":"1228:6:21","nodeType":"YulIdentifier","src":"1228:6:21"},"nativeSrc":"1228:41:21","nodeType":"YulFunctionCall","src":"1228:41:21"},"nativeSrc":"1228:41:21","nodeType":"YulExpressionStatement","src":"1228:41:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1088:187:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1152:9:21","nodeType":"YulTypedName","src":"1152:9:21","type":""},{"name":"value0","nativeSrc":"1163:6:21","nodeType":"YulTypedName","src":"1163:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1174:4:21","nodeType":"YulTypedName","src":"1174:4:21","type":""}],"src":"1088:187:21"},{"body":{"nativeSrc":"1350:110:21","nodeType":"YulBlock","src":"1350:110:21","statements":[{"body":{"nativeSrc":"1396:16:21","nodeType":"YulBlock","src":"1396:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1405:1:21","nodeType":"YulLiteral","src":"1405:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1408:1:21","nodeType":"YulLiteral","src":"1408:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1398:6:21","nodeType":"YulIdentifier","src":"1398:6:21"},"nativeSrc":"1398:12:21","nodeType":"YulFunctionCall","src":"1398:12:21"},"nativeSrc":"1398:12:21","nodeType":"YulExpressionStatement","src":"1398:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1371:7:21","nodeType":"YulIdentifier","src":"1371:7:21"},{"name":"headStart","nativeSrc":"1380:9:21","nodeType":"YulIdentifier","src":"1380:9:21"}],"functionName":{"name":"sub","nativeSrc":"1367:3:21","nodeType":"YulIdentifier","src":"1367:3:21"},"nativeSrc":"1367:23:21","nodeType":"YulFunctionCall","src":"1367:23:21"},{"kind":"number","nativeSrc":"1392:2:21","nodeType":"YulLiteral","src":"1392:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1363:3:21","nodeType":"YulIdentifier","src":"1363:3:21"},"nativeSrc":"1363:32:21","nodeType":"YulFunctionCall","src":"1363:32:21"},"nativeSrc":"1360:52:21","nodeType":"YulIf","src":"1360:52:21"},{"nativeSrc":"1421:33:21","nodeType":"YulAssignment","src":"1421:33:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1444:9:21","nodeType":"YulIdentifier","src":"1444:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"1431:12:21","nodeType":"YulIdentifier","src":"1431:12:21"},"nativeSrc":"1431:23:21","nodeType":"YulFunctionCall","src":"1431:23:21"},"variableNames":[{"name":"value0","nativeSrc":"1421:6:21","nodeType":"YulIdentifier","src":"1421:6:21"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"1280:180:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1316:9:21","nodeType":"YulTypedName","src":"1316:9:21","type":""},{"name":"dataEnd","nativeSrc":"1327:7:21","nodeType":"YulTypedName","src":"1327:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1339:6:21","nodeType":"YulTypedName","src":"1339:6:21","type":""}],"src":"1280:180:21"},{"body":{"nativeSrc":"1531:184:21","nodeType":"YulBlock","src":"1531:184:21","statements":[{"nativeSrc":"1541:10:21","nodeType":"YulVariableDeclaration","src":"1541:10:21","value":{"kind":"number","nativeSrc":"1550:1:21","nodeType":"YulLiteral","src":"1550:1:21","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1545:1:21","nodeType":"YulTypedName","src":"1545:1:21","type":""}]},{"body":{"nativeSrc":"1610:63:21","nodeType":"YulBlock","src":"1610:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1635:3:21","nodeType":"YulIdentifier","src":"1635:3:21"},{"name":"i","nativeSrc":"1640:1:21","nodeType":"YulIdentifier","src":"1640:1:21"}],"functionName":{"name":"add","nativeSrc":"1631:3:21","nodeType":"YulIdentifier","src":"1631:3:21"},"nativeSrc":"1631:11:21","nodeType":"YulFunctionCall","src":"1631:11:21"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"1654:3:21","nodeType":"YulIdentifier","src":"1654:3:21"},{"name":"i","nativeSrc":"1659:1:21","nodeType":"YulIdentifier","src":"1659:1:21"}],"functionName":{"name":"add","nativeSrc":"1650:3:21","nodeType":"YulIdentifier","src":"1650:3:21"},"nativeSrc":"1650:11:21","nodeType":"YulFunctionCall","src":"1650:11:21"}],"functionName":{"name":"mload","nativeSrc":"1644:5:21","nodeType":"YulIdentifier","src":"1644:5:21"},"nativeSrc":"1644:18:21","nodeType":"YulFunctionCall","src":"1644:18:21"}],"functionName":{"name":"mstore","nativeSrc":"1624:6:21","nodeType":"YulIdentifier","src":"1624:6:21"},"nativeSrc":"1624:39:21","nodeType":"YulFunctionCall","src":"1624:39:21"},"nativeSrc":"1624:39:21","nodeType":"YulExpressionStatement","src":"1624:39:21"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1571:1:21","nodeType":"YulIdentifier","src":"1571:1:21"},{"name":"length","nativeSrc":"1574:6:21","nodeType":"YulIdentifier","src":"1574:6:21"}],"functionName":{"name":"lt","nativeSrc":"1568:2:21","nodeType":"YulIdentifier","src":"1568:2:21"},"nativeSrc":"1568:13:21","nodeType":"YulFunctionCall","src":"1568:13:21"},"nativeSrc":"1560:113:21","nodeType":"YulForLoop","post":{"nativeSrc":"1582:19:21","nodeType":"YulBlock","src":"1582:19:21","statements":[{"nativeSrc":"1584:15:21","nodeType":"YulAssignment","src":"1584:15:21","value":{"arguments":[{"name":"i","nativeSrc":"1593:1:21","nodeType":"YulIdentifier","src":"1593:1:21"},{"kind":"number","nativeSrc":"1596:2:21","nodeType":"YulLiteral","src":"1596:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1589:3:21","nodeType":"YulIdentifier","src":"1589:3:21"},"nativeSrc":"1589:10:21","nodeType":"YulFunctionCall","src":"1589:10:21"},"variableNames":[{"name":"i","nativeSrc":"1584:1:21","nodeType":"YulIdentifier","src":"1584:1:21"}]}]},"pre":{"nativeSrc":"1564:3:21","nodeType":"YulBlock","src":"1564:3:21","statements":[]},"src":"1560:113:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1693:3:21","nodeType":"YulIdentifier","src":"1693:3:21"},{"name":"length","nativeSrc":"1698:6:21","nodeType":"YulIdentifier","src":"1698:6:21"}],"functionName":{"name":"add","nativeSrc":"1689:3:21","nodeType":"YulIdentifier","src":"1689:3:21"},"nativeSrc":"1689:16:21","nodeType":"YulFunctionCall","src":"1689:16:21"},{"kind":"number","nativeSrc":"1707:1:21","nodeType":"YulLiteral","src":"1707:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"1682:6:21","nodeType":"YulIdentifier","src":"1682:6:21"},"nativeSrc":"1682:27:21","nodeType":"YulFunctionCall","src":"1682:27:21"},"nativeSrc":"1682:27:21","nodeType":"YulExpressionStatement","src":"1682:27:21"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1465:250:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1509:3:21","nodeType":"YulTypedName","src":"1509:3:21","type":""},{"name":"dst","nativeSrc":"1514:3:21","nodeType":"YulTypedName","src":"1514:3:21","type":""},{"name":"length","nativeSrc":"1519:6:21","nodeType":"YulTypedName","src":"1519:6:21","type":""}],"src":"1465:250:21"},{"body":{"nativeSrc":"1770:280:21","nodeType":"YulBlock","src":"1770:280:21","statements":[{"nativeSrc":"1780:26:21","nodeType":"YulVariableDeclaration","src":"1780:26:21","value":{"arguments":[{"name":"value","nativeSrc":"1800:5:21","nodeType":"YulIdentifier","src":"1800:5:21"}],"functionName":{"name":"mload","nativeSrc":"1794:5:21","nodeType":"YulIdentifier","src":"1794:5:21"},"nativeSrc":"1794:12:21","nodeType":"YulFunctionCall","src":"1794:12:21"},"variables":[{"name":"length","nativeSrc":"1784:6:21","nodeType":"YulTypedName","src":"1784:6:21","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"1822:3:21","nodeType":"YulIdentifier","src":"1822:3:21"},{"name":"length","nativeSrc":"1827:6:21","nodeType":"YulIdentifier","src":"1827:6:21"}],"functionName":{"name":"mstore","nativeSrc":"1815:6:21","nodeType":"YulIdentifier","src":"1815:6:21"},"nativeSrc":"1815:19:21","nodeType":"YulFunctionCall","src":"1815:19:21"},"nativeSrc":"1815:19:21","nodeType":"YulExpressionStatement","src":"1815:19:21"},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1882:5:21","nodeType":"YulIdentifier","src":"1882:5:21"},{"kind":"number","nativeSrc":"1889:4:21","nodeType":"YulLiteral","src":"1889:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1878:3:21","nodeType":"YulIdentifier","src":"1878:3:21"},"nativeSrc":"1878:16:21","nodeType":"YulFunctionCall","src":"1878:16:21"},{"arguments":[{"name":"pos","nativeSrc":"1900:3:21","nodeType":"YulIdentifier","src":"1900:3:21"},{"kind":"number","nativeSrc":"1905:4:21","nodeType":"YulLiteral","src":"1905:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1896:3:21","nodeType":"YulIdentifier","src":"1896:3:21"},"nativeSrc":"1896:14:21","nodeType":"YulFunctionCall","src":"1896:14:21"},{"name":"length","nativeSrc":"1912:6:21","nodeType":"YulIdentifier","src":"1912:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1843:34:21","nodeType":"YulIdentifier","src":"1843:34:21"},"nativeSrc":"1843:76:21","nodeType":"YulFunctionCall","src":"1843:76:21"},"nativeSrc":"1843:76:21","nodeType":"YulExpressionStatement","src":"1843:76:21"},{"nativeSrc":"1928:116:21","nodeType":"YulAssignment","src":"1928:116:21","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"1943:3:21","nodeType":"YulIdentifier","src":"1943:3:21"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"1956:6:21","nodeType":"YulIdentifier","src":"1956:6:21"},{"kind":"number","nativeSrc":"1964:2:21","nodeType":"YulLiteral","src":"1964:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1952:3:21","nodeType":"YulIdentifier","src":"1952:3:21"},"nativeSrc":"1952:15:21","nodeType":"YulFunctionCall","src":"1952:15:21"},{"kind":"number","nativeSrc":"1969:66:21","nodeType":"YulLiteral","src":"1969:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nativeSrc":"1948:3:21","nodeType":"YulIdentifier","src":"1948:3:21"},"nativeSrc":"1948:88:21","nodeType":"YulFunctionCall","src":"1948:88:21"}],"functionName":{"name":"add","nativeSrc":"1939:3:21","nodeType":"YulIdentifier","src":"1939:3:21"},"nativeSrc":"1939:98:21","nodeType":"YulFunctionCall","src":"1939:98:21"},{"kind":"number","nativeSrc":"2039:4:21","nodeType":"YulLiteral","src":"2039:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1935:3:21","nodeType":"YulIdentifier","src":"1935:3:21"},"nativeSrc":"1935:109:21","nodeType":"YulFunctionCall","src":"1935:109:21"},"variableNames":[{"name":"end","nativeSrc":"1928:3:21","nodeType":"YulIdentifier","src":"1928:3:21"}]}]},"name":"abi_encode_string","nativeSrc":"1720:330:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1747:5:21","nodeType":"YulTypedName","src":"1747:5:21","type":""},{"name":"pos","nativeSrc":"1754:3:21","nodeType":"YulTypedName","src":"1754:3:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"1762:3:21","nodeType":"YulTypedName","src":"1762:3:21","type":""}],"src":"1720:330:21"},{"body":{"nativeSrc":"2176:99:21","nodeType":"YulBlock","src":"2176:99:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2193:9:21","nodeType":"YulIdentifier","src":"2193:9:21"},{"kind":"number","nativeSrc":"2204:2:21","nodeType":"YulLiteral","src":"2204:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"2186:6:21","nodeType":"YulIdentifier","src":"2186:6:21"},"nativeSrc":"2186:21:21","nodeType":"YulFunctionCall","src":"2186:21:21"},"nativeSrc":"2186:21:21","nodeType":"YulExpressionStatement","src":"2186:21:21"},{"nativeSrc":"2216:53:21","nodeType":"YulAssignment","src":"2216:53:21","value":{"arguments":[{"name":"value0","nativeSrc":"2242:6:21","nodeType":"YulIdentifier","src":"2242:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"2254:9:21","nodeType":"YulIdentifier","src":"2254:9:21"},{"kind":"number","nativeSrc":"2265:2:21","nodeType":"YulLiteral","src":"2265:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2250:3:21","nodeType":"YulIdentifier","src":"2250:3:21"},"nativeSrc":"2250:18:21","nodeType":"YulFunctionCall","src":"2250:18:21"}],"functionName":{"name":"abi_encode_string","nativeSrc":"2224:17:21","nodeType":"YulIdentifier","src":"2224:17:21"},"nativeSrc":"2224:45:21","nodeType":"YulFunctionCall","src":"2224:45:21"},"variableNames":[{"name":"tail","nativeSrc":"2216:4:21","nodeType":"YulIdentifier","src":"2216:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2055:220:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2145:9:21","nodeType":"YulTypedName","src":"2145:9:21","type":""},{"name":"value0","nativeSrc":"2156:6:21","nodeType":"YulTypedName","src":"2156:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2167:4:21","nodeType":"YulTypedName","src":"2167:4:21","type":""}],"src":"2055:220:21"},{"body":{"nativeSrc":"2396:125:21","nodeType":"YulBlock","src":"2396:125:21","statements":[{"nativeSrc":"2406:26:21","nodeType":"YulAssignment","src":"2406:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2418:9:21","nodeType":"YulIdentifier","src":"2418:9:21"},{"kind":"number","nativeSrc":"2429:2:21","nodeType":"YulLiteral","src":"2429:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2414:3:21","nodeType":"YulIdentifier","src":"2414:3:21"},"nativeSrc":"2414:18:21","nodeType":"YulFunctionCall","src":"2414:18:21"},"variableNames":[{"name":"tail","nativeSrc":"2406:4:21","nodeType":"YulIdentifier","src":"2406:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2448:9:21","nodeType":"YulIdentifier","src":"2448:9:21"},{"arguments":[{"name":"value0","nativeSrc":"2463:6:21","nodeType":"YulIdentifier","src":"2463:6:21"},{"kind":"number","nativeSrc":"2471:42:21","nodeType":"YulLiteral","src":"2471:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"2459:3:21","nodeType":"YulIdentifier","src":"2459:3:21"},"nativeSrc":"2459:55:21","nodeType":"YulFunctionCall","src":"2459:55:21"}],"functionName":{"name":"mstore","nativeSrc":"2441:6:21","nodeType":"YulIdentifier","src":"2441:6:21"},"nativeSrc":"2441:74:21","nodeType":"YulFunctionCall","src":"2441:74:21"},"nativeSrc":"2441:74:21","nodeType":"YulExpressionStatement","src":"2441:74:21"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$1614__to_t_address__fromStack_reversed","nativeSrc":"2280:241:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2365:9:21","nodeType":"YulTypedName","src":"2365:9:21","type":""},{"name":"value0","nativeSrc":"2376:6:21","nodeType":"YulTypedName","src":"2376:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2387:4:21","nodeType":"YulTypedName","src":"2387:4:21","type":""}],"src":"2280:241:21"},{"body":{"nativeSrc":"2558:152:21","nodeType":"YulBlock","src":"2558:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2575:1:21","nodeType":"YulLiteral","src":"2575:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2578:77:21","nodeType":"YulLiteral","src":"2578:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"2568:6:21","nodeType":"YulIdentifier","src":"2568:6:21"},"nativeSrc":"2568:88:21","nodeType":"YulFunctionCall","src":"2568:88:21"},"nativeSrc":"2568:88:21","nodeType":"YulExpressionStatement","src":"2568:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2672:1:21","nodeType":"YulLiteral","src":"2672:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"2675:4:21","nodeType":"YulLiteral","src":"2675:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"2665:6:21","nodeType":"YulIdentifier","src":"2665:6:21"},"nativeSrc":"2665:15:21","nodeType":"YulFunctionCall","src":"2665:15:21"},"nativeSrc":"2665:15:21","nodeType":"YulExpressionStatement","src":"2665:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2696:1:21","nodeType":"YulLiteral","src":"2696:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2699:4:21","nodeType":"YulLiteral","src":"2699:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"2689:6:21","nodeType":"YulIdentifier","src":"2689:6:21"},"nativeSrc":"2689:15:21","nodeType":"YulFunctionCall","src":"2689:15:21"},"nativeSrc":"2689:15:21","nodeType":"YulExpressionStatement","src":"2689:15:21"}]},"name":"panic_error_0x41","nativeSrc":"2526:184:21","nodeType":"YulFunctionDefinition","src":"2526:184:21"},{"body":{"nativeSrc":"2760:289:21","nodeType":"YulBlock","src":"2760:289:21","statements":[{"nativeSrc":"2770:19:21","nodeType":"YulAssignment","src":"2770:19:21","value":{"arguments":[{"kind":"number","nativeSrc":"2786:2:21","nodeType":"YulLiteral","src":"2786:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"2780:5:21","nodeType":"YulIdentifier","src":"2780:5:21"},"nativeSrc":"2780:9:21","nodeType":"YulFunctionCall","src":"2780:9:21"},"variableNames":[{"name":"memPtr","nativeSrc":"2770:6:21","nodeType":"YulIdentifier","src":"2770:6:21"}]},{"nativeSrc":"2798:117:21","nodeType":"YulVariableDeclaration","src":"2798:117:21","value":{"arguments":[{"name":"memPtr","nativeSrc":"2820:6:21","nodeType":"YulIdentifier","src":"2820:6:21"},{"arguments":[{"arguments":[{"name":"size","nativeSrc":"2836:4:21","nodeType":"YulIdentifier","src":"2836:4:21"},{"kind":"number","nativeSrc":"2842:2:21","nodeType":"YulLiteral","src":"2842:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2832:3:21","nodeType":"YulIdentifier","src":"2832:3:21"},"nativeSrc":"2832:13:21","nodeType":"YulFunctionCall","src":"2832:13:21"},{"kind":"number","nativeSrc":"2847:66:21","nodeType":"YulLiteral","src":"2847:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nativeSrc":"2828:3:21","nodeType":"YulIdentifier","src":"2828:3:21"},"nativeSrc":"2828:86:21","nodeType":"YulFunctionCall","src":"2828:86:21"}],"functionName":{"name":"add","nativeSrc":"2816:3:21","nodeType":"YulIdentifier","src":"2816:3:21"},"nativeSrc":"2816:99:21","nodeType":"YulFunctionCall","src":"2816:99:21"},"variables":[{"name":"newFreePtr","nativeSrc":"2802:10:21","nodeType":"YulTypedName","src":"2802:10:21","type":""}]},{"body":{"nativeSrc":"2990:22:21","nodeType":"YulBlock","src":"2990:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"2992:16:21","nodeType":"YulIdentifier","src":"2992:16:21"},"nativeSrc":"2992:18:21","nodeType":"YulFunctionCall","src":"2992:18:21"},"nativeSrc":"2992:18:21","nodeType":"YulExpressionStatement","src":"2992:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"2933:10:21","nodeType":"YulIdentifier","src":"2933:10:21"},{"kind":"number","nativeSrc":"2945:18:21","nodeType":"YulLiteral","src":"2945:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"2930:2:21","nodeType":"YulIdentifier","src":"2930:2:21"},"nativeSrc":"2930:34:21","nodeType":"YulFunctionCall","src":"2930:34:21"},{"arguments":[{"name":"newFreePtr","nativeSrc":"2969:10:21","nodeType":"YulIdentifier","src":"2969:10:21"},{"name":"memPtr","nativeSrc":"2981:6:21","nodeType":"YulIdentifier","src":"2981:6:21"}],"functionName":{"name":"lt","nativeSrc":"2966:2:21","nodeType":"YulIdentifier","src":"2966:2:21"},"nativeSrc":"2966:22:21","nodeType":"YulFunctionCall","src":"2966:22:21"}],"functionName":{"name":"or","nativeSrc":"2927:2:21","nodeType":"YulIdentifier","src":"2927:2:21"},"nativeSrc":"2927:62:21","nodeType":"YulFunctionCall","src":"2927:62:21"},"nativeSrc":"2924:88:21","nodeType":"YulIf","src":"2924:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3028:2:21","nodeType":"YulLiteral","src":"3028:2:21","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"3032:10:21","nodeType":"YulIdentifier","src":"3032:10:21"}],"functionName":{"name":"mstore","nativeSrc":"3021:6:21","nodeType":"YulIdentifier","src":"3021:6:21"},"nativeSrc":"3021:22:21","nodeType":"YulFunctionCall","src":"3021:22:21"},"nativeSrc":"3021:22:21","nodeType":"YulExpressionStatement","src":"3021:22:21"}]},"name":"allocate_memory","nativeSrc":"2715:334:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"2740:4:21","nodeType":"YulTypedName","src":"2740:4:21","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"2749:6:21","nodeType":"YulTypedName","src":"2749:6:21","type":""}],"src":"2715:334:21"},{"body":{"nativeSrc":"3123:114:21","nodeType":"YulBlock","src":"3123:114:21","statements":[{"body":{"nativeSrc":"3167:22:21","nodeType":"YulBlock","src":"3167:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3169:16:21","nodeType":"YulIdentifier","src":"3169:16:21"},"nativeSrc":"3169:18:21","nodeType":"YulFunctionCall","src":"3169:18:21"},"nativeSrc":"3169:18:21","nodeType":"YulExpressionStatement","src":"3169:18:21"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"3139:6:21","nodeType":"YulIdentifier","src":"3139:6:21"},{"kind":"number","nativeSrc":"3147:18:21","nodeType":"YulLiteral","src":"3147:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3136:2:21","nodeType":"YulIdentifier","src":"3136:2:21"},"nativeSrc":"3136:30:21","nodeType":"YulFunctionCall","src":"3136:30:21"},"nativeSrc":"3133:56:21","nodeType":"YulIf","src":"3133:56:21"},{"nativeSrc":"3198:33:21","nodeType":"YulAssignment","src":"3198:33:21","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3214:1:21","nodeType":"YulLiteral","src":"3214:1:21","type":"","value":"5"},{"name":"length","nativeSrc":"3217:6:21","nodeType":"YulIdentifier","src":"3217:6:21"}],"functionName":{"name":"shl","nativeSrc":"3210:3:21","nodeType":"YulIdentifier","src":"3210:3:21"},"nativeSrc":"3210:14:21","nodeType":"YulFunctionCall","src":"3210:14:21"},{"kind":"number","nativeSrc":"3226:4:21","nodeType":"YulLiteral","src":"3226:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3206:3:21","nodeType":"YulIdentifier","src":"3206:3:21"},"nativeSrc":"3206:25:21","nodeType":"YulFunctionCall","src":"3206:25:21"},"variableNames":[{"name":"size","nativeSrc":"3198:4:21","nodeType":"YulIdentifier","src":"3198:4:21"}]}]},"name":"array_allocation_size_array_uint256_dyn","nativeSrc":"3054:183:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"3103:6:21","nodeType":"YulTypedName","src":"3103:6:21","type":""}],"returnVariables":[{"name":"size","nativeSrc":"3114:4:21","nodeType":"YulTypedName","src":"3114:4:21","type":""}],"src":"3054:183:21"},{"body":{"nativeSrc":"3306:604:21","nodeType":"YulBlock","src":"3306:604:21","statements":[{"body":{"nativeSrc":"3355:16:21","nodeType":"YulBlock","src":"3355:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3364:1:21","nodeType":"YulLiteral","src":"3364:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"3367:1:21","nodeType":"YulLiteral","src":"3367:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3357:6:21","nodeType":"YulIdentifier","src":"3357:6:21"},"nativeSrc":"3357:12:21","nodeType":"YulFunctionCall","src":"3357:12:21"},"nativeSrc":"3357:12:21","nodeType":"YulExpressionStatement","src":"3357:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"3334:6:21","nodeType":"YulIdentifier","src":"3334:6:21"},{"kind":"number","nativeSrc":"3342:4:21","nodeType":"YulLiteral","src":"3342:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"3330:3:21","nodeType":"YulIdentifier","src":"3330:3:21"},"nativeSrc":"3330:17:21","nodeType":"YulFunctionCall","src":"3330:17:21"},{"name":"end","nativeSrc":"3349:3:21","nodeType":"YulIdentifier","src":"3349:3:21"}],"functionName":{"name":"slt","nativeSrc":"3326:3:21","nodeType":"YulIdentifier","src":"3326:3:21"},"nativeSrc":"3326:27:21","nodeType":"YulFunctionCall","src":"3326:27:21"}],"functionName":{"name":"iszero","nativeSrc":"3319:6:21","nodeType":"YulIdentifier","src":"3319:6:21"},"nativeSrc":"3319:35:21","nodeType":"YulFunctionCall","src":"3319:35:21"},"nativeSrc":"3316:55:21","nodeType":"YulIf","src":"3316:55:21"},{"nativeSrc":"3380:30:21","nodeType":"YulVariableDeclaration","src":"3380:30:21","value":{"arguments":[{"name":"offset","nativeSrc":"3403:6:21","nodeType":"YulIdentifier","src":"3403:6:21"}],"functionName":{"name":"calldataload","nativeSrc":"3390:12:21","nodeType":"YulIdentifier","src":"3390:12:21"},"nativeSrc":"3390:20:21","nodeType":"YulFunctionCall","src":"3390:20:21"},"variables":[{"name":"_1","nativeSrc":"3384:2:21","nodeType":"YulTypedName","src":"3384:2:21","type":""}]},{"nativeSrc":"3419:14:21","nodeType":"YulVariableDeclaration","src":"3419:14:21","value":{"kind":"number","nativeSrc":"3429:4:21","nodeType":"YulLiteral","src":"3429:4:21","type":"","value":"0x20"},"variables":[{"name":"_2","nativeSrc":"3423:2:21","nodeType":"YulTypedName","src":"3423:2:21","type":""}]},{"nativeSrc":"3442:71:21","nodeType":"YulVariableDeclaration","src":"3442:71:21","value":{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"3509:2:21","nodeType":"YulIdentifier","src":"3509:2:21"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nativeSrc":"3469:39:21","nodeType":"YulIdentifier","src":"3469:39:21"},"nativeSrc":"3469:43:21","nodeType":"YulFunctionCall","src":"3469:43:21"}],"functionName":{"name":"allocate_memory","nativeSrc":"3453:15:21","nodeType":"YulIdentifier","src":"3453:15:21"},"nativeSrc":"3453:60:21","nodeType":"YulFunctionCall","src":"3453:60:21"},"variables":[{"name":"dst","nativeSrc":"3446:3:21","nodeType":"YulTypedName","src":"3446:3:21","type":""}]},{"nativeSrc":"3522:16:21","nodeType":"YulVariableDeclaration","src":"3522:16:21","value":{"name":"dst","nativeSrc":"3535:3:21","nodeType":"YulIdentifier","src":"3535:3:21"},"variables":[{"name":"dst_1","nativeSrc":"3526:5:21","nodeType":"YulTypedName","src":"3526:5:21","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"3554:3:21","nodeType":"YulIdentifier","src":"3554:3:21"},{"name":"_1","nativeSrc":"3559:2:21","nodeType":"YulIdentifier","src":"3559:2:21"}],"functionName":{"name":"mstore","nativeSrc":"3547:6:21","nodeType":"YulIdentifier","src":"3547:6:21"},"nativeSrc":"3547:15:21","nodeType":"YulFunctionCall","src":"3547:15:21"},"nativeSrc":"3547:15:21","nodeType":"YulExpressionStatement","src":"3547:15:21"},{"nativeSrc":"3571:21:21","nodeType":"YulAssignment","src":"3571:21:21","value":{"arguments":[{"name":"dst","nativeSrc":"3582:3:21","nodeType":"YulIdentifier","src":"3582:3:21"},{"kind":"number","nativeSrc":"3587:4:21","nodeType":"YulLiteral","src":"3587:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3578:3:21","nodeType":"YulIdentifier","src":"3578:3:21"},"nativeSrc":"3578:14:21","nodeType":"YulFunctionCall","src":"3578:14:21"},"variableNames":[{"name":"dst","nativeSrc":"3571:3:21","nodeType":"YulIdentifier","src":"3571:3:21"}]},{"nativeSrc":"3601:48:21","nodeType":"YulVariableDeclaration","src":"3601:48:21","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"3623:6:21","nodeType":"YulIdentifier","src":"3623:6:21"},{"arguments":[{"kind":"number","nativeSrc":"3635:1:21","nodeType":"YulLiteral","src":"3635:1:21","type":"","value":"5"},{"name":"_1","nativeSrc":"3638:2:21","nodeType":"YulIdentifier","src":"3638:2:21"}],"functionName":{"name":"shl","nativeSrc":"3631:3:21","nodeType":"YulIdentifier","src":"3631:3:21"},"nativeSrc":"3631:10:21","nodeType":"YulFunctionCall","src":"3631:10:21"}],"functionName":{"name":"add","nativeSrc":"3619:3:21","nodeType":"YulIdentifier","src":"3619:3:21"},"nativeSrc":"3619:23:21","nodeType":"YulFunctionCall","src":"3619:23:21"},{"kind":"number","nativeSrc":"3644:4:21","nodeType":"YulLiteral","src":"3644:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3615:3:21","nodeType":"YulIdentifier","src":"3615:3:21"},"nativeSrc":"3615:34:21","nodeType":"YulFunctionCall","src":"3615:34:21"},"variables":[{"name":"srcEnd","nativeSrc":"3605:6:21","nodeType":"YulTypedName","src":"3605:6:21","type":""}]},{"body":{"nativeSrc":"3677:16:21","nodeType":"YulBlock","src":"3677:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3686:1:21","nodeType":"YulLiteral","src":"3686:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"3689:1:21","nodeType":"YulLiteral","src":"3689:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3679:6:21","nodeType":"YulIdentifier","src":"3679:6:21"},"nativeSrc":"3679:12:21","nodeType":"YulFunctionCall","src":"3679:12:21"},"nativeSrc":"3679:12:21","nodeType":"YulExpressionStatement","src":"3679:12:21"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"3664:6:21","nodeType":"YulIdentifier","src":"3664:6:21"},{"name":"end","nativeSrc":"3672:3:21","nodeType":"YulIdentifier","src":"3672:3:21"}],"functionName":{"name":"gt","nativeSrc":"3661:2:21","nodeType":"YulIdentifier","src":"3661:2:21"},"nativeSrc":"3661:15:21","nodeType":"YulFunctionCall","src":"3661:15:21"},"nativeSrc":"3658:35:21","nodeType":"YulIf","src":"3658:35:21"},{"nativeSrc":"3702:28:21","nodeType":"YulVariableDeclaration","src":"3702:28:21","value":{"arguments":[{"name":"offset","nativeSrc":"3717:6:21","nodeType":"YulIdentifier","src":"3717:6:21"},{"kind":"number","nativeSrc":"3725:4:21","nodeType":"YulLiteral","src":"3725:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3713:3:21","nodeType":"YulIdentifier","src":"3713:3:21"},"nativeSrc":"3713:17:21","nodeType":"YulFunctionCall","src":"3713:17:21"},"variables":[{"name":"src","nativeSrc":"3706:3:21","nodeType":"YulTypedName","src":"3706:3:21","type":""}]},{"body":{"nativeSrc":"3795:86:21","nodeType":"YulBlock","src":"3795:86:21","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"3816:3:21","nodeType":"YulIdentifier","src":"3816:3:21"},{"arguments":[{"name":"src","nativeSrc":"3834:3:21","nodeType":"YulIdentifier","src":"3834:3:21"}],"functionName":{"name":"calldataload","nativeSrc":"3821:12:21","nodeType":"YulIdentifier","src":"3821:12:21"},"nativeSrc":"3821:17:21","nodeType":"YulFunctionCall","src":"3821:17:21"}],"functionName":{"name":"mstore","nativeSrc":"3809:6:21","nodeType":"YulIdentifier","src":"3809:6:21"},"nativeSrc":"3809:30:21","nodeType":"YulFunctionCall","src":"3809:30:21"},"nativeSrc":"3809:30:21","nodeType":"YulExpressionStatement","src":"3809:30:21"},{"nativeSrc":"3852:19:21","nodeType":"YulAssignment","src":"3852:19:21","value":{"arguments":[{"name":"dst","nativeSrc":"3863:3:21","nodeType":"YulIdentifier","src":"3863:3:21"},{"name":"_2","nativeSrc":"3868:2:21","nodeType":"YulIdentifier","src":"3868:2:21"}],"functionName":{"name":"add","nativeSrc":"3859:3:21","nodeType":"YulIdentifier","src":"3859:3:21"},"nativeSrc":"3859:12:21","nodeType":"YulFunctionCall","src":"3859:12:21"},"variableNames":[{"name":"dst","nativeSrc":"3852:3:21","nodeType":"YulIdentifier","src":"3852:3:21"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"3750:3:21","nodeType":"YulIdentifier","src":"3750:3:21"},{"name":"srcEnd","nativeSrc":"3755:6:21","nodeType":"YulIdentifier","src":"3755:6:21"}],"functionName":{"name":"lt","nativeSrc":"3747:2:21","nodeType":"YulIdentifier","src":"3747:2:21"},"nativeSrc":"3747:15:21","nodeType":"YulFunctionCall","src":"3747:15:21"},"nativeSrc":"3739:142:21","nodeType":"YulForLoop","post":{"nativeSrc":"3763:23:21","nodeType":"YulBlock","src":"3763:23:21","statements":[{"nativeSrc":"3765:19:21","nodeType":"YulAssignment","src":"3765:19:21","value":{"arguments":[{"name":"src","nativeSrc":"3776:3:21","nodeType":"YulIdentifier","src":"3776:3:21"},{"name":"_2","nativeSrc":"3781:2:21","nodeType":"YulIdentifier","src":"3781:2:21"}],"functionName":{"name":"add","nativeSrc":"3772:3:21","nodeType":"YulIdentifier","src":"3772:3:21"},"nativeSrc":"3772:12:21","nodeType":"YulFunctionCall","src":"3772:12:21"},"variableNames":[{"name":"src","nativeSrc":"3765:3:21","nodeType":"YulIdentifier","src":"3765:3:21"}]}]},"pre":{"nativeSrc":"3743:3:21","nodeType":"YulBlock","src":"3743:3:21","statements":[]},"src":"3739:142:21"},{"nativeSrc":"3890:14:21","nodeType":"YulAssignment","src":"3890:14:21","value":{"name":"dst_1","nativeSrc":"3899:5:21","nodeType":"YulIdentifier","src":"3899:5:21"},"variableNames":[{"name":"array","nativeSrc":"3890:5:21","nodeType":"YulIdentifier","src":"3890:5:21"}]}]},"name":"abi_decode_array_uint256_dyn","nativeSrc":"3242:668:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3280:6:21","nodeType":"YulTypedName","src":"3280:6:21","type":""},{"name":"end","nativeSrc":"3288:3:21","nodeType":"YulTypedName","src":"3288:3:21","type":""}],"returnVariables":[{"name":"array","nativeSrc":"3296:5:21","nodeType":"YulTypedName","src":"3296:5:21","type":""}],"src":"3242:668:21"},{"body":{"nativeSrc":"3967:537:21","nodeType":"YulBlock","src":"3967:537:21","statements":[{"body":{"nativeSrc":"4016:16:21","nodeType":"YulBlock","src":"4016:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4025:1:21","nodeType":"YulLiteral","src":"4025:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"4028:1:21","nodeType":"YulLiteral","src":"4028:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4018:6:21","nodeType":"YulIdentifier","src":"4018:6:21"},"nativeSrc":"4018:12:21","nodeType":"YulFunctionCall","src":"4018:12:21"},"nativeSrc":"4018:12:21","nodeType":"YulExpressionStatement","src":"4018:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"3995:6:21","nodeType":"YulIdentifier","src":"3995:6:21"},{"kind":"number","nativeSrc":"4003:4:21","nodeType":"YulLiteral","src":"4003:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"3991:3:21","nodeType":"YulIdentifier","src":"3991:3:21"},"nativeSrc":"3991:17:21","nodeType":"YulFunctionCall","src":"3991:17:21"},{"name":"end","nativeSrc":"4010:3:21","nodeType":"YulIdentifier","src":"4010:3:21"}],"functionName":{"name":"slt","nativeSrc":"3987:3:21","nodeType":"YulIdentifier","src":"3987:3:21"},"nativeSrc":"3987:27:21","nodeType":"YulFunctionCall","src":"3987:27:21"}],"functionName":{"name":"iszero","nativeSrc":"3980:6:21","nodeType":"YulIdentifier","src":"3980:6:21"},"nativeSrc":"3980:35:21","nodeType":"YulFunctionCall","src":"3980:35:21"},"nativeSrc":"3977:55:21","nodeType":"YulIf","src":"3977:55:21"},{"nativeSrc":"4041:30:21","nodeType":"YulVariableDeclaration","src":"4041:30:21","value":{"arguments":[{"name":"offset","nativeSrc":"4064:6:21","nodeType":"YulIdentifier","src":"4064:6:21"}],"functionName":{"name":"calldataload","nativeSrc":"4051:12:21","nodeType":"YulIdentifier","src":"4051:12:21"},"nativeSrc":"4051:20:21","nodeType":"YulFunctionCall","src":"4051:20:21"},"variables":[{"name":"_1","nativeSrc":"4045:2:21","nodeType":"YulTypedName","src":"4045:2:21","type":""}]},{"body":{"nativeSrc":"4110:22:21","nodeType":"YulBlock","src":"4110:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"4112:16:21","nodeType":"YulIdentifier","src":"4112:16:21"},"nativeSrc":"4112:18:21","nodeType":"YulFunctionCall","src":"4112:18:21"},"nativeSrc":"4112:18:21","nodeType":"YulExpressionStatement","src":"4112:18:21"}]},"condition":{"arguments":[{"name":"_1","nativeSrc":"4086:2:21","nodeType":"YulIdentifier","src":"4086:2:21"},{"kind":"number","nativeSrc":"4090:18:21","nodeType":"YulLiteral","src":"4090:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4083:2:21","nodeType":"YulIdentifier","src":"4083:2:21"},"nativeSrc":"4083:26:21","nodeType":"YulFunctionCall","src":"4083:26:21"},"nativeSrc":"4080:52:21","nodeType":"YulIf","src":"4080:52:21"},{"nativeSrc":"4141:129:21","nodeType":"YulVariableDeclaration","src":"4141:129:21","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"4184:2:21","nodeType":"YulIdentifier","src":"4184:2:21"},{"kind":"number","nativeSrc":"4188:4:21","nodeType":"YulLiteral","src":"4188:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"4180:3:21","nodeType":"YulIdentifier","src":"4180:3:21"},"nativeSrc":"4180:13:21","nodeType":"YulFunctionCall","src":"4180:13:21"},{"kind":"number","nativeSrc":"4195:66:21","nodeType":"YulLiteral","src":"4195:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nativeSrc":"4176:3:21","nodeType":"YulIdentifier","src":"4176:3:21"},"nativeSrc":"4176:86:21","nodeType":"YulFunctionCall","src":"4176:86:21"},{"kind":"number","nativeSrc":"4264:4:21","nodeType":"YulLiteral","src":"4264:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4172:3:21","nodeType":"YulIdentifier","src":"4172:3:21"},"nativeSrc":"4172:97:21","nodeType":"YulFunctionCall","src":"4172:97:21"}],"functionName":{"name":"allocate_memory","nativeSrc":"4156:15:21","nodeType":"YulIdentifier","src":"4156:15:21"},"nativeSrc":"4156:114:21","nodeType":"YulFunctionCall","src":"4156:114:21"},"variables":[{"name":"array_1","nativeSrc":"4145:7:21","nodeType":"YulTypedName","src":"4145:7:21","type":""}]},{"expression":{"arguments":[{"name":"array_1","nativeSrc":"4286:7:21","nodeType":"YulIdentifier","src":"4286:7:21"},{"name":"_1","nativeSrc":"4295:2:21","nodeType":"YulIdentifier","src":"4295:2:21"}],"functionName":{"name":"mstore","nativeSrc":"4279:6:21","nodeType":"YulIdentifier","src":"4279:6:21"},"nativeSrc":"4279:19:21","nodeType":"YulFunctionCall","src":"4279:19:21"},"nativeSrc":"4279:19:21","nodeType":"YulExpressionStatement","src":"4279:19:21"},{"body":{"nativeSrc":"4346:16:21","nodeType":"YulBlock","src":"4346:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4355:1:21","nodeType":"YulLiteral","src":"4355:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"4358:1:21","nodeType":"YulLiteral","src":"4358:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4348:6:21","nodeType":"YulIdentifier","src":"4348:6:21"},"nativeSrc":"4348:12:21","nodeType":"YulFunctionCall","src":"4348:12:21"},"nativeSrc":"4348:12:21","nodeType":"YulExpressionStatement","src":"4348:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"4321:6:21","nodeType":"YulIdentifier","src":"4321:6:21"},{"name":"_1","nativeSrc":"4329:2:21","nodeType":"YulIdentifier","src":"4329:2:21"}],"functionName":{"name":"add","nativeSrc":"4317:3:21","nodeType":"YulIdentifier","src":"4317:3:21"},"nativeSrc":"4317:15:21","nodeType":"YulFunctionCall","src":"4317:15:21"},{"kind":"number","nativeSrc":"4334:4:21","nodeType":"YulLiteral","src":"4334:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4313:3:21","nodeType":"YulIdentifier","src":"4313:3:21"},"nativeSrc":"4313:26:21","nodeType":"YulFunctionCall","src":"4313:26:21"},{"name":"end","nativeSrc":"4341:3:21","nodeType":"YulIdentifier","src":"4341:3:21"}],"functionName":{"name":"gt","nativeSrc":"4310:2:21","nodeType":"YulIdentifier","src":"4310:2:21"},"nativeSrc":"4310:35:21","nodeType":"YulFunctionCall","src":"4310:35:21"},"nativeSrc":"4307:55:21","nodeType":"YulIf","src":"4307:55:21"},{"expression":{"arguments":[{"arguments":[{"name":"array_1","nativeSrc":"4388:7:21","nodeType":"YulIdentifier","src":"4388:7:21"},{"kind":"number","nativeSrc":"4397:4:21","nodeType":"YulLiteral","src":"4397:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4384:3:21","nodeType":"YulIdentifier","src":"4384:3:21"},"nativeSrc":"4384:18:21","nodeType":"YulFunctionCall","src":"4384:18:21"},{"arguments":[{"name":"offset","nativeSrc":"4408:6:21","nodeType":"YulIdentifier","src":"4408:6:21"},{"kind":"number","nativeSrc":"4416:4:21","nodeType":"YulLiteral","src":"4416:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4404:3:21","nodeType":"YulIdentifier","src":"4404:3:21"},"nativeSrc":"4404:17:21","nodeType":"YulFunctionCall","src":"4404:17:21"},{"name":"_1","nativeSrc":"4423:2:21","nodeType":"YulIdentifier","src":"4423:2:21"}],"functionName":{"name":"calldatacopy","nativeSrc":"4371:12:21","nodeType":"YulIdentifier","src":"4371:12:21"},"nativeSrc":"4371:55:21","nodeType":"YulFunctionCall","src":"4371:55:21"},"nativeSrc":"4371:55:21","nodeType":"YulExpressionStatement","src":"4371:55:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array_1","nativeSrc":"4450:7:21","nodeType":"YulIdentifier","src":"4450:7:21"},{"name":"_1","nativeSrc":"4459:2:21","nodeType":"YulIdentifier","src":"4459:2:21"}],"functionName":{"name":"add","nativeSrc":"4446:3:21","nodeType":"YulIdentifier","src":"4446:3:21"},"nativeSrc":"4446:16:21","nodeType":"YulFunctionCall","src":"4446:16:21"},{"kind":"number","nativeSrc":"4464:4:21","nodeType":"YulLiteral","src":"4464:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4442:3:21","nodeType":"YulIdentifier","src":"4442:3:21"},"nativeSrc":"4442:27:21","nodeType":"YulFunctionCall","src":"4442:27:21"},{"kind":"number","nativeSrc":"4471:1:21","nodeType":"YulLiteral","src":"4471:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"4435:6:21","nodeType":"YulIdentifier","src":"4435:6:21"},"nativeSrc":"4435:38:21","nodeType":"YulFunctionCall","src":"4435:38:21"},"nativeSrc":"4435:38:21","nodeType":"YulExpressionStatement","src":"4435:38:21"},{"nativeSrc":"4482:16:21","nodeType":"YulAssignment","src":"4482:16:21","value":{"name":"array_1","nativeSrc":"4491:7:21","nodeType":"YulIdentifier","src":"4491:7:21"},"variableNames":[{"name":"array","nativeSrc":"4482:5:21","nodeType":"YulIdentifier","src":"4482:5:21"}]}]},"name":"abi_decode_bytes","nativeSrc":"3915:589:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3941:6:21","nodeType":"YulTypedName","src":"3941:6:21","type":""},{"name":"end","nativeSrc":"3949:3:21","nodeType":"YulTypedName","src":"3949:3:21","type":""}],"returnVariables":[{"name":"array","nativeSrc":"3957:5:21","nodeType":"YulTypedName","src":"3957:5:21","type":""}],"src":"3915:589:21"},{"body":{"nativeSrc":"4706:746:21","nodeType":"YulBlock","src":"4706:746:21","statements":[{"body":{"nativeSrc":"4753:16:21","nodeType":"YulBlock","src":"4753:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4762:1:21","nodeType":"YulLiteral","src":"4762:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"4765:1:21","nodeType":"YulLiteral","src":"4765:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4755:6:21","nodeType":"YulIdentifier","src":"4755:6:21"},"nativeSrc":"4755:12:21","nodeType":"YulFunctionCall","src":"4755:12:21"},"nativeSrc":"4755:12:21","nodeType":"YulExpressionStatement","src":"4755:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4727:7:21","nodeType":"YulIdentifier","src":"4727:7:21"},{"name":"headStart","nativeSrc":"4736:9:21","nodeType":"YulIdentifier","src":"4736:9:21"}],"functionName":{"name":"sub","nativeSrc":"4723:3:21","nodeType":"YulIdentifier","src":"4723:3:21"},"nativeSrc":"4723:23:21","nodeType":"YulFunctionCall","src":"4723:23:21"},{"kind":"number","nativeSrc":"4748:3:21","nodeType":"YulLiteral","src":"4748:3:21","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"4719:3:21","nodeType":"YulIdentifier","src":"4719:3:21"},"nativeSrc":"4719:33:21","nodeType":"YulFunctionCall","src":"4719:33:21"},"nativeSrc":"4716:53:21","nodeType":"YulIf","src":"4716:53:21"},{"nativeSrc":"4778:39:21","nodeType":"YulAssignment","src":"4778:39:21","value":{"arguments":[{"name":"headStart","nativeSrc":"4807:9:21","nodeType":"YulIdentifier","src":"4807:9:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"4788:18:21","nodeType":"YulIdentifier","src":"4788:18:21"},"nativeSrc":"4788:29:21","nodeType":"YulFunctionCall","src":"4788:29:21"},"variableNames":[{"name":"value0","nativeSrc":"4778:6:21","nodeType":"YulIdentifier","src":"4778:6:21"}]},{"nativeSrc":"4826:48:21","nodeType":"YulAssignment","src":"4826:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4859:9:21","nodeType":"YulIdentifier","src":"4859:9:21"},{"kind":"number","nativeSrc":"4870:2:21","nodeType":"YulLiteral","src":"4870:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4855:3:21","nodeType":"YulIdentifier","src":"4855:3:21"},"nativeSrc":"4855:18:21","nodeType":"YulFunctionCall","src":"4855:18:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"4836:18:21","nodeType":"YulIdentifier","src":"4836:18:21"},"nativeSrc":"4836:38:21","nodeType":"YulFunctionCall","src":"4836:38:21"},"variableNames":[{"name":"value1","nativeSrc":"4826:6:21","nodeType":"YulIdentifier","src":"4826:6:21"}]},{"nativeSrc":"4883:46:21","nodeType":"YulVariableDeclaration","src":"4883:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4914:9:21","nodeType":"YulIdentifier","src":"4914:9:21"},{"kind":"number","nativeSrc":"4925:2:21","nodeType":"YulLiteral","src":"4925:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4910:3:21","nodeType":"YulIdentifier","src":"4910:3:21"},"nativeSrc":"4910:18:21","nodeType":"YulFunctionCall","src":"4910:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"4897:12:21","nodeType":"YulIdentifier","src":"4897:12:21"},"nativeSrc":"4897:32:21","nodeType":"YulFunctionCall","src":"4897:32:21"},"variables":[{"name":"offset","nativeSrc":"4887:6:21","nodeType":"YulTypedName","src":"4887:6:21","type":""}]},{"nativeSrc":"4938:28:21","nodeType":"YulVariableDeclaration","src":"4938:28:21","value":{"kind":"number","nativeSrc":"4948:18:21","nodeType":"YulLiteral","src":"4948:18:21","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"4942:2:21","nodeType":"YulTypedName","src":"4942:2:21","type":""}]},{"body":{"nativeSrc":"4993:16:21","nodeType":"YulBlock","src":"4993:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5002:1:21","nodeType":"YulLiteral","src":"5002:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"5005:1:21","nodeType":"YulLiteral","src":"5005:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4995:6:21","nodeType":"YulIdentifier","src":"4995:6:21"},"nativeSrc":"4995:12:21","nodeType":"YulFunctionCall","src":"4995:12:21"},"nativeSrc":"4995:12:21","nodeType":"YulExpressionStatement","src":"4995:12:21"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"4981:6:21","nodeType":"YulIdentifier","src":"4981:6:21"},{"name":"_1","nativeSrc":"4989:2:21","nodeType":"YulIdentifier","src":"4989:2:21"}],"functionName":{"name":"gt","nativeSrc":"4978:2:21","nodeType":"YulIdentifier","src":"4978:2:21"},"nativeSrc":"4978:14:21","nodeType":"YulFunctionCall","src":"4978:14:21"},"nativeSrc":"4975:34:21","nodeType":"YulIf","src":"4975:34:21"},{"nativeSrc":"5018:71:21","nodeType":"YulAssignment","src":"5018:71:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5061:9:21","nodeType":"YulIdentifier","src":"5061:9:21"},{"name":"offset","nativeSrc":"5072:6:21","nodeType":"YulIdentifier","src":"5072:6:21"}],"functionName":{"name":"add","nativeSrc":"5057:3:21","nodeType":"YulIdentifier","src":"5057:3:21"},"nativeSrc":"5057:22:21","nodeType":"YulFunctionCall","src":"5057:22:21"},{"name":"dataEnd","nativeSrc":"5081:7:21","nodeType":"YulIdentifier","src":"5081:7:21"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nativeSrc":"5028:28:21","nodeType":"YulIdentifier","src":"5028:28:21"},"nativeSrc":"5028:61:21","nodeType":"YulFunctionCall","src":"5028:61:21"},"variableNames":[{"name":"value2","nativeSrc":"5018:6:21","nodeType":"YulIdentifier","src":"5018:6:21"}]},{"nativeSrc":"5098:48:21","nodeType":"YulVariableDeclaration","src":"5098:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5131:9:21","nodeType":"YulIdentifier","src":"5131:9:21"},{"kind":"number","nativeSrc":"5142:2:21","nodeType":"YulLiteral","src":"5142:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5127:3:21","nodeType":"YulIdentifier","src":"5127:3:21"},"nativeSrc":"5127:18:21","nodeType":"YulFunctionCall","src":"5127:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"5114:12:21","nodeType":"YulIdentifier","src":"5114:12:21"},"nativeSrc":"5114:32:21","nodeType":"YulFunctionCall","src":"5114:32:21"},"variables":[{"name":"offset_1","nativeSrc":"5102:8:21","nodeType":"YulTypedName","src":"5102:8:21","type":""}]},{"body":{"nativeSrc":"5175:16:21","nodeType":"YulBlock","src":"5175:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5184:1:21","nodeType":"YulLiteral","src":"5184:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"5187:1:21","nodeType":"YulLiteral","src":"5187:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5177:6:21","nodeType":"YulIdentifier","src":"5177:6:21"},"nativeSrc":"5177:12:21","nodeType":"YulFunctionCall","src":"5177:12:21"},"nativeSrc":"5177:12:21","nodeType":"YulExpressionStatement","src":"5177:12:21"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"5161:8:21","nodeType":"YulIdentifier","src":"5161:8:21"},{"name":"_1","nativeSrc":"5171:2:21","nodeType":"YulIdentifier","src":"5171:2:21"}],"functionName":{"name":"gt","nativeSrc":"5158:2:21","nodeType":"YulIdentifier","src":"5158:2:21"},"nativeSrc":"5158:16:21","nodeType":"YulFunctionCall","src":"5158:16:21"},"nativeSrc":"5155:36:21","nodeType":"YulIf","src":"5155:36:21"},{"nativeSrc":"5200:73:21","nodeType":"YulAssignment","src":"5200:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5243:9:21","nodeType":"YulIdentifier","src":"5243:9:21"},{"name":"offset_1","nativeSrc":"5254:8:21","nodeType":"YulIdentifier","src":"5254:8:21"}],"functionName":{"name":"add","nativeSrc":"5239:3:21","nodeType":"YulIdentifier","src":"5239:3:21"},"nativeSrc":"5239:24:21","nodeType":"YulFunctionCall","src":"5239:24:21"},{"name":"dataEnd","nativeSrc":"5265:7:21","nodeType":"YulIdentifier","src":"5265:7:21"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nativeSrc":"5210:28:21","nodeType":"YulIdentifier","src":"5210:28:21"},"nativeSrc":"5210:63:21","nodeType":"YulFunctionCall","src":"5210:63:21"},"variableNames":[{"name":"value3","nativeSrc":"5200:6:21","nodeType":"YulIdentifier","src":"5200:6:21"}]},{"nativeSrc":"5282:49:21","nodeType":"YulVariableDeclaration","src":"5282:49:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5315:9:21","nodeType":"YulIdentifier","src":"5315:9:21"},{"kind":"number","nativeSrc":"5326:3:21","nodeType":"YulLiteral","src":"5326:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"5311:3:21","nodeType":"YulIdentifier","src":"5311:3:21"},"nativeSrc":"5311:19:21","nodeType":"YulFunctionCall","src":"5311:19:21"}],"functionName":{"name":"calldataload","nativeSrc":"5298:12:21","nodeType":"YulIdentifier","src":"5298:12:21"},"nativeSrc":"5298:33:21","nodeType":"YulFunctionCall","src":"5298:33:21"},"variables":[{"name":"offset_2","nativeSrc":"5286:8:21","nodeType":"YulTypedName","src":"5286:8:21","type":""}]},{"body":{"nativeSrc":"5360:16:21","nodeType":"YulBlock","src":"5360:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5369:1:21","nodeType":"YulLiteral","src":"5369:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"5372:1:21","nodeType":"YulLiteral","src":"5372:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5362:6:21","nodeType":"YulIdentifier","src":"5362:6:21"},"nativeSrc":"5362:12:21","nodeType":"YulFunctionCall","src":"5362:12:21"},"nativeSrc":"5362:12:21","nodeType":"YulExpressionStatement","src":"5362:12:21"}]},"condition":{"arguments":[{"name":"offset_2","nativeSrc":"5346:8:21","nodeType":"YulIdentifier","src":"5346:8:21"},{"name":"_1","nativeSrc":"5356:2:21","nodeType":"YulIdentifier","src":"5356:2:21"}],"functionName":{"name":"gt","nativeSrc":"5343:2:21","nodeType":"YulIdentifier","src":"5343:2:21"},"nativeSrc":"5343:16:21","nodeType":"YulFunctionCall","src":"5343:16:21"},"nativeSrc":"5340:36:21","nodeType":"YulIf","src":"5340:36:21"},{"nativeSrc":"5385:61:21","nodeType":"YulAssignment","src":"5385:61:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5416:9:21","nodeType":"YulIdentifier","src":"5416:9:21"},{"name":"offset_2","nativeSrc":"5427:8:21","nodeType":"YulIdentifier","src":"5427:8:21"}],"functionName":{"name":"add","nativeSrc":"5412:3:21","nodeType":"YulIdentifier","src":"5412:3:21"},"nativeSrc":"5412:24:21","nodeType":"YulFunctionCall","src":"5412:24:21"},{"name":"dataEnd","nativeSrc":"5438:7:21","nodeType":"YulIdentifier","src":"5438:7:21"}],"functionName":{"name":"abi_decode_bytes","nativeSrc":"5395:16:21","nodeType":"YulIdentifier","src":"5395:16:21"},"nativeSrc":"5395:51:21","nodeType":"YulFunctionCall","src":"5395:51:21"},"variableNames":[{"name":"value4","nativeSrc":"5385:6:21","nodeType":"YulIdentifier","src":"5385:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nativeSrc":"4509:943:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4640:9:21","nodeType":"YulTypedName","src":"4640:9:21","type":""},{"name":"dataEnd","nativeSrc":"4651:7:21","nodeType":"YulTypedName","src":"4651:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4663:6:21","nodeType":"YulTypedName","src":"4663:6:21","type":""},{"name":"value1","nativeSrc":"4671:6:21","nodeType":"YulTypedName","src":"4671:6:21","type":""},{"name":"value2","nativeSrc":"4679:6:21","nodeType":"YulTypedName","src":"4679:6:21","type":""},{"name":"value3","nativeSrc":"4687:6:21","nodeType":"YulTypedName","src":"4687:6:21","type":""},{"name":"value4","nativeSrc":"4695:6:21","nodeType":"YulTypedName","src":"4695:6:21","type":""}],"src":"4509:943:21"},{"body":{"nativeSrc":"5594:1009:21","nodeType":"YulBlock","src":"5594:1009:21","statements":[{"body":{"nativeSrc":"5640:16:21","nodeType":"YulBlock","src":"5640:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5649:1:21","nodeType":"YulLiteral","src":"5649:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"5652:1:21","nodeType":"YulLiteral","src":"5652:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5642:6:21","nodeType":"YulIdentifier","src":"5642:6:21"},"nativeSrc":"5642:12:21","nodeType":"YulFunctionCall","src":"5642:12:21"},"nativeSrc":"5642:12:21","nodeType":"YulExpressionStatement","src":"5642:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5615:7:21","nodeType":"YulIdentifier","src":"5615:7:21"},{"name":"headStart","nativeSrc":"5624:9:21","nodeType":"YulIdentifier","src":"5624:9:21"}],"functionName":{"name":"sub","nativeSrc":"5611:3:21","nodeType":"YulIdentifier","src":"5611:3:21"},"nativeSrc":"5611:23:21","nodeType":"YulFunctionCall","src":"5611:23:21"},{"kind":"number","nativeSrc":"5636:2:21","nodeType":"YulLiteral","src":"5636:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"5607:3:21","nodeType":"YulIdentifier","src":"5607:3:21"},"nativeSrc":"5607:32:21","nodeType":"YulFunctionCall","src":"5607:32:21"},"nativeSrc":"5604:52:21","nodeType":"YulIf","src":"5604:52:21"},{"nativeSrc":"5665:37:21","nodeType":"YulVariableDeclaration","src":"5665:37:21","value":{"arguments":[{"name":"headStart","nativeSrc":"5692:9:21","nodeType":"YulIdentifier","src":"5692:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"5679:12:21","nodeType":"YulIdentifier","src":"5679:12:21"},"nativeSrc":"5679:23:21","nodeType":"YulFunctionCall","src":"5679:23:21"},"variables":[{"name":"offset","nativeSrc":"5669:6:21","nodeType":"YulTypedName","src":"5669:6:21","type":""}]},{"nativeSrc":"5711:28:21","nodeType":"YulVariableDeclaration","src":"5711:28:21","value":{"kind":"number","nativeSrc":"5721:18:21","nodeType":"YulLiteral","src":"5721:18:21","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"5715:2:21","nodeType":"YulTypedName","src":"5715:2:21","type":""}]},{"body":{"nativeSrc":"5766:16:21","nodeType":"YulBlock","src":"5766:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5775:1:21","nodeType":"YulLiteral","src":"5775:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"5778:1:21","nodeType":"YulLiteral","src":"5778:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5768:6:21","nodeType":"YulIdentifier","src":"5768:6:21"},"nativeSrc":"5768:12:21","nodeType":"YulFunctionCall","src":"5768:12:21"},"nativeSrc":"5768:12:21","nodeType":"YulExpressionStatement","src":"5768:12:21"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"5754:6:21","nodeType":"YulIdentifier","src":"5754:6:21"},{"name":"_1","nativeSrc":"5762:2:21","nodeType":"YulIdentifier","src":"5762:2:21"}],"functionName":{"name":"gt","nativeSrc":"5751:2:21","nodeType":"YulIdentifier","src":"5751:2:21"},"nativeSrc":"5751:14:21","nodeType":"YulFunctionCall","src":"5751:14:21"},"nativeSrc":"5748:34:21","nodeType":"YulIf","src":"5748:34:21"},{"nativeSrc":"5791:32:21","nodeType":"YulVariableDeclaration","src":"5791:32:21","value":{"arguments":[{"name":"headStart","nativeSrc":"5805:9:21","nodeType":"YulIdentifier","src":"5805:9:21"},{"name":"offset","nativeSrc":"5816:6:21","nodeType":"YulIdentifier","src":"5816:6:21"}],"functionName":{"name":"add","nativeSrc":"5801:3:21","nodeType":"YulIdentifier","src":"5801:3:21"},"nativeSrc":"5801:22:21","nodeType":"YulFunctionCall","src":"5801:22:21"},"variables":[{"name":"_2","nativeSrc":"5795:2:21","nodeType":"YulTypedName","src":"5795:2:21","type":""}]},{"body":{"nativeSrc":"5871:16:21","nodeType":"YulBlock","src":"5871:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5880:1:21","nodeType":"YulLiteral","src":"5880:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"5883:1:21","nodeType":"YulLiteral","src":"5883:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5873:6:21","nodeType":"YulIdentifier","src":"5873:6:21"},"nativeSrc":"5873:12:21","nodeType":"YulFunctionCall","src":"5873:12:21"},"nativeSrc":"5873:12:21","nodeType":"YulExpressionStatement","src":"5873:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"5850:2:21","nodeType":"YulIdentifier","src":"5850:2:21"},{"kind":"number","nativeSrc":"5854:4:21","nodeType":"YulLiteral","src":"5854:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"5846:3:21","nodeType":"YulIdentifier","src":"5846:3:21"},"nativeSrc":"5846:13:21","nodeType":"YulFunctionCall","src":"5846:13:21"},{"name":"dataEnd","nativeSrc":"5861:7:21","nodeType":"YulIdentifier","src":"5861:7:21"}],"functionName":{"name":"slt","nativeSrc":"5842:3:21","nodeType":"YulIdentifier","src":"5842:3:21"},"nativeSrc":"5842:27:21","nodeType":"YulFunctionCall","src":"5842:27:21"}],"functionName":{"name":"iszero","nativeSrc":"5835:6:21","nodeType":"YulIdentifier","src":"5835:6:21"},"nativeSrc":"5835:35:21","nodeType":"YulFunctionCall","src":"5835:35:21"},"nativeSrc":"5832:55:21","nodeType":"YulIf","src":"5832:55:21"},{"nativeSrc":"5896:26:21","nodeType":"YulVariableDeclaration","src":"5896:26:21","value":{"arguments":[{"name":"_2","nativeSrc":"5919:2:21","nodeType":"YulIdentifier","src":"5919:2:21"}],"functionName":{"name":"calldataload","nativeSrc":"5906:12:21","nodeType":"YulIdentifier","src":"5906:12:21"},"nativeSrc":"5906:16:21","nodeType":"YulFunctionCall","src":"5906:16:21"},"variables":[{"name":"_3","nativeSrc":"5900:2:21","nodeType":"YulTypedName","src":"5900:2:21","type":""}]},{"nativeSrc":"5931:14:21","nodeType":"YulVariableDeclaration","src":"5931:14:21","value":{"kind":"number","nativeSrc":"5941:4:21","nodeType":"YulLiteral","src":"5941:4:21","type":"","value":"0x20"},"variables":[{"name":"_4","nativeSrc":"5935:2:21","nodeType":"YulTypedName","src":"5935:2:21","type":""}]},{"nativeSrc":"5954:71:21","nodeType":"YulVariableDeclaration","src":"5954:71:21","value":{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"6021:2:21","nodeType":"YulIdentifier","src":"6021:2:21"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nativeSrc":"5981:39:21","nodeType":"YulIdentifier","src":"5981:39:21"},"nativeSrc":"5981:43:21","nodeType":"YulFunctionCall","src":"5981:43:21"}],"functionName":{"name":"allocate_memory","nativeSrc":"5965:15:21","nodeType":"YulIdentifier","src":"5965:15:21"},"nativeSrc":"5965:60:21","nodeType":"YulFunctionCall","src":"5965:60:21"},"variables":[{"name":"dst","nativeSrc":"5958:3:21","nodeType":"YulTypedName","src":"5958:3:21","type":""}]},{"nativeSrc":"6034:16:21","nodeType":"YulVariableDeclaration","src":"6034:16:21","value":{"name":"dst","nativeSrc":"6047:3:21","nodeType":"YulIdentifier","src":"6047:3:21"},"variables":[{"name":"dst_1","nativeSrc":"6038:5:21","nodeType":"YulTypedName","src":"6038:5:21","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"6066:3:21","nodeType":"YulIdentifier","src":"6066:3:21"},{"name":"_3","nativeSrc":"6071:2:21","nodeType":"YulIdentifier","src":"6071:2:21"}],"functionName":{"name":"mstore","nativeSrc":"6059:6:21","nodeType":"YulIdentifier","src":"6059:6:21"},"nativeSrc":"6059:15:21","nodeType":"YulFunctionCall","src":"6059:15:21"},"nativeSrc":"6059:15:21","nodeType":"YulExpressionStatement","src":"6059:15:21"},{"nativeSrc":"6083:19:21","nodeType":"YulAssignment","src":"6083:19:21","value":{"arguments":[{"name":"dst","nativeSrc":"6094:3:21","nodeType":"YulIdentifier","src":"6094:3:21"},{"name":"_4","nativeSrc":"6099:2:21","nodeType":"YulIdentifier","src":"6099:2:21"}],"functionName":{"name":"add","nativeSrc":"6090:3:21","nodeType":"YulIdentifier","src":"6090:3:21"},"nativeSrc":"6090:12:21","nodeType":"YulFunctionCall","src":"6090:12:21"},"variableNames":[{"name":"dst","nativeSrc":"6083:3:21","nodeType":"YulIdentifier","src":"6083:3:21"}]},{"nativeSrc":"6111:42:21","nodeType":"YulVariableDeclaration","src":"6111:42:21","value":{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"6133:2:21","nodeType":"YulIdentifier","src":"6133:2:21"},{"arguments":[{"kind":"number","nativeSrc":"6141:1:21","nodeType":"YulLiteral","src":"6141:1:21","type":"","value":"5"},{"name":"_3","nativeSrc":"6144:2:21","nodeType":"YulIdentifier","src":"6144:2:21"}],"functionName":{"name":"shl","nativeSrc":"6137:3:21","nodeType":"YulIdentifier","src":"6137:3:21"},"nativeSrc":"6137:10:21","nodeType":"YulFunctionCall","src":"6137:10:21"}],"functionName":{"name":"add","nativeSrc":"6129:3:21","nodeType":"YulIdentifier","src":"6129:3:21"},"nativeSrc":"6129:19:21","nodeType":"YulFunctionCall","src":"6129:19:21"},{"name":"_4","nativeSrc":"6150:2:21","nodeType":"YulIdentifier","src":"6150:2:21"}],"functionName":{"name":"add","nativeSrc":"6125:3:21","nodeType":"YulIdentifier","src":"6125:3:21"},"nativeSrc":"6125:28:21","nodeType":"YulFunctionCall","src":"6125:28:21"},"variables":[{"name":"srcEnd","nativeSrc":"6115:6:21","nodeType":"YulTypedName","src":"6115:6:21","type":""}]},{"body":{"nativeSrc":"6185:16:21","nodeType":"YulBlock","src":"6185:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6194:1:21","nodeType":"YulLiteral","src":"6194:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"6197:1:21","nodeType":"YulLiteral","src":"6197:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6187:6:21","nodeType":"YulIdentifier","src":"6187:6:21"},"nativeSrc":"6187:12:21","nodeType":"YulFunctionCall","src":"6187:12:21"},"nativeSrc":"6187:12:21","nodeType":"YulExpressionStatement","src":"6187:12:21"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"6168:6:21","nodeType":"YulIdentifier","src":"6168:6:21"},{"name":"dataEnd","nativeSrc":"6176:7:21","nodeType":"YulIdentifier","src":"6176:7:21"}],"functionName":{"name":"gt","nativeSrc":"6165:2:21","nodeType":"YulIdentifier","src":"6165:2:21"},"nativeSrc":"6165:19:21","nodeType":"YulFunctionCall","src":"6165:19:21"},"nativeSrc":"6162:39:21","nodeType":"YulIf","src":"6162:39:21"},{"nativeSrc":"6210:22:21","nodeType":"YulVariableDeclaration","src":"6210:22:21","value":{"arguments":[{"name":"_2","nativeSrc":"6225:2:21","nodeType":"YulIdentifier","src":"6225:2:21"},{"name":"_4","nativeSrc":"6229:2:21","nodeType":"YulIdentifier","src":"6229:2:21"}],"functionName":{"name":"add","nativeSrc":"6221:3:21","nodeType":"YulIdentifier","src":"6221:3:21"},"nativeSrc":"6221:11:21","nodeType":"YulFunctionCall","src":"6221:11:21"},"variables":[{"name":"src","nativeSrc":"6214:3:21","nodeType":"YulTypedName","src":"6214:3:21","type":""}]},{"body":{"nativeSrc":"6297:92:21","nodeType":"YulBlock","src":"6297:92:21","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"6318:3:21","nodeType":"YulIdentifier","src":"6318:3:21"},{"arguments":[{"name":"src","nativeSrc":"6342:3:21","nodeType":"YulIdentifier","src":"6342:3:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"6323:18:21","nodeType":"YulIdentifier","src":"6323:18:21"},"nativeSrc":"6323:23:21","nodeType":"YulFunctionCall","src":"6323:23:21"}],"functionName":{"name":"mstore","nativeSrc":"6311:6:21","nodeType":"YulIdentifier","src":"6311:6:21"},"nativeSrc":"6311:36:21","nodeType":"YulFunctionCall","src":"6311:36:21"},"nativeSrc":"6311:36:21","nodeType":"YulExpressionStatement","src":"6311:36:21"},{"nativeSrc":"6360:19:21","nodeType":"YulAssignment","src":"6360:19:21","value":{"arguments":[{"name":"dst","nativeSrc":"6371:3:21","nodeType":"YulIdentifier","src":"6371:3:21"},{"name":"_4","nativeSrc":"6376:2:21","nodeType":"YulIdentifier","src":"6376:2:21"}],"functionName":{"name":"add","nativeSrc":"6367:3:21","nodeType":"YulIdentifier","src":"6367:3:21"},"nativeSrc":"6367:12:21","nodeType":"YulFunctionCall","src":"6367:12:21"},"variableNames":[{"name":"dst","nativeSrc":"6360:3:21","nodeType":"YulIdentifier","src":"6360:3:21"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"6252:3:21","nodeType":"YulIdentifier","src":"6252:3:21"},{"name":"srcEnd","nativeSrc":"6257:6:21","nodeType":"YulIdentifier","src":"6257:6:21"}],"functionName":{"name":"lt","nativeSrc":"6249:2:21","nodeType":"YulIdentifier","src":"6249:2:21"},"nativeSrc":"6249:15:21","nodeType":"YulFunctionCall","src":"6249:15:21"},"nativeSrc":"6241:148:21","nodeType":"YulForLoop","post":{"nativeSrc":"6265:23:21","nodeType":"YulBlock","src":"6265:23:21","statements":[{"nativeSrc":"6267:19:21","nodeType":"YulAssignment","src":"6267:19:21","value":{"arguments":[{"name":"src","nativeSrc":"6278:3:21","nodeType":"YulIdentifier","src":"6278:3:21"},{"name":"_4","nativeSrc":"6283:2:21","nodeType":"YulIdentifier","src":"6283:2:21"}],"functionName":{"name":"add","nativeSrc":"6274:3:21","nodeType":"YulIdentifier","src":"6274:3:21"},"nativeSrc":"6274:12:21","nodeType":"YulFunctionCall","src":"6274:12:21"},"variableNames":[{"name":"src","nativeSrc":"6267:3:21","nodeType":"YulIdentifier","src":"6267:3:21"}]}]},"pre":{"nativeSrc":"6245:3:21","nodeType":"YulBlock","src":"6245:3:21","statements":[]},"src":"6241:148:21"},{"nativeSrc":"6398:15:21","nodeType":"YulAssignment","src":"6398:15:21","value":{"name":"dst_1","nativeSrc":"6408:5:21","nodeType":"YulIdentifier","src":"6408:5:21"},"variableNames":[{"name":"value0","nativeSrc":"6398:6:21","nodeType":"YulIdentifier","src":"6398:6:21"}]},{"nativeSrc":"6422:48:21","nodeType":"YulVariableDeclaration","src":"6422:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6455:9:21","nodeType":"YulIdentifier","src":"6455:9:21"},{"name":"_4","nativeSrc":"6466:2:21","nodeType":"YulIdentifier","src":"6466:2:21"}],"functionName":{"name":"add","nativeSrc":"6451:3:21","nodeType":"YulIdentifier","src":"6451:3:21"},"nativeSrc":"6451:18:21","nodeType":"YulFunctionCall","src":"6451:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"6438:12:21","nodeType":"YulIdentifier","src":"6438:12:21"},"nativeSrc":"6438:32:21","nodeType":"YulFunctionCall","src":"6438:32:21"},"variables":[{"name":"offset_1","nativeSrc":"6426:8:21","nodeType":"YulTypedName","src":"6426:8:21","type":""}]},{"body":{"nativeSrc":"6499:16:21","nodeType":"YulBlock","src":"6499:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6508:1:21","nodeType":"YulLiteral","src":"6508:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"6511:1:21","nodeType":"YulLiteral","src":"6511:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6501:6:21","nodeType":"YulIdentifier","src":"6501:6:21"},"nativeSrc":"6501:12:21","nodeType":"YulFunctionCall","src":"6501:12:21"},"nativeSrc":"6501:12:21","nodeType":"YulExpressionStatement","src":"6501:12:21"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"6485:8:21","nodeType":"YulIdentifier","src":"6485:8:21"},{"name":"_1","nativeSrc":"6495:2:21","nodeType":"YulIdentifier","src":"6495:2:21"}],"functionName":{"name":"gt","nativeSrc":"6482:2:21","nodeType":"YulIdentifier","src":"6482:2:21"},"nativeSrc":"6482:16:21","nodeType":"YulFunctionCall","src":"6482:16:21"},"nativeSrc":"6479:36:21","nodeType":"YulIf","src":"6479:36:21"},{"nativeSrc":"6524:73:21","nodeType":"YulAssignment","src":"6524:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6567:9:21","nodeType":"YulIdentifier","src":"6567:9:21"},{"name":"offset_1","nativeSrc":"6578:8:21","nodeType":"YulIdentifier","src":"6578:8:21"}],"functionName":{"name":"add","nativeSrc":"6563:3:21","nodeType":"YulIdentifier","src":"6563:3:21"},"nativeSrc":"6563:24:21","nodeType":"YulFunctionCall","src":"6563:24:21"},{"name":"dataEnd","nativeSrc":"6589:7:21","nodeType":"YulIdentifier","src":"6589:7:21"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nativeSrc":"6534:28:21","nodeType":"YulIdentifier","src":"6534:28:21"},"nativeSrc":"6534:63:21","nodeType":"YulFunctionCall","src":"6534:63:21"},"variableNames":[{"name":"value1","nativeSrc":"6524:6:21","nodeType":"YulIdentifier","src":"6524:6:21"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"5457:1146:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5552:9:21","nodeType":"YulTypedName","src":"5552:9:21","type":""},{"name":"dataEnd","nativeSrc":"5563:7:21","nodeType":"YulTypedName","src":"5563:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5575:6:21","nodeType":"YulTypedName","src":"5575:6:21","type":""},{"name":"value1","nativeSrc":"5583:6:21","nodeType":"YulTypedName","src":"5583:6:21","type":""}],"src":"5457:1146:21"},{"body":{"nativeSrc":"6669:378:21","nodeType":"YulBlock","src":"6669:378:21","statements":[{"nativeSrc":"6679:26:21","nodeType":"YulVariableDeclaration","src":"6679:26:21","value":{"arguments":[{"name":"value","nativeSrc":"6699:5:21","nodeType":"YulIdentifier","src":"6699:5:21"}],"functionName":{"name":"mload","nativeSrc":"6693:5:21","nodeType":"YulIdentifier","src":"6693:5:21"},"nativeSrc":"6693:12:21","nodeType":"YulFunctionCall","src":"6693:12:21"},"variables":[{"name":"length","nativeSrc":"6683:6:21","nodeType":"YulTypedName","src":"6683:6:21","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"6721:3:21","nodeType":"YulIdentifier","src":"6721:3:21"},{"name":"length","nativeSrc":"6726:6:21","nodeType":"YulIdentifier","src":"6726:6:21"}],"functionName":{"name":"mstore","nativeSrc":"6714:6:21","nodeType":"YulIdentifier","src":"6714:6:21"},"nativeSrc":"6714:19:21","nodeType":"YulFunctionCall","src":"6714:19:21"},"nativeSrc":"6714:19:21","nodeType":"YulExpressionStatement","src":"6714:19:21"},{"nativeSrc":"6742:14:21","nodeType":"YulVariableDeclaration","src":"6742:14:21","value":{"kind":"number","nativeSrc":"6752:4:21","nodeType":"YulLiteral","src":"6752:4:21","type":"","value":"0x20"},"variables":[{"name":"_1","nativeSrc":"6746:2:21","nodeType":"YulTypedName","src":"6746:2:21","type":""}]},{"nativeSrc":"6765:21:21","nodeType":"YulAssignment","src":"6765:21:21","value":{"arguments":[{"name":"pos","nativeSrc":"6776:3:21","nodeType":"YulIdentifier","src":"6776:3:21"},{"kind":"number","nativeSrc":"6781:4:21","nodeType":"YulLiteral","src":"6781:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6772:3:21","nodeType":"YulIdentifier","src":"6772:3:21"},"nativeSrc":"6772:14:21","nodeType":"YulFunctionCall","src":"6772:14:21"},"variableNames":[{"name":"pos","nativeSrc":"6765:3:21","nodeType":"YulIdentifier","src":"6765:3:21"}]},{"nativeSrc":"6795:30:21","nodeType":"YulVariableDeclaration","src":"6795:30:21","value":{"arguments":[{"name":"value","nativeSrc":"6813:5:21","nodeType":"YulIdentifier","src":"6813:5:21"},{"kind":"number","nativeSrc":"6820:4:21","nodeType":"YulLiteral","src":"6820:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6809:3:21","nodeType":"YulIdentifier","src":"6809:3:21"},"nativeSrc":"6809:16:21","nodeType":"YulFunctionCall","src":"6809:16:21"},"variables":[{"name":"srcPtr","nativeSrc":"6799:6:21","nodeType":"YulTypedName","src":"6799:6:21","type":""}]},{"nativeSrc":"6834:10:21","nodeType":"YulVariableDeclaration","src":"6834:10:21","value":{"kind":"number","nativeSrc":"6843:1:21","nodeType":"YulLiteral","src":"6843:1:21","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"6838:1:21","nodeType":"YulTypedName","src":"6838:1:21","type":""}]},{"body":{"nativeSrc":"6902:120:21","nodeType":"YulBlock","src":"6902:120:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6923:3:21","nodeType":"YulIdentifier","src":"6923:3:21"},{"arguments":[{"name":"srcPtr","nativeSrc":"6934:6:21","nodeType":"YulIdentifier","src":"6934:6:21"}],"functionName":{"name":"mload","nativeSrc":"6928:5:21","nodeType":"YulIdentifier","src":"6928:5:21"},"nativeSrc":"6928:13:21","nodeType":"YulFunctionCall","src":"6928:13:21"}],"functionName":{"name":"mstore","nativeSrc":"6916:6:21","nodeType":"YulIdentifier","src":"6916:6:21"},"nativeSrc":"6916:26:21","nodeType":"YulFunctionCall","src":"6916:26:21"},"nativeSrc":"6916:26:21","nodeType":"YulExpressionStatement","src":"6916:26:21"},{"nativeSrc":"6955:19:21","nodeType":"YulAssignment","src":"6955:19:21","value":{"arguments":[{"name":"pos","nativeSrc":"6966:3:21","nodeType":"YulIdentifier","src":"6966:3:21"},{"name":"_1","nativeSrc":"6971:2:21","nodeType":"YulIdentifier","src":"6971:2:21"}],"functionName":{"name":"add","nativeSrc":"6962:3:21","nodeType":"YulIdentifier","src":"6962:3:21"},"nativeSrc":"6962:12:21","nodeType":"YulFunctionCall","src":"6962:12:21"},"variableNames":[{"name":"pos","nativeSrc":"6955:3:21","nodeType":"YulIdentifier","src":"6955:3:21"}]},{"nativeSrc":"6987:25:21","nodeType":"YulAssignment","src":"6987:25:21","value":{"arguments":[{"name":"srcPtr","nativeSrc":"7001:6:21","nodeType":"YulIdentifier","src":"7001:6:21"},{"name":"_1","nativeSrc":"7009:2:21","nodeType":"YulIdentifier","src":"7009:2:21"}],"functionName":{"name":"add","nativeSrc":"6997:3:21","nodeType":"YulIdentifier","src":"6997:3:21"},"nativeSrc":"6997:15:21","nodeType":"YulFunctionCall","src":"6997:15:21"},"variableNames":[{"name":"srcPtr","nativeSrc":"6987:6:21","nodeType":"YulIdentifier","src":"6987:6:21"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"6864:1:21","nodeType":"YulIdentifier","src":"6864:1:21"},{"name":"length","nativeSrc":"6867:6:21","nodeType":"YulIdentifier","src":"6867:6:21"}],"functionName":{"name":"lt","nativeSrc":"6861:2:21","nodeType":"YulIdentifier","src":"6861:2:21"},"nativeSrc":"6861:13:21","nodeType":"YulFunctionCall","src":"6861:13:21"},"nativeSrc":"6853:169:21","nodeType":"YulForLoop","post":{"nativeSrc":"6875:18:21","nodeType":"YulBlock","src":"6875:18:21","statements":[{"nativeSrc":"6877:14:21","nodeType":"YulAssignment","src":"6877:14:21","value":{"arguments":[{"name":"i","nativeSrc":"6886:1:21","nodeType":"YulIdentifier","src":"6886:1:21"},{"kind":"number","nativeSrc":"6889:1:21","nodeType":"YulLiteral","src":"6889:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6882:3:21","nodeType":"YulIdentifier","src":"6882:3:21"},"nativeSrc":"6882:9:21","nodeType":"YulFunctionCall","src":"6882:9:21"},"variableNames":[{"name":"i","nativeSrc":"6877:1:21","nodeType":"YulIdentifier","src":"6877:1:21"}]}]},"pre":{"nativeSrc":"6857:3:21","nodeType":"YulBlock","src":"6857:3:21","statements":[]},"src":"6853:169:21"},{"nativeSrc":"7031:10:21","nodeType":"YulAssignment","src":"7031:10:21","value":{"name":"pos","nativeSrc":"7038:3:21","nodeType":"YulIdentifier","src":"7038:3:21"},"variableNames":[{"name":"end","nativeSrc":"7031:3:21","nodeType":"YulIdentifier","src":"7031:3:21"}]}]},"name":"abi_encode_array_uint256_dyn","nativeSrc":"6608:439:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6646:5:21","nodeType":"YulTypedName","src":"6646:5:21","type":""},{"name":"pos","nativeSrc":"6653:3:21","nodeType":"YulTypedName","src":"6653:3:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"6661:3:21","nodeType":"YulTypedName","src":"6661:3:21","type":""}],"src":"6608:439:21"},{"body":{"nativeSrc":"7203:110:21","nodeType":"YulBlock","src":"7203:110:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7220:9:21","nodeType":"YulIdentifier","src":"7220:9:21"},{"kind":"number","nativeSrc":"7231:2:21","nodeType":"YulLiteral","src":"7231:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7213:6:21","nodeType":"YulIdentifier","src":"7213:6:21"},"nativeSrc":"7213:21:21","nodeType":"YulFunctionCall","src":"7213:21:21"},"nativeSrc":"7213:21:21","nodeType":"YulExpressionStatement","src":"7213:21:21"},{"nativeSrc":"7243:64:21","nodeType":"YulAssignment","src":"7243:64:21","value":{"arguments":[{"name":"value0","nativeSrc":"7280:6:21","nodeType":"YulIdentifier","src":"7280:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"7292:9:21","nodeType":"YulIdentifier","src":"7292:9:21"},{"kind":"number","nativeSrc":"7303:2:21","nodeType":"YulLiteral","src":"7303:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7288:3:21","nodeType":"YulIdentifier","src":"7288:3:21"},"nativeSrc":"7288:18:21","nodeType":"YulFunctionCall","src":"7288:18:21"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nativeSrc":"7251:28:21","nodeType":"YulIdentifier","src":"7251:28:21"},"nativeSrc":"7251:56:21","nodeType":"YulFunctionCall","src":"7251:56:21"},"variableNames":[{"name":"tail","nativeSrc":"7243:4:21","nodeType":"YulIdentifier","src":"7243:4:21"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"7052:261:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7172:9:21","nodeType":"YulTypedName","src":"7172:9:21","type":""},{"name":"value0","nativeSrc":"7183:6:21","nodeType":"YulTypedName","src":"7183:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7194:4:21","nodeType":"YulTypedName","src":"7194:4:21","type":""}],"src":"7052:261:21"},{"body":{"nativeSrc":"7398:241:21","nodeType":"YulBlock","src":"7398:241:21","statements":[{"body":{"nativeSrc":"7444:16:21","nodeType":"YulBlock","src":"7444:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7453:1:21","nodeType":"YulLiteral","src":"7453:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"7456:1:21","nodeType":"YulLiteral","src":"7456:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7446:6:21","nodeType":"YulIdentifier","src":"7446:6:21"},"nativeSrc":"7446:12:21","nodeType":"YulFunctionCall","src":"7446:12:21"},"nativeSrc":"7446:12:21","nodeType":"YulExpressionStatement","src":"7446:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7419:7:21","nodeType":"YulIdentifier","src":"7419:7:21"},{"name":"headStart","nativeSrc":"7428:9:21","nodeType":"YulIdentifier","src":"7428:9:21"}],"functionName":{"name":"sub","nativeSrc":"7415:3:21","nodeType":"YulIdentifier","src":"7415:3:21"},"nativeSrc":"7415:23:21","nodeType":"YulFunctionCall","src":"7415:23:21"},{"kind":"number","nativeSrc":"7440:2:21","nodeType":"YulLiteral","src":"7440:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"7411:3:21","nodeType":"YulIdentifier","src":"7411:3:21"},"nativeSrc":"7411:32:21","nodeType":"YulFunctionCall","src":"7411:32:21"},"nativeSrc":"7408:52:21","nodeType":"YulIf","src":"7408:52:21"},{"nativeSrc":"7469:37:21","nodeType":"YulVariableDeclaration","src":"7469:37:21","value":{"arguments":[{"name":"headStart","nativeSrc":"7496:9:21","nodeType":"YulIdentifier","src":"7496:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"7483:12:21","nodeType":"YulIdentifier","src":"7483:12:21"},"nativeSrc":"7483:23:21","nodeType":"YulFunctionCall","src":"7483:23:21"},"variables":[{"name":"offset","nativeSrc":"7473:6:21","nodeType":"YulTypedName","src":"7473:6:21","type":""}]},{"body":{"nativeSrc":"7549:16:21","nodeType":"YulBlock","src":"7549:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7558:1:21","nodeType":"YulLiteral","src":"7558:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"7561:1:21","nodeType":"YulLiteral","src":"7561:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7551:6:21","nodeType":"YulIdentifier","src":"7551:6:21"},"nativeSrc":"7551:12:21","nodeType":"YulFunctionCall","src":"7551:12:21"},"nativeSrc":"7551:12:21","nodeType":"YulExpressionStatement","src":"7551:12:21"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"7521:6:21","nodeType":"YulIdentifier","src":"7521:6:21"},{"kind":"number","nativeSrc":"7529:18:21","nodeType":"YulLiteral","src":"7529:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7518:2:21","nodeType":"YulIdentifier","src":"7518:2:21"},"nativeSrc":"7518:30:21","nodeType":"YulFunctionCall","src":"7518:30:21"},"nativeSrc":"7515:50:21","nodeType":"YulIf","src":"7515:50:21"},{"nativeSrc":"7574:59:21","nodeType":"YulAssignment","src":"7574:59:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7605:9:21","nodeType":"YulIdentifier","src":"7605:9:21"},{"name":"offset","nativeSrc":"7616:6:21","nodeType":"YulIdentifier","src":"7616:6:21"}],"functionName":{"name":"add","nativeSrc":"7601:3:21","nodeType":"YulIdentifier","src":"7601:3:21"},"nativeSrc":"7601:22:21","nodeType":"YulFunctionCall","src":"7601:22:21"},{"name":"dataEnd","nativeSrc":"7625:7:21","nodeType":"YulIdentifier","src":"7625:7:21"}],"functionName":{"name":"abi_decode_bytes","nativeSrc":"7584:16:21","nodeType":"YulIdentifier","src":"7584:16:21"},"nativeSrc":"7584:49:21","nodeType":"YulFunctionCall","src":"7584:49:21"},"variableNames":[{"name":"value0","nativeSrc":"7574:6:21","nodeType":"YulIdentifier","src":"7574:6:21"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nativeSrc":"7318:321:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7364:9:21","nodeType":"YulTypedName","src":"7364:9:21","type":""},{"name":"dataEnd","nativeSrc":"7375:7:21","nodeType":"YulTypedName","src":"7375:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7387:6:21","nodeType":"YulTypedName","src":"7387:6:21","type":""}],"src":"7318:321:21"},{"body":{"nativeSrc":"7768:485:21","nodeType":"YulBlock","src":"7768:485:21","statements":[{"body":{"nativeSrc":"7814:16:21","nodeType":"YulBlock","src":"7814:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7823:1:21","nodeType":"YulLiteral","src":"7823:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"7826:1:21","nodeType":"YulLiteral","src":"7826:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7816:6:21","nodeType":"YulIdentifier","src":"7816:6:21"},"nativeSrc":"7816:12:21","nodeType":"YulFunctionCall","src":"7816:12:21"},"nativeSrc":"7816:12:21","nodeType":"YulExpressionStatement","src":"7816:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7789:7:21","nodeType":"YulIdentifier","src":"7789:7:21"},{"name":"headStart","nativeSrc":"7798:9:21","nodeType":"YulIdentifier","src":"7798:9:21"}],"functionName":{"name":"sub","nativeSrc":"7785:3:21","nodeType":"YulIdentifier","src":"7785:3:21"},"nativeSrc":"7785:23:21","nodeType":"YulFunctionCall","src":"7785:23:21"},{"kind":"number","nativeSrc":"7810:2:21","nodeType":"YulLiteral","src":"7810:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"7781:3:21","nodeType":"YulIdentifier","src":"7781:3:21"},"nativeSrc":"7781:32:21","nodeType":"YulFunctionCall","src":"7781:32:21"},"nativeSrc":"7778:52:21","nodeType":"YulIf","src":"7778:52:21"},{"nativeSrc":"7839:37:21","nodeType":"YulVariableDeclaration","src":"7839:37:21","value":{"arguments":[{"name":"headStart","nativeSrc":"7866:9:21","nodeType":"YulIdentifier","src":"7866:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"7853:12:21","nodeType":"YulIdentifier","src":"7853:12:21"},"nativeSrc":"7853:23:21","nodeType":"YulFunctionCall","src":"7853:23:21"},"variables":[{"name":"offset","nativeSrc":"7843:6:21","nodeType":"YulTypedName","src":"7843:6:21","type":""}]},{"nativeSrc":"7885:28:21","nodeType":"YulVariableDeclaration","src":"7885:28:21","value":{"kind":"number","nativeSrc":"7895:18:21","nodeType":"YulLiteral","src":"7895:18:21","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"7889:2:21","nodeType":"YulTypedName","src":"7889:2:21","type":""}]},{"body":{"nativeSrc":"7940:16:21","nodeType":"YulBlock","src":"7940:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7949:1:21","nodeType":"YulLiteral","src":"7949:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"7952:1:21","nodeType":"YulLiteral","src":"7952:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7942:6:21","nodeType":"YulIdentifier","src":"7942:6:21"},"nativeSrc":"7942:12:21","nodeType":"YulFunctionCall","src":"7942:12:21"},"nativeSrc":"7942:12:21","nodeType":"YulExpressionStatement","src":"7942:12:21"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"7928:6:21","nodeType":"YulIdentifier","src":"7928:6:21"},{"name":"_1","nativeSrc":"7936:2:21","nodeType":"YulIdentifier","src":"7936:2:21"}],"functionName":{"name":"gt","nativeSrc":"7925:2:21","nodeType":"YulIdentifier","src":"7925:2:21"},"nativeSrc":"7925:14:21","nodeType":"YulFunctionCall","src":"7925:14:21"},"nativeSrc":"7922:34:21","nodeType":"YulIf","src":"7922:34:21"},{"nativeSrc":"7965:59:21","nodeType":"YulAssignment","src":"7965:59:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7996:9:21","nodeType":"YulIdentifier","src":"7996:9:21"},{"name":"offset","nativeSrc":"8007:6:21","nodeType":"YulIdentifier","src":"8007:6:21"}],"functionName":{"name":"add","nativeSrc":"7992:3:21","nodeType":"YulIdentifier","src":"7992:3:21"},"nativeSrc":"7992:22:21","nodeType":"YulFunctionCall","src":"7992:22:21"},{"name":"dataEnd","nativeSrc":"8016:7:21","nodeType":"YulIdentifier","src":"8016:7:21"}],"functionName":{"name":"abi_decode_bytes","nativeSrc":"7975:16:21","nodeType":"YulIdentifier","src":"7975:16:21"},"nativeSrc":"7975:49:21","nodeType":"YulFunctionCall","src":"7975:49:21"},"variableNames":[{"name":"value0","nativeSrc":"7965:6:21","nodeType":"YulIdentifier","src":"7965:6:21"}]},{"nativeSrc":"8033:48:21","nodeType":"YulVariableDeclaration","src":"8033:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8066:9:21","nodeType":"YulIdentifier","src":"8066:9:21"},{"kind":"number","nativeSrc":"8077:2:21","nodeType":"YulLiteral","src":"8077:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8062:3:21","nodeType":"YulIdentifier","src":"8062:3:21"},"nativeSrc":"8062:18:21","nodeType":"YulFunctionCall","src":"8062:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"8049:12:21","nodeType":"YulIdentifier","src":"8049:12:21"},"nativeSrc":"8049:32:21","nodeType":"YulFunctionCall","src":"8049:32:21"},"variables":[{"name":"offset_1","nativeSrc":"8037:8:21","nodeType":"YulTypedName","src":"8037:8:21","type":""}]},{"body":{"nativeSrc":"8110:16:21","nodeType":"YulBlock","src":"8110:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8119:1:21","nodeType":"YulLiteral","src":"8119:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"8122:1:21","nodeType":"YulLiteral","src":"8122:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8112:6:21","nodeType":"YulIdentifier","src":"8112:6:21"},"nativeSrc":"8112:12:21","nodeType":"YulFunctionCall","src":"8112:12:21"},"nativeSrc":"8112:12:21","nodeType":"YulExpressionStatement","src":"8112:12:21"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"8096:8:21","nodeType":"YulIdentifier","src":"8096:8:21"},{"name":"_1","nativeSrc":"8106:2:21","nodeType":"YulIdentifier","src":"8106:2:21"}],"functionName":{"name":"gt","nativeSrc":"8093:2:21","nodeType":"YulIdentifier","src":"8093:2:21"},"nativeSrc":"8093:16:21","nodeType":"YulFunctionCall","src":"8093:16:21"},"nativeSrc":"8090:36:21","nodeType":"YulIf","src":"8090:36:21"},{"nativeSrc":"8135:61:21","nodeType":"YulAssignment","src":"8135:61:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8166:9:21","nodeType":"YulIdentifier","src":"8166:9:21"},{"name":"offset_1","nativeSrc":"8177:8:21","nodeType":"YulIdentifier","src":"8177:8:21"}],"functionName":{"name":"add","nativeSrc":"8162:3:21","nodeType":"YulIdentifier","src":"8162:3:21"},"nativeSrc":"8162:24:21","nodeType":"YulFunctionCall","src":"8162:24:21"},{"name":"dataEnd","nativeSrc":"8188:7:21","nodeType":"YulIdentifier","src":"8188:7:21"}],"functionName":{"name":"abi_decode_bytes","nativeSrc":"8145:16:21","nodeType":"YulIdentifier","src":"8145:16:21"},"nativeSrc":"8145:51:21","nodeType":"YulFunctionCall","src":"8145:51:21"},"variableNames":[{"name":"value1","nativeSrc":"8135:6:21","nodeType":"YulIdentifier","src":"8135:6:21"}]},{"nativeSrc":"8205:42:21","nodeType":"YulAssignment","src":"8205:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8232:9:21","nodeType":"YulIdentifier","src":"8232:9:21"},{"kind":"number","nativeSrc":"8243:2:21","nodeType":"YulLiteral","src":"8243:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8228:3:21","nodeType":"YulIdentifier","src":"8228:3:21"},"nativeSrc":"8228:18:21","nodeType":"YulFunctionCall","src":"8228:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"8215:12:21","nodeType":"YulIdentifier","src":"8215:12:21"},"nativeSrc":"8215:32:21","nodeType":"YulFunctionCall","src":"8215:32:21"},"variableNames":[{"name":"value2","nativeSrc":"8205:6:21","nodeType":"YulIdentifier","src":"8205:6:21"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256","nativeSrc":"7644:609:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7718:9:21","nodeType":"YulTypedName","src":"7718:9:21","type":""},{"name":"dataEnd","nativeSrc":"7729:7:21","nodeType":"YulTypedName","src":"7729:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7741:6:21","nodeType":"YulTypedName","src":"7741:6:21","type":""},{"name":"value1","nativeSrc":"7749:6:21","nodeType":"YulTypedName","src":"7749:6:21","type":""},{"name":"value2","nativeSrc":"7757:6:21","nodeType":"YulTypedName","src":"7757:6:21","type":""}],"src":"7644:609:21"},{"body":{"nativeSrc":"8421:577:21","nodeType":"YulBlock","src":"8421:577:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8438:9:21","nodeType":"YulIdentifier","src":"8438:9:21"},{"kind":"number","nativeSrc":"8449:2:21","nodeType":"YulLiteral","src":"8449:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"8431:6:21","nodeType":"YulIdentifier","src":"8431:6:21"},"nativeSrc":"8431:21:21","nodeType":"YulFunctionCall","src":"8431:21:21"},"nativeSrc":"8431:21:21","nodeType":"YulExpressionStatement","src":"8431:21:21"},{"nativeSrc":"8461:33:21","nodeType":"YulVariableDeclaration","src":"8461:33:21","value":{"arguments":[{"name":"value0","nativeSrc":"8487:6:21","nodeType":"YulIdentifier","src":"8487:6:21"}],"functionName":{"name":"mload","nativeSrc":"8481:5:21","nodeType":"YulIdentifier","src":"8481:5:21"},"nativeSrc":"8481:13:21","nodeType":"YulFunctionCall","src":"8481:13:21"},"variables":[{"name":"memberValue0","nativeSrc":"8465:12:21","nodeType":"YulTypedName","src":"8465:12:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8514:9:21","nodeType":"YulIdentifier","src":"8514:9:21"},{"kind":"number","nativeSrc":"8525:2:21","nodeType":"YulLiteral","src":"8525:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8510:3:21","nodeType":"YulIdentifier","src":"8510:3:21"},"nativeSrc":"8510:18:21","nodeType":"YulFunctionCall","src":"8510:18:21"},{"kind":"number","nativeSrc":"8530:4:21","nodeType":"YulLiteral","src":"8530:4:21","type":"","value":"0x60"}],"functionName":{"name":"mstore","nativeSrc":"8503:6:21","nodeType":"YulIdentifier","src":"8503:6:21"},"nativeSrc":"8503:32:21","nodeType":"YulFunctionCall","src":"8503:32:21"},"nativeSrc":"8503:32:21","nodeType":"YulExpressionStatement","src":"8503:32:21"},{"nativeSrc":"8544:66:21","nodeType":"YulVariableDeclaration","src":"8544:66:21","value":{"arguments":[{"name":"memberValue0","nativeSrc":"8576:12:21","nodeType":"YulIdentifier","src":"8576:12:21"},{"arguments":[{"name":"headStart","nativeSrc":"8594:9:21","nodeType":"YulIdentifier","src":"8594:9:21"},{"kind":"number","nativeSrc":"8605:3:21","nodeType":"YulLiteral","src":"8605:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"8590:3:21","nodeType":"YulIdentifier","src":"8590:3:21"},"nativeSrc":"8590:19:21","nodeType":"YulFunctionCall","src":"8590:19:21"}],"functionName":{"name":"abi_encode_string","nativeSrc":"8558:17:21","nodeType":"YulIdentifier","src":"8558:17:21"},"nativeSrc":"8558:52:21","nodeType":"YulFunctionCall","src":"8558:52:21"},"variables":[{"name":"tail_1","nativeSrc":"8548:6:21","nodeType":"YulTypedName","src":"8548:6:21","type":""}]},{"nativeSrc":"8619:44:21","nodeType":"YulVariableDeclaration","src":"8619:44:21","value":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"8651:6:21","nodeType":"YulIdentifier","src":"8651:6:21"},{"kind":"number","nativeSrc":"8659:2:21","nodeType":"YulLiteral","src":"8659:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8647:3:21","nodeType":"YulIdentifier","src":"8647:3:21"},"nativeSrc":"8647:15:21","nodeType":"YulFunctionCall","src":"8647:15:21"}],"functionName":{"name":"mload","nativeSrc":"8641:5:21","nodeType":"YulIdentifier","src":"8641:5:21"},"nativeSrc":"8641:22:21","nodeType":"YulFunctionCall","src":"8641:22:21"},"variables":[{"name":"memberValue0_1","nativeSrc":"8623:14:21","nodeType":"YulTypedName","src":"8623:14:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8683:9:21","nodeType":"YulIdentifier","src":"8683:9:21"},{"kind":"number","nativeSrc":"8694:2:21","nodeType":"YulLiteral","src":"8694:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8679:3:21","nodeType":"YulIdentifier","src":"8679:3:21"},"nativeSrc":"8679:18:21","nodeType":"YulFunctionCall","src":"8679:18:21"},{"arguments":[{"arguments":[{"name":"tail_1","nativeSrc":"8707:6:21","nodeType":"YulIdentifier","src":"8707:6:21"},{"name":"headStart","nativeSrc":"8715:9:21","nodeType":"YulIdentifier","src":"8715:9:21"}],"functionName":{"name":"sub","nativeSrc":"8703:3:21","nodeType":"YulIdentifier","src":"8703:3:21"},"nativeSrc":"8703:22:21","nodeType":"YulFunctionCall","src":"8703:22:21"},{"kind":"number","nativeSrc":"8727:66:21","nodeType":"YulLiteral","src":"8727:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"add","nativeSrc":"8699:3:21","nodeType":"YulIdentifier","src":"8699:3:21"},"nativeSrc":"8699:95:21","nodeType":"YulFunctionCall","src":"8699:95:21"}],"functionName":{"name":"mstore","nativeSrc":"8672:6:21","nodeType":"YulIdentifier","src":"8672:6:21"},"nativeSrc":"8672:123:21","nodeType":"YulFunctionCall","src":"8672:123:21"},"nativeSrc":"8672:123:21","nodeType":"YulExpressionStatement","src":"8672:123:21"},{"nativeSrc":"8804:55:21","nodeType":"YulVariableDeclaration","src":"8804:55:21","value":{"arguments":[{"name":"memberValue0_1","nativeSrc":"8836:14:21","nodeType":"YulIdentifier","src":"8836:14:21"},{"name":"tail_1","nativeSrc":"8852:6:21","nodeType":"YulIdentifier","src":"8852:6:21"}],"functionName":{"name":"abi_encode_string","nativeSrc":"8818:17:21","nodeType":"YulIdentifier","src":"8818:17:21"},"nativeSrc":"8818:41:21","nodeType":"YulFunctionCall","src":"8818:41:21"},"variables":[{"name":"tail_2","nativeSrc":"8808:6:21","nodeType":"YulTypedName","src":"8808:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8879:9:21","nodeType":"YulIdentifier","src":"8879:9:21"},{"kind":"number","nativeSrc":"8890:4:21","nodeType":"YulLiteral","src":"8890:4:21","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"8875:3:21","nodeType":"YulIdentifier","src":"8875:3:21"},"nativeSrc":"8875:20:21","nodeType":"YulFunctionCall","src":"8875:20:21"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"8911:6:21","nodeType":"YulIdentifier","src":"8911:6:21"},{"kind":"number","nativeSrc":"8919:2:21","nodeType":"YulLiteral","src":"8919:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8907:3:21","nodeType":"YulIdentifier","src":"8907:3:21"},"nativeSrc":"8907:15:21","nodeType":"YulFunctionCall","src":"8907:15:21"}],"functionName":{"name":"mload","nativeSrc":"8901:5:21","nodeType":"YulIdentifier","src":"8901:5:21"},"nativeSrc":"8901:22:21","nodeType":"YulFunctionCall","src":"8901:22:21"},{"kind":"number","nativeSrc":"8925:42:21","nodeType":"YulLiteral","src":"8925:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"8897:3:21","nodeType":"YulIdentifier","src":"8897:3:21"},"nativeSrc":"8897:71:21","nodeType":"YulFunctionCall","src":"8897:71:21"}],"functionName":{"name":"mstore","nativeSrc":"8868:6:21","nodeType":"YulIdentifier","src":"8868:6:21"},"nativeSrc":"8868:101:21","nodeType":"YulFunctionCall","src":"8868:101:21"},"nativeSrc":"8868:101:21","nodeType":"YulExpressionStatement","src":"8868:101:21"},{"nativeSrc":"8978:14:21","nodeType":"YulAssignment","src":"8978:14:21","value":{"name":"tail_2","nativeSrc":"8986:6:21","nodeType":"YulIdentifier","src":"8986:6:21"},"variableNames":[{"name":"tail","nativeSrc":"8978:4:21","nodeType":"YulIdentifier","src":"8978:4:21"}]}]},"name":"abi_encode_tuple_t_struct$_TokenMetadata_$7644_memory_ptr__to_t_struct$_TokenMetadata_$7644_memory_ptr__fromStack_reversed","nativeSrc":"8258:740:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8390:9:21","nodeType":"YulTypedName","src":"8390:9:21","type":""},{"name":"value0","nativeSrc":"8401:6:21","nodeType":"YulTypedName","src":"8401:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8412:4:21","nodeType":"YulTypedName","src":"8412:4:21","type":""}],"src":"8258:740:21"},{"body":{"nativeSrc":"9200:306:21","nodeType":"YulBlock","src":"9200:306:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9217:9:21","nodeType":"YulIdentifier","src":"9217:9:21"},{"kind":"number","nativeSrc":"9228:2:21","nodeType":"YulLiteral","src":"9228:2:21","type":"","value":"96"}],"functionName":{"name":"mstore","nativeSrc":"9210:6:21","nodeType":"YulIdentifier","src":"9210:6:21"},"nativeSrc":"9210:21:21","nodeType":"YulFunctionCall","src":"9210:21:21"},"nativeSrc":"9210:21:21","nodeType":"YulExpressionStatement","src":"9210:21:21"},{"nativeSrc":"9240:59:21","nodeType":"YulVariableDeclaration","src":"9240:59:21","value":{"arguments":[{"name":"value0","nativeSrc":"9272:6:21","nodeType":"YulIdentifier","src":"9272:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"9284:9:21","nodeType":"YulIdentifier","src":"9284:9:21"},{"kind":"number","nativeSrc":"9295:2:21","nodeType":"YulLiteral","src":"9295:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9280:3:21","nodeType":"YulIdentifier","src":"9280:3:21"},"nativeSrc":"9280:18:21","nodeType":"YulFunctionCall","src":"9280:18:21"}],"functionName":{"name":"abi_encode_string","nativeSrc":"9254:17:21","nodeType":"YulIdentifier","src":"9254:17:21"},"nativeSrc":"9254:45:21","nodeType":"YulFunctionCall","src":"9254:45:21"},"variables":[{"name":"tail_1","nativeSrc":"9244:6:21","nodeType":"YulTypedName","src":"9244:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9319:9:21","nodeType":"YulIdentifier","src":"9319:9:21"},{"kind":"number","nativeSrc":"9330:2:21","nodeType":"YulLiteral","src":"9330:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9315:3:21","nodeType":"YulIdentifier","src":"9315:3:21"},"nativeSrc":"9315:18:21","nodeType":"YulFunctionCall","src":"9315:18:21"},{"arguments":[{"name":"tail_1","nativeSrc":"9339:6:21","nodeType":"YulIdentifier","src":"9339:6:21"},{"name":"headStart","nativeSrc":"9347:9:21","nodeType":"YulIdentifier","src":"9347:9:21"}],"functionName":{"name":"sub","nativeSrc":"9335:3:21","nodeType":"YulIdentifier","src":"9335:3:21"},"nativeSrc":"9335:22:21","nodeType":"YulFunctionCall","src":"9335:22:21"}],"functionName":{"name":"mstore","nativeSrc":"9308:6:21","nodeType":"YulIdentifier","src":"9308:6:21"},"nativeSrc":"9308:50:21","nodeType":"YulFunctionCall","src":"9308:50:21"},"nativeSrc":"9308:50:21","nodeType":"YulExpressionStatement","src":"9308:50:21"},{"nativeSrc":"9367:41:21","nodeType":"YulAssignment","src":"9367:41:21","value":{"arguments":[{"name":"value1","nativeSrc":"9393:6:21","nodeType":"YulIdentifier","src":"9393:6:21"},{"name":"tail_1","nativeSrc":"9401:6:21","nodeType":"YulIdentifier","src":"9401:6:21"}],"functionName":{"name":"abi_encode_string","nativeSrc":"9375:17:21","nodeType":"YulIdentifier","src":"9375:17:21"},"nativeSrc":"9375:33:21","nodeType":"YulFunctionCall","src":"9375:33:21"},"variableNames":[{"name":"tail","nativeSrc":"9367:4:21","nodeType":"YulIdentifier","src":"9367:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9428:9:21","nodeType":"YulIdentifier","src":"9428:9:21"},{"kind":"number","nativeSrc":"9439:2:21","nodeType":"YulLiteral","src":"9439:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9424:3:21","nodeType":"YulIdentifier","src":"9424:3:21"},"nativeSrc":"9424:18:21","nodeType":"YulFunctionCall","src":"9424:18:21"},{"arguments":[{"name":"value2","nativeSrc":"9448:6:21","nodeType":"YulIdentifier","src":"9448:6:21"},{"kind":"number","nativeSrc":"9456:42:21","nodeType":"YulLiteral","src":"9456:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"9444:3:21","nodeType":"YulIdentifier","src":"9444:3:21"},"nativeSrc":"9444:55:21","nodeType":"YulFunctionCall","src":"9444:55:21"}],"functionName":{"name":"mstore","nativeSrc":"9417:6:21","nodeType":"YulIdentifier","src":"9417:6:21"},"nativeSrc":"9417:83:21","nodeType":"YulFunctionCall","src":"9417:83:21"},"nativeSrc":"9417:83:21","nodeType":"YulExpressionStatement","src":"9417:83:21"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_address__fromStack_reversed","nativeSrc":"9003:503:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9153:9:21","nodeType":"YulTypedName","src":"9153:9:21","type":""},{"name":"value2","nativeSrc":"9164:6:21","nodeType":"YulTypedName","src":"9164:6:21","type":""},{"name":"value1","nativeSrc":"9172:6:21","nodeType":"YulTypedName","src":"9172:6:21","type":""},{"name":"value0","nativeSrc":"9180:6:21","nodeType":"YulTypedName","src":"9180:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9191:4:21","nodeType":"YulTypedName","src":"9191:4:21","type":""}],"src":"9003:503:21"},{"body":{"nativeSrc":"9581:116:21","nodeType":"YulBlock","src":"9581:116:21","statements":[{"body":{"nativeSrc":"9627:16:21","nodeType":"YulBlock","src":"9627:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9636:1:21","nodeType":"YulLiteral","src":"9636:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"9639:1:21","nodeType":"YulLiteral","src":"9639:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9629:6:21","nodeType":"YulIdentifier","src":"9629:6:21"},"nativeSrc":"9629:12:21","nodeType":"YulFunctionCall","src":"9629:12:21"},"nativeSrc":"9629:12:21","nodeType":"YulExpressionStatement","src":"9629:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9602:7:21","nodeType":"YulIdentifier","src":"9602:7:21"},{"name":"headStart","nativeSrc":"9611:9:21","nodeType":"YulIdentifier","src":"9611:9:21"}],"functionName":{"name":"sub","nativeSrc":"9598:3:21","nodeType":"YulIdentifier","src":"9598:3:21"},"nativeSrc":"9598:23:21","nodeType":"YulFunctionCall","src":"9598:23:21"},{"kind":"number","nativeSrc":"9623:2:21","nodeType":"YulLiteral","src":"9623:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"9594:3:21","nodeType":"YulIdentifier","src":"9594:3:21"},"nativeSrc":"9594:32:21","nodeType":"YulFunctionCall","src":"9594:32:21"},"nativeSrc":"9591:52:21","nodeType":"YulIf","src":"9591:52:21"},{"nativeSrc":"9652:39:21","nodeType":"YulAssignment","src":"9652:39:21","value":{"arguments":[{"name":"headStart","nativeSrc":"9681:9:21","nodeType":"YulIdentifier","src":"9681:9:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"9662:18:21","nodeType":"YulIdentifier","src":"9662:18:21"},"nativeSrc":"9662:29:21","nodeType":"YulFunctionCall","src":"9662:29:21"},"variableNames":[{"name":"value0","nativeSrc":"9652:6:21","nodeType":"YulIdentifier","src":"9652:6:21"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"9511:186:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9547:9:21","nodeType":"YulTypedName","src":"9547:9:21","type":""},{"name":"dataEnd","nativeSrc":"9558:7:21","nodeType":"YulTypedName","src":"9558:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9570:6:21","nodeType":"YulTypedName","src":"9570:6:21","type":""}],"src":"9511:186:21"},{"body":{"nativeSrc":"9803:125:21","nodeType":"YulBlock","src":"9803:125:21","statements":[{"nativeSrc":"9813:26:21","nodeType":"YulAssignment","src":"9813:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"9825:9:21","nodeType":"YulIdentifier","src":"9825:9:21"},{"kind":"number","nativeSrc":"9836:2:21","nodeType":"YulLiteral","src":"9836:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9821:3:21","nodeType":"YulIdentifier","src":"9821:3:21"},"nativeSrc":"9821:18:21","nodeType":"YulFunctionCall","src":"9821:18:21"},"variableNames":[{"name":"tail","nativeSrc":"9813:4:21","nodeType":"YulIdentifier","src":"9813:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9855:9:21","nodeType":"YulIdentifier","src":"9855:9:21"},{"arguments":[{"name":"value0","nativeSrc":"9870:6:21","nodeType":"YulIdentifier","src":"9870:6:21"},{"kind":"number","nativeSrc":"9878:42:21","nodeType":"YulLiteral","src":"9878:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"9866:3:21","nodeType":"YulIdentifier","src":"9866:3:21"},"nativeSrc":"9866:55:21","nodeType":"YulFunctionCall","src":"9866:55:21"}],"functionName":{"name":"mstore","nativeSrc":"9848:6:21","nodeType":"YulIdentifier","src":"9848:6:21"},"nativeSrc":"9848:74:21","nodeType":"YulFunctionCall","src":"9848:74:21"},"nativeSrc":"9848:74:21","nodeType":"YulExpressionStatement","src":"9848:74:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"9702:226:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9772:9:21","nodeType":"YulTypedName","src":"9772:9:21","type":""},{"name":"value0","nativeSrc":"9783:6:21","nodeType":"YulTypedName","src":"9783:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9794:4:21","nodeType":"YulTypedName","src":"9794:4:21","type":""}],"src":"9702:226:21"},{"body":{"nativeSrc":"9975:76:21","nodeType":"YulBlock","src":"9975:76:21","statements":[{"body":{"nativeSrc":"10029:16:21","nodeType":"YulBlock","src":"10029:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10038:1:21","nodeType":"YulLiteral","src":"10038:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"10041:1:21","nodeType":"YulLiteral","src":"10041:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10031:6:21","nodeType":"YulIdentifier","src":"10031:6:21"},"nativeSrc":"10031:12:21","nodeType":"YulFunctionCall","src":"10031:12:21"},"nativeSrc":"10031:12:21","nodeType":"YulExpressionStatement","src":"10031:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9998:5:21","nodeType":"YulIdentifier","src":"9998:5:21"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"10019:5:21","nodeType":"YulIdentifier","src":"10019:5:21"}],"functionName":{"name":"iszero","nativeSrc":"10012:6:21","nodeType":"YulIdentifier","src":"10012:6:21"},"nativeSrc":"10012:13:21","nodeType":"YulFunctionCall","src":"10012:13:21"}],"functionName":{"name":"iszero","nativeSrc":"10005:6:21","nodeType":"YulIdentifier","src":"10005:6:21"},"nativeSrc":"10005:21:21","nodeType":"YulFunctionCall","src":"10005:21:21"}],"functionName":{"name":"eq","nativeSrc":"9995:2:21","nodeType":"YulIdentifier","src":"9995:2:21"},"nativeSrc":"9995:32:21","nodeType":"YulFunctionCall","src":"9995:32:21"}],"functionName":{"name":"iszero","nativeSrc":"9988:6:21","nodeType":"YulIdentifier","src":"9988:6:21"},"nativeSrc":"9988:40:21","nodeType":"YulFunctionCall","src":"9988:40:21"},"nativeSrc":"9985:60:21","nodeType":"YulIf","src":"9985:60:21"}]},"name":"validator_revert_bool","nativeSrc":"9933:118:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9964:5:21","nodeType":"YulTypedName","src":"9964:5:21","type":""}],"src":"9933:118:21"},{"body":{"nativeSrc":"10140:231:21","nodeType":"YulBlock","src":"10140:231:21","statements":[{"body":{"nativeSrc":"10186:16:21","nodeType":"YulBlock","src":"10186:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10195:1:21","nodeType":"YulLiteral","src":"10195:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"10198:1:21","nodeType":"YulLiteral","src":"10198:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10188:6:21","nodeType":"YulIdentifier","src":"10188:6:21"},"nativeSrc":"10188:12:21","nodeType":"YulFunctionCall","src":"10188:12:21"},"nativeSrc":"10188:12:21","nodeType":"YulExpressionStatement","src":"10188:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10161:7:21","nodeType":"YulIdentifier","src":"10161:7:21"},{"name":"headStart","nativeSrc":"10170:9:21","nodeType":"YulIdentifier","src":"10170:9:21"}],"functionName":{"name":"sub","nativeSrc":"10157:3:21","nodeType":"YulIdentifier","src":"10157:3:21"},"nativeSrc":"10157:23:21","nodeType":"YulFunctionCall","src":"10157:23:21"},{"kind":"number","nativeSrc":"10182:2:21","nodeType":"YulLiteral","src":"10182:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"10153:3:21","nodeType":"YulIdentifier","src":"10153:3:21"},"nativeSrc":"10153:32:21","nodeType":"YulFunctionCall","src":"10153:32:21"},"nativeSrc":"10150:52:21","nodeType":"YulIf","src":"10150:52:21"},{"nativeSrc":"10211:39:21","nodeType":"YulAssignment","src":"10211:39:21","value":{"arguments":[{"name":"headStart","nativeSrc":"10240:9:21","nodeType":"YulIdentifier","src":"10240:9:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"10221:18:21","nodeType":"YulIdentifier","src":"10221:18:21"},"nativeSrc":"10221:29:21","nodeType":"YulFunctionCall","src":"10221:29:21"},"variableNames":[{"name":"value0","nativeSrc":"10211:6:21","nodeType":"YulIdentifier","src":"10211:6:21"}]},{"nativeSrc":"10259:45:21","nodeType":"YulVariableDeclaration","src":"10259:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10289:9:21","nodeType":"YulIdentifier","src":"10289:9:21"},{"kind":"number","nativeSrc":"10300:2:21","nodeType":"YulLiteral","src":"10300:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10285:3:21","nodeType":"YulIdentifier","src":"10285:3:21"},"nativeSrc":"10285:18:21","nodeType":"YulFunctionCall","src":"10285:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"10272:12:21","nodeType":"YulIdentifier","src":"10272:12:21"},"nativeSrc":"10272:32:21","nodeType":"YulFunctionCall","src":"10272:32:21"},"variables":[{"name":"value","nativeSrc":"10263:5:21","nodeType":"YulTypedName","src":"10263:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"10335:5:21","nodeType":"YulIdentifier","src":"10335:5:21"}],"functionName":{"name":"validator_revert_bool","nativeSrc":"10313:21:21","nodeType":"YulIdentifier","src":"10313:21:21"},"nativeSrc":"10313:28:21","nodeType":"YulFunctionCall","src":"10313:28:21"},"nativeSrc":"10313:28:21","nodeType":"YulExpressionStatement","src":"10313:28:21"},{"nativeSrc":"10350:15:21","nodeType":"YulAssignment","src":"10350:15:21","value":{"name":"value","nativeSrc":"10360:5:21","nodeType":"YulIdentifier","src":"10360:5:21"},"variableNames":[{"name":"value1","nativeSrc":"10350:6:21","nodeType":"YulIdentifier","src":"10350:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nativeSrc":"10056:315:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10098:9:21","nodeType":"YulTypedName","src":"10098:9:21","type":""},{"name":"dataEnd","nativeSrc":"10109:7:21","nodeType":"YulTypedName","src":"10109:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10121:6:21","nodeType":"YulTypedName","src":"10121:6:21","type":""},{"name":"value1","nativeSrc":"10129:6:21","nodeType":"YulTypedName","src":"10129:6:21","type":""}],"src":"10056:315:21"},{"body":{"nativeSrc":"10463:173:21","nodeType":"YulBlock","src":"10463:173:21","statements":[{"body":{"nativeSrc":"10509:16:21","nodeType":"YulBlock","src":"10509:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10518:1:21","nodeType":"YulLiteral","src":"10518:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"10521:1:21","nodeType":"YulLiteral","src":"10521:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10511:6:21","nodeType":"YulIdentifier","src":"10511:6:21"},"nativeSrc":"10511:12:21","nodeType":"YulFunctionCall","src":"10511:12:21"},"nativeSrc":"10511:12:21","nodeType":"YulExpressionStatement","src":"10511:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10484:7:21","nodeType":"YulIdentifier","src":"10484:7:21"},{"name":"headStart","nativeSrc":"10493:9:21","nodeType":"YulIdentifier","src":"10493:9:21"}],"functionName":{"name":"sub","nativeSrc":"10480:3:21","nodeType":"YulIdentifier","src":"10480:3:21"},"nativeSrc":"10480:23:21","nodeType":"YulFunctionCall","src":"10480:23:21"},{"kind":"number","nativeSrc":"10505:2:21","nodeType":"YulLiteral","src":"10505:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"10476:3:21","nodeType":"YulIdentifier","src":"10476:3:21"},"nativeSrc":"10476:32:21","nodeType":"YulFunctionCall","src":"10476:32:21"},"nativeSrc":"10473:52:21","nodeType":"YulIf","src":"10473:52:21"},{"nativeSrc":"10534:39:21","nodeType":"YulAssignment","src":"10534:39:21","value":{"arguments":[{"name":"headStart","nativeSrc":"10563:9:21","nodeType":"YulIdentifier","src":"10563:9:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"10544:18:21","nodeType":"YulIdentifier","src":"10544:18:21"},"nativeSrc":"10544:29:21","nodeType":"YulFunctionCall","src":"10544:29:21"},"variableNames":[{"name":"value0","nativeSrc":"10534:6:21","nodeType":"YulIdentifier","src":"10534:6:21"}]},{"nativeSrc":"10582:48:21","nodeType":"YulAssignment","src":"10582:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10615:9:21","nodeType":"YulIdentifier","src":"10615:9:21"},{"kind":"number","nativeSrc":"10626:2:21","nodeType":"YulLiteral","src":"10626:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10611:3:21","nodeType":"YulIdentifier","src":"10611:3:21"},"nativeSrc":"10611:18:21","nodeType":"YulFunctionCall","src":"10611:18:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"10592:18:21","nodeType":"YulIdentifier","src":"10592:18:21"},"nativeSrc":"10592:38:21","nodeType":"YulFunctionCall","src":"10592:38:21"},"variableNames":[{"name":"value1","nativeSrc":"10582:6:21","nodeType":"YulIdentifier","src":"10582:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"10376:260:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10421:9:21","nodeType":"YulTypedName","src":"10421:9:21","type":""},{"name":"dataEnd","nativeSrc":"10432:7:21","nodeType":"YulTypedName","src":"10432:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10444:6:21","nodeType":"YulTypedName","src":"10444:6:21","type":""},{"name":"value1","nativeSrc":"10452:6:21","nodeType":"YulTypedName","src":"10452:6:21","type":""}],"src":"10376:260:21"},{"body":{"nativeSrc":"10728:161:21","nodeType":"YulBlock","src":"10728:161:21","statements":[{"body":{"nativeSrc":"10774:16:21","nodeType":"YulBlock","src":"10774:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10783:1:21","nodeType":"YulLiteral","src":"10783:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"10786:1:21","nodeType":"YulLiteral","src":"10786:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10776:6:21","nodeType":"YulIdentifier","src":"10776:6:21"},"nativeSrc":"10776:12:21","nodeType":"YulFunctionCall","src":"10776:12:21"},"nativeSrc":"10776:12:21","nodeType":"YulExpressionStatement","src":"10776:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10749:7:21","nodeType":"YulIdentifier","src":"10749:7:21"},{"name":"headStart","nativeSrc":"10758:9:21","nodeType":"YulIdentifier","src":"10758:9:21"}],"functionName":{"name":"sub","nativeSrc":"10745:3:21","nodeType":"YulIdentifier","src":"10745:3:21"},"nativeSrc":"10745:23:21","nodeType":"YulFunctionCall","src":"10745:23:21"},{"kind":"number","nativeSrc":"10770:2:21","nodeType":"YulLiteral","src":"10770:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"10741:3:21","nodeType":"YulIdentifier","src":"10741:3:21"},"nativeSrc":"10741:32:21","nodeType":"YulFunctionCall","src":"10741:32:21"},"nativeSrc":"10738:52:21","nodeType":"YulIf","src":"10738:52:21"},{"nativeSrc":"10799:33:21","nodeType":"YulAssignment","src":"10799:33:21","value":{"arguments":[{"name":"headStart","nativeSrc":"10822:9:21","nodeType":"YulIdentifier","src":"10822:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"10809:12:21","nodeType":"YulIdentifier","src":"10809:12:21"},"nativeSrc":"10809:23:21","nodeType":"YulFunctionCall","src":"10809:23:21"},"variableNames":[{"name":"value0","nativeSrc":"10799:6:21","nodeType":"YulIdentifier","src":"10799:6:21"}]},{"nativeSrc":"10841:42:21","nodeType":"YulAssignment","src":"10841:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10868:9:21","nodeType":"YulIdentifier","src":"10868:9:21"},{"kind":"number","nativeSrc":"10879:2:21","nodeType":"YulLiteral","src":"10879:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10864:3:21","nodeType":"YulIdentifier","src":"10864:3:21"},"nativeSrc":"10864:18:21","nodeType":"YulFunctionCall","src":"10864:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"10851:12:21","nodeType":"YulIdentifier","src":"10851:12:21"},"nativeSrc":"10851:32:21","nodeType":"YulFunctionCall","src":"10851:32:21"},"variableNames":[{"name":"value1","nativeSrc":"10841:6:21","nodeType":"YulIdentifier","src":"10841:6:21"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nativeSrc":"10641:248:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10686:9:21","nodeType":"YulTypedName","src":"10686:9:21","type":""},{"name":"dataEnd","nativeSrc":"10697:7:21","nodeType":"YulTypedName","src":"10697:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10709:6:21","nodeType":"YulTypedName","src":"10709:6:21","type":""},{"name":"value1","nativeSrc":"10717:6:21","nodeType":"YulTypedName","src":"10717:6:21","type":""}],"src":"10641:248:21"},{"body":{"nativeSrc":"11041:459:21","nodeType":"YulBlock","src":"11041:459:21","statements":[{"body":{"nativeSrc":"11088:16:21","nodeType":"YulBlock","src":"11088:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11097:1:21","nodeType":"YulLiteral","src":"11097:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"11100:1:21","nodeType":"YulLiteral","src":"11100:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11090:6:21","nodeType":"YulIdentifier","src":"11090:6:21"},"nativeSrc":"11090:12:21","nodeType":"YulFunctionCall","src":"11090:12:21"},"nativeSrc":"11090:12:21","nodeType":"YulExpressionStatement","src":"11090:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11062:7:21","nodeType":"YulIdentifier","src":"11062:7:21"},{"name":"headStart","nativeSrc":"11071:9:21","nodeType":"YulIdentifier","src":"11071:9:21"}],"functionName":{"name":"sub","nativeSrc":"11058:3:21","nodeType":"YulIdentifier","src":"11058:3:21"},"nativeSrc":"11058:23:21","nodeType":"YulFunctionCall","src":"11058:23:21"},{"kind":"number","nativeSrc":"11083:3:21","nodeType":"YulLiteral","src":"11083:3:21","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"11054:3:21","nodeType":"YulIdentifier","src":"11054:3:21"},"nativeSrc":"11054:33:21","nodeType":"YulFunctionCall","src":"11054:33:21"},"nativeSrc":"11051:53:21","nodeType":"YulIf","src":"11051:53:21"},{"nativeSrc":"11113:39:21","nodeType":"YulAssignment","src":"11113:39:21","value":{"arguments":[{"name":"headStart","nativeSrc":"11142:9:21","nodeType":"YulIdentifier","src":"11142:9:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"11123:18:21","nodeType":"YulIdentifier","src":"11123:18:21"},"nativeSrc":"11123:29:21","nodeType":"YulFunctionCall","src":"11123:29:21"},"variableNames":[{"name":"value0","nativeSrc":"11113:6:21","nodeType":"YulIdentifier","src":"11113:6:21"}]},{"nativeSrc":"11161:48:21","nodeType":"YulAssignment","src":"11161:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11194:9:21","nodeType":"YulIdentifier","src":"11194:9:21"},{"kind":"number","nativeSrc":"11205:2:21","nodeType":"YulLiteral","src":"11205:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11190:3:21","nodeType":"YulIdentifier","src":"11190:3:21"},"nativeSrc":"11190:18:21","nodeType":"YulFunctionCall","src":"11190:18:21"}],"functionName":{"name":"abi_decode_address","nativeSrc":"11171:18:21","nodeType":"YulIdentifier","src":"11171:18:21"},"nativeSrc":"11171:38:21","nodeType":"YulFunctionCall","src":"11171:38:21"},"variableNames":[{"name":"value1","nativeSrc":"11161:6:21","nodeType":"YulIdentifier","src":"11161:6:21"}]},{"nativeSrc":"11218:42:21","nodeType":"YulAssignment","src":"11218:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11245:9:21","nodeType":"YulIdentifier","src":"11245:9:21"},{"kind":"number","nativeSrc":"11256:2:21","nodeType":"YulLiteral","src":"11256:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11241:3:21","nodeType":"YulIdentifier","src":"11241:3:21"},"nativeSrc":"11241:18:21","nodeType":"YulFunctionCall","src":"11241:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"11228:12:21","nodeType":"YulIdentifier","src":"11228:12:21"},"nativeSrc":"11228:32:21","nodeType":"YulFunctionCall","src":"11228:32:21"},"variableNames":[{"name":"value2","nativeSrc":"11218:6:21","nodeType":"YulIdentifier","src":"11218:6:21"}]},{"nativeSrc":"11269:42:21","nodeType":"YulAssignment","src":"11269:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11296:9:21","nodeType":"YulIdentifier","src":"11296:9:21"},{"kind":"number","nativeSrc":"11307:2:21","nodeType":"YulLiteral","src":"11307:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11292:3:21","nodeType":"YulIdentifier","src":"11292:3:21"},"nativeSrc":"11292:18:21","nodeType":"YulFunctionCall","src":"11292:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"11279:12:21","nodeType":"YulIdentifier","src":"11279:12:21"},"nativeSrc":"11279:32:21","nodeType":"YulFunctionCall","src":"11279:32:21"},"variableNames":[{"name":"value3","nativeSrc":"11269:6:21","nodeType":"YulIdentifier","src":"11269:6:21"}]},{"nativeSrc":"11320:47:21","nodeType":"YulVariableDeclaration","src":"11320:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11351:9:21","nodeType":"YulIdentifier","src":"11351:9:21"},{"kind":"number","nativeSrc":"11362:3:21","nodeType":"YulLiteral","src":"11362:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"11347:3:21","nodeType":"YulIdentifier","src":"11347:3:21"},"nativeSrc":"11347:19:21","nodeType":"YulFunctionCall","src":"11347:19:21"}],"functionName":{"name":"calldataload","nativeSrc":"11334:12:21","nodeType":"YulIdentifier","src":"11334:12:21"},"nativeSrc":"11334:33:21","nodeType":"YulFunctionCall","src":"11334:33:21"},"variables":[{"name":"offset","nativeSrc":"11324:6:21","nodeType":"YulTypedName","src":"11324:6:21","type":""}]},{"body":{"nativeSrc":"11410:16:21","nodeType":"YulBlock","src":"11410:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11419:1:21","nodeType":"YulLiteral","src":"11419:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"11422:1:21","nodeType":"YulLiteral","src":"11422:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11412:6:21","nodeType":"YulIdentifier","src":"11412:6:21"},"nativeSrc":"11412:12:21","nodeType":"YulFunctionCall","src":"11412:12:21"},"nativeSrc":"11412:12:21","nodeType":"YulExpressionStatement","src":"11412:12:21"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"11382:6:21","nodeType":"YulIdentifier","src":"11382:6:21"},{"kind":"number","nativeSrc":"11390:18:21","nodeType":"YulLiteral","src":"11390:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"11379:2:21","nodeType":"YulIdentifier","src":"11379:2:21"},"nativeSrc":"11379:30:21","nodeType":"YulFunctionCall","src":"11379:30:21"},"nativeSrc":"11376:50:21","nodeType":"YulIf","src":"11376:50:21"},{"nativeSrc":"11435:59:21","nodeType":"YulAssignment","src":"11435:59:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11466:9:21","nodeType":"YulIdentifier","src":"11466:9:21"},{"name":"offset","nativeSrc":"11477:6:21","nodeType":"YulIdentifier","src":"11477:6:21"}],"functionName":{"name":"add","nativeSrc":"11462:3:21","nodeType":"YulIdentifier","src":"11462:3:21"},"nativeSrc":"11462:22:21","nodeType":"YulFunctionCall","src":"11462:22:21"},{"name":"dataEnd","nativeSrc":"11486:7:21","nodeType":"YulIdentifier","src":"11486:7:21"}],"functionName":{"name":"abi_decode_bytes","nativeSrc":"11445:16:21","nodeType":"YulIdentifier","src":"11445:16:21"},"nativeSrc":"11445:49:21","nodeType":"YulFunctionCall","src":"11445:49:21"},"variableNames":[{"name":"value4","nativeSrc":"11435:6:21","nodeType":"YulIdentifier","src":"11435:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr","nativeSrc":"10894:606:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10975:9:21","nodeType":"YulTypedName","src":"10975:9:21","type":""},{"name":"dataEnd","nativeSrc":"10986:7:21","nodeType":"YulTypedName","src":"10986:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10998:6:21","nodeType":"YulTypedName","src":"10998:6:21","type":""},{"name":"value1","nativeSrc":"11006:6:21","nodeType":"YulTypedName","src":"11006:6:21","type":""},{"name":"value2","nativeSrc":"11014:6:21","nodeType":"YulTypedName","src":"11014:6:21","type":""},{"name":"value3","nativeSrc":"11022:6:21","nodeType":"YulTypedName","src":"11022:6:21","type":""},{"name":"value4","nativeSrc":"11030:6:21","nodeType":"YulTypedName","src":"11030:6:21","type":""}],"src":"10894:606:21"},{"body":{"nativeSrc":"11679:181:21","nodeType":"YulBlock","src":"11679:181:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11696:9:21","nodeType":"YulIdentifier","src":"11696:9:21"},{"kind":"number","nativeSrc":"11707:2:21","nodeType":"YulLiteral","src":"11707:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"11689:6:21","nodeType":"YulIdentifier","src":"11689:6:21"},"nativeSrc":"11689:21:21","nodeType":"YulFunctionCall","src":"11689:21:21"},"nativeSrc":"11689:21:21","nodeType":"YulExpressionStatement","src":"11689:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11730:9:21","nodeType":"YulIdentifier","src":"11730:9:21"},{"kind":"number","nativeSrc":"11741:2:21","nodeType":"YulLiteral","src":"11741:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11726:3:21","nodeType":"YulIdentifier","src":"11726:3:21"},"nativeSrc":"11726:18:21","nodeType":"YulFunctionCall","src":"11726:18:21"},{"kind":"number","nativeSrc":"11746:2:21","nodeType":"YulLiteral","src":"11746:2:21","type":"","value":"31"}],"functionName":{"name":"mstore","nativeSrc":"11719:6:21","nodeType":"YulIdentifier","src":"11719:6:21"},"nativeSrc":"11719:30:21","nodeType":"YulFunctionCall","src":"11719:30:21"},"nativeSrc":"11719:30:21","nodeType":"YulExpressionStatement","src":"11719:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11769:9:21","nodeType":"YulIdentifier","src":"11769:9:21"},{"kind":"number","nativeSrc":"11780:2:21","nodeType":"YulLiteral","src":"11780:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11765:3:21","nodeType":"YulIdentifier","src":"11765:3:21"},"nativeSrc":"11765:18:21","nodeType":"YulFunctionCall","src":"11765:18:21"},{"hexValue":"55524920717565727920666f72206e6f6e6578697374656e7420746f6b656e","kind":"string","nativeSrc":"11785:33:21","nodeType":"YulLiteral","src":"11785:33:21","type":"","value":"URI query for nonexistent token"}],"functionName":{"name":"mstore","nativeSrc":"11758:6:21","nodeType":"YulIdentifier","src":"11758:6:21"},"nativeSrc":"11758:61:21","nodeType":"YulFunctionCall","src":"11758:61:21"},"nativeSrc":"11758:61:21","nodeType":"YulExpressionStatement","src":"11758:61:21"},{"nativeSrc":"11828:26:21","nodeType":"YulAssignment","src":"11828:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"11840:9:21","nodeType":"YulIdentifier","src":"11840:9:21"},{"kind":"number","nativeSrc":"11851:2:21","nodeType":"YulLiteral","src":"11851:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11836:3:21","nodeType":"YulIdentifier","src":"11836:3:21"},"nativeSrc":"11836:18:21","nodeType":"YulFunctionCall","src":"11836:18:21"},"variableNames":[{"name":"tail","nativeSrc":"11828:4:21","nodeType":"YulIdentifier","src":"11828:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_1cdec463df0fbdce13585c1435e3c4772f0033ebb8a813b127e59d923b0c9730__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11505:355:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11656:9:21","nodeType":"YulTypedName","src":"11656:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11670:4:21","nodeType":"YulTypedName","src":"11670:4:21","type":""}],"src":"11505:355:21"},{"body":{"nativeSrc":"11920:382:21","nodeType":"YulBlock","src":"11920:382:21","statements":[{"nativeSrc":"11930:22:21","nodeType":"YulAssignment","src":"11930:22:21","value":{"arguments":[{"kind":"number","nativeSrc":"11944:1:21","nodeType":"YulLiteral","src":"11944:1:21","type":"","value":"1"},{"name":"data","nativeSrc":"11947:4:21","nodeType":"YulIdentifier","src":"11947:4:21"}],"functionName":{"name":"shr","nativeSrc":"11940:3:21","nodeType":"YulIdentifier","src":"11940:3:21"},"nativeSrc":"11940:12:21","nodeType":"YulFunctionCall","src":"11940:12:21"},"variableNames":[{"name":"length","nativeSrc":"11930:6:21","nodeType":"YulIdentifier","src":"11930:6:21"}]},{"nativeSrc":"11961:38:21","nodeType":"YulVariableDeclaration","src":"11961:38:21","value":{"arguments":[{"name":"data","nativeSrc":"11991:4:21","nodeType":"YulIdentifier","src":"11991:4:21"},{"kind":"number","nativeSrc":"11997:1:21","nodeType":"YulLiteral","src":"11997:1:21","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"11987:3:21","nodeType":"YulIdentifier","src":"11987:3:21"},"nativeSrc":"11987:12:21","nodeType":"YulFunctionCall","src":"11987:12:21"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"11965:18:21","nodeType":"YulTypedName","src":"11965:18:21","type":""}]},{"body":{"nativeSrc":"12038:31:21","nodeType":"YulBlock","src":"12038:31:21","statements":[{"nativeSrc":"12040:27:21","nodeType":"YulAssignment","src":"12040:27:21","value":{"arguments":[{"name":"length","nativeSrc":"12054:6:21","nodeType":"YulIdentifier","src":"12054:6:21"},{"kind":"number","nativeSrc":"12062:4:21","nodeType":"YulLiteral","src":"12062:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"12050:3:21","nodeType":"YulIdentifier","src":"12050:3:21"},"nativeSrc":"12050:17:21","nodeType":"YulFunctionCall","src":"12050:17:21"},"variableNames":[{"name":"length","nativeSrc":"12040:6:21","nodeType":"YulIdentifier","src":"12040:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"12018:18:21","nodeType":"YulIdentifier","src":"12018:18:21"}],"functionName":{"name":"iszero","nativeSrc":"12011:6:21","nodeType":"YulIdentifier","src":"12011:6:21"},"nativeSrc":"12011:26:21","nodeType":"YulFunctionCall","src":"12011:26:21"},"nativeSrc":"12008:61:21","nodeType":"YulIf","src":"12008:61:21"},{"body":{"nativeSrc":"12128:168:21","nodeType":"YulBlock","src":"12128:168:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12149:1:21","nodeType":"YulLiteral","src":"12149:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"12152:77:21","nodeType":"YulLiteral","src":"12152:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"12142:6:21","nodeType":"YulIdentifier","src":"12142:6:21"},"nativeSrc":"12142:88:21","nodeType":"YulFunctionCall","src":"12142:88:21"},"nativeSrc":"12142:88:21","nodeType":"YulExpressionStatement","src":"12142:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12250:1:21","nodeType":"YulLiteral","src":"12250:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"12253:4:21","nodeType":"YulLiteral","src":"12253:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"12243:6:21","nodeType":"YulIdentifier","src":"12243:6:21"},"nativeSrc":"12243:15:21","nodeType":"YulFunctionCall","src":"12243:15:21"},"nativeSrc":"12243:15:21","nodeType":"YulExpressionStatement","src":"12243:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12278:1:21","nodeType":"YulLiteral","src":"12278:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"12281:4:21","nodeType":"YulLiteral","src":"12281:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"12271:6:21","nodeType":"YulIdentifier","src":"12271:6:21"},"nativeSrc":"12271:15:21","nodeType":"YulFunctionCall","src":"12271:15:21"},"nativeSrc":"12271:15:21","nodeType":"YulExpressionStatement","src":"12271:15:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"12084:18:21","nodeType":"YulIdentifier","src":"12084:18:21"},{"arguments":[{"name":"length","nativeSrc":"12107:6:21","nodeType":"YulIdentifier","src":"12107:6:21"},{"kind":"number","nativeSrc":"12115:2:21","nodeType":"YulLiteral","src":"12115:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"12104:2:21","nodeType":"YulIdentifier","src":"12104:2:21"},"nativeSrc":"12104:14:21","nodeType":"YulFunctionCall","src":"12104:14:21"}],"functionName":{"name":"eq","nativeSrc":"12081:2:21","nodeType":"YulIdentifier","src":"12081:2:21"},"nativeSrc":"12081:38:21","nodeType":"YulFunctionCall","src":"12081:38:21"},"nativeSrc":"12078:218:21","nodeType":"YulIf","src":"12078:218:21"}]},"name":"extract_byte_array_length","nativeSrc":"11865:437:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"11900:4:21","nodeType":"YulTypedName","src":"11900:4:21","type":""}],"returnVariables":[{"name":"length","nativeSrc":"11909:6:21","nodeType":"YulTypedName","src":"11909:6:21","type":""}],"src":"11865:437:21"},{"body":{"nativeSrc":"12363:65:21","nodeType":"YulBlock","src":"12363:65:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12380:1:21","nodeType":"YulLiteral","src":"12380:1:21","type":"","value":"0"},{"name":"ptr","nativeSrc":"12383:3:21","nodeType":"YulIdentifier","src":"12383:3:21"}],"functionName":{"name":"mstore","nativeSrc":"12373:6:21","nodeType":"YulIdentifier","src":"12373:6:21"},"nativeSrc":"12373:14:21","nodeType":"YulFunctionCall","src":"12373:14:21"},"nativeSrc":"12373:14:21","nodeType":"YulExpressionStatement","src":"12373:14:21"},{"nativeSrc":"12396:26:21","nodeType":"YulAssignment","src":"12396:26:21","value":{"arguments":[{"kind":"number","nativeSrc":"12414:1:21","nodeType":"YulLiteral","src":"12414:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"12417:4:21","nodeType":"YulLiteral","src":"12417:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"12404:9:21","nodeType":"YulIdentifier","src":"12404:9:21"},"nativeSrc":"12404:18:21","nodeType":"YulFunctionCall","src":"12404:18:21"},"variableNames":[{"name":"data","nativeSrc":"12396:4:21","nodeType":"YulIdentifier","src":"12396:4:21"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"12307:121:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"12346:3:21","nodeType":"YulTypedName","src":"12346:3:21","type":""}],"returnVariables":[{"name":"data","nativeSrc":"12354:4:21","nodeType":"YulTypedName","src":"12354:4:21","type":""}],"src":"12307:121:21"},{"body":{"nativeSrc":"12617:895:21","nodeType":"YulBlock","src":"12617:895:21","statements":[{"nativeSrc":"12627:12:21","nodeType":"YulVariableDeclaration","src":"12627:12:21","value":{"kind":"number","nativeSrc":"12638:1:21","nodeType":"YulLiteral","src":"12638:1:21","type":"","value":"0"},"variables":[{"name":"ret","nativeSrc":"12631:3:21","nodeType":"YulTypedName","src":"12631:3:21","type":""}]},{"nativeSrc":"12648:30:21","nodeType":"YulVariableDeclaration","src":"12648:30:21","value":{"arguments":[{"name":"value0","nativeSrc":"12671:6:21","nodeType":"YulIdentifier","src":"12671:6:21"}],"functionName":{"name":"sload","nativeSrc":"12665:5:21","nodeType":"YulIdentifier","src":"12665:5:21"},"nativeSrc":"12665:13:21","nodeType":"YulFunctionCall","src":"12665:13:21"},"variables":[{"name":"slotValue","nativeSrc":"12652:9:21","nodeType":"YulTypedName","src":"12652:9:21","type":""}]},{"nativeSrc":"12687:50:21","nodeType":"YulVariableDeclaration","src":"12687:50:21","value":{"arguments":[{"name":"slotValue","nativeSrc":"12727:9:21","nodeType":"YulIdentifier","src":"12727:9:21"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"12701:25:21","nodeType":"YulIdentifier","src":"12701:25:21"},"nativeSrc":"12701:36:21","nodeType":"YulFunctionCall","src":"12701:36:21"},"variables":[{"name":"length","nativeSrc":"12691:6:21","nodeType":"YulTypedName","src":"12691:6:21","type":""}]},{"nativeSrc":"12746:11:21","nodeType":"YulVariableDeclaration","src":"12746:11:21","value":{"kind":"number","nativeSrc":"12756:1:21","nodeType":"YulLiteral","src":"12756:1:21","type":"","value":"1"},"variables":[{"name":"_1","nativeSrc":"12750:2:21","nodeType":"YulTypedName","src":"12750:2:21","type":""}]},{"cases":[{"body":{"nativeSrc":"12806:184:21","nodeType":"YulBlock","src":"12806:184:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"12827:3:21","nodeType":"YulIdentifier","src":"12827:3:21"},{"arguments":[{"name":"slotValue","nativeSrc":"12836:9:21","nodeType":"YulIdentifier","src":"12836:9:21"},{"kind":"number","nativeSrc":"12847:66:21","nodeType":"YulLiteral","src":"12847:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00"}],"functionName":{"name":"and","nativeSrc":"12832:3:21","nodeType":"YulIdentifier","src":"12832:3:21"},"nativeSrc":"12832:82:21","nodeType":"YulFunctionCall","src":"12832:82:21"}],"functionName":{"name":"mstore","nativeSrc":"12820:6:21","nodeType":"YulIdentifier","src":"12820:6:21"},"nativeSrc":"12820:95:21","nodeType":"YulFunctionCall","src":"12820:95:21"},"nativeSrc":"12820:95:21","nodeType":"YulExpressionStatement","src":"12820:95:21"},{"nativeSrc":"12928:52:21","nodeType":"YulAssignment","src":"12928:52:21","value":{"arguments":[{"name":"pos","nativeSrc":"12939:3:21","nodeType":"YulIdentifier","src":"12939:3:21"},{"arguments":[{"name":"length","nativeSrc":"12948:6:21","nodeType":"YulIdentifier","src":"12948:6:21"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"12970:6:21","nodeType":"YulIdentifier","src":"12970:6:21"}],"functionName":{"name":"iszero","nativeSrc":"12963:6:21","nodeType":"YulIdentifier","src":"12963:6:21"},"nativeSrc":"12963:14:21","nodeType":"YulFunctionCall","src":"12963:14:21"}],"functionName":{"name":"iszero","nativeSrc":"12956:6:21","nodeType":"YulIdentifier","src":"12956:6:21"},"nativeSrc":"12956:22:21","nodeType":"YulFunctionCall","src":"12956:22:21"}],"functionName":{"name":"mul","nativeSrc":"12944:3:21","nodeType":"YulIdentifier","src":"12944:3:21"},"nativeSrc":"12944:35:21","nodeType":"YulFunctionCall","src":"12944:35:21"}],"functionName":{"name":"add","nativeSrc":"12935:3:21","nodeType":"YulIdentifier","src":"12935:3:21"},"nativeSrc":"12935:45:21","nodeType":"YulFunctionCall","src":"12935:45:21"},"variableNames":[{"name":"ret","nativeSrc":"12928:3:21","nodeType":"YulIdentifier","src":"12928:3:21"}]}]},"nativeSrc":"12799:191:21","nodeType":"YulCase","src":"12799:191:21","value":{"kind":"number","nativeSrc":"12804:1:21","nodeType":"YulLiteral","src":"12804:1:21","type":"","value":"0"}},{"body":{"nativeSrc":"13006:351:21","nodeType":"YulBlock","src":"13006:351:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13027:1:21","nodeType":"YulLiteral","src":"13027:1:21","type":"","value":"0"},{"name":"value0","nativeSrc":"13030:6:21","nodeType":"YulIdentifier","src":"13030:6:21"}],"functionName":{"name":"mstore","nativeSrc":"13020:6:21","nodeType":"YulIdentifier","src":"13020:6:21"},"nativeSrc":"13020:17:21","nodeType":"YulFunctionCall","src":"13020:17:21"},"nativeSrc":"13020:17:21","nodeType":"YulExpressionStatement","src":"13020:17:21"},{"nativeSrc":"13050:14:21","nodeType":"YulVariableDeclaration","src":"13050:14:21","value":{"kind":"number","nativeSrc":"13060:4:21","nodeType":"YulLiteral","src":"13060:4:21","type":"","value":"0x20"},"variables":[{"name":"_2","nativeSrc":"13054:2:21","nodeType":"YulTypedName","src":"13054:2:21","type":""}]},{"nativeSrc":"13077:33:21","nodeType":"YulVariableDeclaration","src":"13077:33:21","value":{"arguments":[{"kind":"number","nativeSrc":"13102:1:21","nodeType":"YulLiteral","src":"13102:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"13105:4:21","nodeType":"YulLiteral","src":"13105:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"13092:9:21","nodeType":"YulIdentifier","src":"13092:9:21"},"nativeSrc":"13092:18:21","nodeType":"YulFunctionCall","src":"13092:18:21"},"variables":[{"name":"dataPos","nativeSrc":"13081:7:21","nodeType":"YulTypedName","src":"13081:7:21","type":""}]},{"nativeSrc":"13123:10:21","nodeType":"YulVariableDeclaration","src":"13123:10:21","value":{"kind":"number","nativeSrc":"13132:1:21","nodeType":"YulLiteral","src":"13132:1:21","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"13127:1:21","nodeType":"YulTypedName","src":"13127:1:21","type":""}]},{"body":{"nativeSrc":"13200:111:21","nodeType":"YulBlock","src":"13200:111:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"13229:3:21","nodeType":"YulIdentifier","src":"13229:3:21"},{"name":"i","nativeSrc":"13234:1:21","nodeType":"YulIdentifier","src":"13234:1:21"}],"functionName":{"name":"add","nativeSrc":"13225:3:21","nodeType":"YulIdentifier","src":"13225:3:21"},"nativeSrc":"13225:11:21","nodeType":"YulFunctionCall","src":"13225:11:21"},{"arguments":[{"name":"dataPos","nativeSrc":"13244:7:21","nodeType":"YulIdentifier","src":"13244:7:21"}],"functionName":{"name":"sload","nativeSrc":"13238:5:21","nodeType":"YulIdentifier","src":"13238:5:21"},"nativeSrc":"13238:14:21","nodeType":"YulFunctionCall","src":"13238:14:21"}],"functionName":{"name":"mstore","nativeSrc":"13218:6:21","nodeType":"YulIdentifier","src":"13218:6:21"},"nativeSrc":"13218:35:21","nodeType":"YulFunctionCall","src":"13218:35:21"},"nativeSrc":"13218:35:21","nodeType":"YulExpressionStatement","src":"13218:35:21"},{"nativeSrc":"13270:27:21","nodeType":"YulAssignment","src":"13270:27:21","value":{"arguments":[{"name":"dataPos","nativeSrc":"13285:7:21","nodeType":"YulIdentifier","src":"13285:7:21"},{"name":"_1","nativeSrc":"13294:2:21","nodeType":"YulIdentifier","src":"13294:2:21"}],"functionName":{"name":"add","nativeSrc":"13281:3:21","nodeType":"YulIdentifier","src":"13281:3:21"},"nativeSrc":"13281:16:21","nodeType":"YulFunctionCall","src":"13281:16:21"},"variableNames":[{"name":"dataPos","nativeSrc":"13270:7:21","nodeType":"YulIdentifier","src":"13270:7:21"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"13157:1:21","nodeType":"YulIdentifier","src":"13157:1:21"},{"name":"length","nativeSrc":"13160:6:21","nodeType":"YulIdentifier","src":"13160:6:21"}],"functionName":{"name":"lt","nativeSrc":"13154:2:21","nodeType":"YulIdentifier","src":"13154:2:21"},"nativeSrc":"13154:13:21","nodeType":"YulFunctionCall","src":"13154:13:21"},"nativeSrc":"13146:165:21","nodeType":"YulForLoop","post":{"nativeSrc":"13168:19:21","nodeType":"YulBlock","src":"13168:19:21","statements":[{"nativeSrc":"13170:15:21","nodeType":"YulAssignment","src":"13170:15:21","value":{"arguments":[{"name":"i","nativeSrc":"13179:1:21","nodeType":"YulIdentifier","src":"13179:1:21"},{"name":"_2","nativeSrc":"13182:2:21","nodeType":"YulIdentifier","src":"13182:2:21"}],"functionName":{"name":"add","nativeSrc":"13175:3:21","nodeType":"YulIdentifier","src":"13175:3:21"},"nativeSrc":"13175:10:21","nodeType":"YulFunctionCall","src":"13175:10:21"},"variableNames":[{"name":"i","nativeSrc":"13170:1:21","nodeType":"YulIdentifier","src":"13170:1:21"}]}]},"pre":{"nativeSrc":"13150:3:21","nodeType":"YulBlock","src":"13150:3:21","statements":[]},"src":"13146:165:21"},{"nativeSrc":"13324:23:21","nodeType":"YulAssignment","src":"13324:23:21","value":{"arguments":[{"name":"pos","nativeSrc":"13335:3:21","nodeType":"YulIdentifier","src":"13335:3:21"},{"name":"length","nativeSrc":"13340:6:21","nodeType":"YulIdentifier","src":"13340:6:21"}],"functionName":{"name":"add","nativeSrc":"13331:3:21","nodeType":"YulIdentifier","src":"13331:3:21"},"nativeSrc":"13331:16:21","nodeType":"YulFunctionCall","src":"13331:16:21"},"variableNames":[{"name":"ret","nativeSrc":"13324:3:21","nodeType":"YulIdentifier","src":"13324:3:21"}]}]},"nativeSrc":"12999:358:21","nodeType":"YulCase","src":"12999:358:21","value":{"kind":"number","nativeSrc":"13004:1:21","nodeType":"YulLiteral","src":"13004:1:21","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nativeSrc":"12777:9:21","nodeType":"YulIdentifier","src":"12777:9:21"},{"kind":"number","nativeSrc":"12788:1:21","nodeType":"YulLiteral","src":"12788:1:21","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"12773:3:21","nodeType":"YulIdentifier","src":"12773:3:21"},"nativeSrc":"12773:17:21","nodeType":"YulFunctionCall","src":"12773:17:21"},"nativeSrc":"12766:591:21","nodeType":"YulSwitch","src":"12766:591:21"},{"nativeSrc":"13366:29:21","nodeType":"YulVariableDeclaration","src":"13366:29:21","value":{"arguments":[{"name":"value1","nativeSrc":"13388:6:21","nodeType":"YulIdentifier","src":"13388:6:21"}],"functionName":{"name":"mload","nativeSrc":"13382:5:21","nodeType":"YulIdentifier","src":"13382:5:21"},"nativeSrc":"13382:13:21","nodeType":"YulFunctionCall","src":"13382:13:21"},"variables":[{"name":"length_1","nativeSrc":"13370:8:21","nodeType":"YulTypedName","src":"13370:8:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nativeSrc":"13443:6:21","nodeType":"YulIdentifier","src":"13443:6:21"},{"kind":"number","nativeSrc":"13451:4:21","nodeType":"YulLiteral","src":"13451:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"13439:3:21","nodeType":"YulIdentifier","src":"13439:3:21"},"nativeSrc":"13439:17:21","nodeType":"YulFunctionCall","src":"13439:17:21"},{"name":"ret","nativeSrc":"13458:3:21","nodeType":"YulIdentifier","src":"13458:3:21"},{"name":"length_1","nativeSrc":"13463:8:21","nodeType":"YulIdentifier","src":"13463:8:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"13404:34:21","nodeType":"YulIdentifier","src":"13404:34:21"},"nativeSrc":"13404:68:21","nodeType":"YulFunctionCall","src":"13404:68:21"},"nativeSrc":"13404:68:21","nodeType":"YulExpressionStatement","src":"13404:68:21"},{"nativeSrc":"13481:25:21","nodeType":"YulAssignment","src":"13481:25:21","value":{"arguments":[{"name":"ret","nativeSrc":"13492:3:21","nodeType":"YulIdentifier","src":"13492:3:21"},{"name":"length_1","nativeSrc":"13497:8:21","nodeType":"YulIdentifier","src":"13497:8:21"}],"functionName":{"name":"add","nativeSrc":"13488:3:21","nodeType":"YulIdentifier","src":"13488:3:21"},"nativeSrc":"13488:18:21","nodeType":"YulFunctionCall","src":"13488:18:21"},"variableNames":[{"name":"end","nativeSrc":"13481:3:21","nodeType":"YulIdentifier","src":"13481:3:21"}]}]},"name":"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"12433:1079:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"12585:3:21","nodeType":"YulTypedName","src":"12585:3:21","type":""},{"name":"value1","nativeSrc":"12590:6:21","nodeType":"YulTypedName","src":"12590:6:21","type":""},{"name":"value0","nativeSrc":"12598:6:21","nodeType":"YulTypedName","src":"12598:6:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"12609:3:21","nodeType":"YulTypedName","src":"12609:3:21","type":""}],"src":"12433:1079:21"},{"body":{"nativeSrc":"13646:198:21","nodeType":"YulBlock","src":"13646:198:21","statements":[{"nativeSrc":"13656:26:21","nodeType":"YulAssignment","src":"13656:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"13668:9:21","nodeType":"YulIdentifier","src":"13668:9:21"},{"kind":"number","nativeSrc":"13679:2:21","nodeType":"YulLiteral","src":"13679:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13664:3:21","nodeType":"YulIdentifier","src":"13664:3:21"},"nativeSrc":"13664:18:21","nodeType":"YulFunctionCall","src":"13664:18:21"},"variableNames":[{"name":"tail","nativeSrc":"13656:4:21","nodeType":"YulIdentifier","src":"13656:4:21"}]},{"nativeSrc":"13691:52:21","nodeType":"YulVariableDeclaration","src":"13691:52:21","value":{"kind":"number","nativeSrc":"13701:42:21","nodeType":"YulLiteral","src":"13701:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"13695:2:21","nodeType":"YulTypedName","src":"13695:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"13759:9:21","nodeType":"YulIdentifier","src":"13759:9:21"},{"arguments":[{"name":"value0","nativeSrc":"13774:6:21","nodeType":"YulIdentifier","src":"13774:6:21"},{"name":"_1","nativeSrc":"13782:2:21","nodeType":"YulIdentifier","src":"13782:2:21"}],"functionName":{"name":"and","nativeSrc":"13770:3:21","nodeType":"YulIdentifier","src":"13770:3:21"},"nativeSrc":"13770:15:21","nodeType":"YulFunctionCall","src":"13770:15:21"}],"functionName":{"name":"mstore","nativeSrc":"13752:6:21","nodeType":"YulIdentifier","src":"13752:6:21"},"nativeSrc":"13752:34:21","nodeType":"YulFunctionCall","src":"13752:34:21"},"nativeSrc":"13752:34:21","nodeType":"YulExpressionStatement","src":"13752:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13806:9:21","nodeType":"YulIdentifier","src":"13806:9:21"},{"kind":"number","nativeSrc":"13817:2:21","nodeType":"YulLiteral","src":"13817:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13802:3:21","nodeType":"YulIdentifier","src":"13802:3:21"},"nativeSrc":"13802:18:21","nodeType":"YulFunctionCall","src":"13802:18:21"},{"arguments":[{"name":"value1","nativeSrc":"13826:6:21","nodeType":"YulIdentifier","src":"13826:6:21"},{"name":"_1","nativeSrc":"13834:2:21","nodeType":"YulIdentifier","src":"13834:2:21"}],"functionName":{"name":"and","nativeSrc":"13822:3:21","nodeType":"YulIdentifier","src":"13822:3:21"},"nativeSrc":"13822:15:21","nodeType":"YulFunctionCall","src":"13822:15:21"}],"functionName":{"name":"mstore","nativeSrc":"13795:6:21","nodeType":"YulIdentifier","src":"13795:6:21"},"nativeSrc":"13795:43:21","nodeType":"YulFunctionCall","src":"13795:43:21"},"nativeSrc":"13795:43:21","nodeType":"YulExpressionStatement","src":"13795:43:21"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"13517:327:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13607:9:21","nodeType":"YulTypedName","src":"13607:9:21","type":""},{"name":"value1","nativeSrc":"13618:6:21","nodeType":"YulTypedName","src":"13618:6:21","type":""},{"name":"value0","nativeSrc":"13626:6:21","nodeType":"YulTypedName","src":"13626:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13637:4:21","nodeType":"YulTypedName","src":"13637:4:21","type":""}],"src":"13517:327:21"},{"body":{"nativeSrc":"13978:119:21","nodeType":"YulBlock","src":"13978:119:21","statements":[{"nativeSrc":"13988:26:21","nodeType":"YulAssignment","src":"13988:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"14000:9:21","nodeType":"YulIdentifier","src":"14000:9:21"},{"kind":"number","nativeSrc":"14011:2:21","nodeType":"YulLiteral","src":"14011:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13996:3:21","nodeType":"YulIdentifier","src":"13996:3:21"},"nativeSrc":"13996:18:21","nodeType":"YulFunctionCall","src":"13996:18:21"},"variableNames":[{"name":"tail","nativeSrc":"13988:4:21","nodeType":"YulIdentifier","src":"13988:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"14030:9:21","nodeType":"YulIdentifier","src":"14030:9:21"},{"name":"value0","nativeSrc":"14041:6:21","nodeType":"YulIdentifier","src":"14041:6:21"}],"functionName":{"name":"mstore","nativeSrc":"14023:6:21","nodeType":"YulIdentifier","src":"14023:6:21"},"nativeSrc":"14023:25:21","nodeType":"YulFunctionCall","src":"14023:25:21"},"nativeSrc":"14023:25:21","nodeType":"YulExpressionStatement","src":"14023:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14068:9:21","nodeType":"YulIdentifier","src":"14068:9:21"},{"kind":"number","nativeSrc":"14079:2:21","nodeType":"YulLiteral","src":"14079:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14064:3:21","nodeType":"YulIdentifier","src":"14064:3:21"},"nativeSrc":"14064:18:21","nodeType":"YulFunctionCall","src":"14064:18:21"},{"name":"value1","nativeSrc":"14084:6:21","nodeType":"YulIdentifier","src":"14084:6:21"}],"functionName":{"name":"mstore","nativeSrc":"14057:6:21","nodeType":"YulIdentifier","src":"14057:6:21"},"nativeSrc":"14057:34:21","nodeType":"YulFunctionCall","src":"14057:34:21"},"nativeSrc":"14057:34:21","nodeType":"YulExpressionStatement","src":"14057:34:21"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"13849:248:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13939:9:21","nodeType":"YulTypedName","src":"13939:9:21","type":""},{"name":"value1","nativeSrc":"13950:6:21","nodeType":"YulTypedName","src":"13950:6:21","type":""},{"name":"value0","nativeSrc":"13958:6:21","nodeType":"YulTypedName","src":"13958:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13969:4:21","nodeType":"YulTypedName","src":"13969:4:21","type":""}],"src":"13849:248:21"},{"body":{"nativeSrc":"14134:152:21","nodeType":"YulBlock","src":"14134:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14151:1:21","nodeType":"YulLiteral","src":"14151:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"14154:77:21","nodeType":"YulLiteral","src":"14154:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"14144:6:21","nodeType":"YulIdentifier","src":"14144:6:21"},"nativeSrc":"14144:88:21","nodeType":"YulFunctionCall","src":"14144:88:21"},"nativeSrc":"14144:88:21","nodeType":"YulExpressionStatement","src":"14144:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14248:1:21","nodeType":"YulLiteral","src":"14248:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"14251:4:21","nodeType":"YulLiteral","src":"14251:4:21","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"14241:6:21","nodeType":"YulIdentifier","src":"14241:6:21"},"nativeSrc":"14241:15:21","nodeType":"YulFunctionCall","src":"14241:15:21"},"nativeSrc":"14241:15:21","nodeType":"YulExpressionStatement","src":"14241:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14272:1:21","nodeType":"YulLiteral","src":"14272:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"14275:4:21","nodeType":"YulLiteral","src":"14275:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"14265:6:21","nodeType":"YulIdentifier","src":"14265:6:21"},"nativeSrc":"14265:15:21","nodeType":"YulFunctionCall","src":"14265:15:21"},"nativeSrc":"14265:15:21","nodeType":"YulExpressionStatement","src":"14265:15:21"}]},"name":"panic_error_0x32","nativeSrc":"14102:184:21","nodeType":"YulFunctionDefinition","src":"14102:184:21"},{"body":{"nativeSrc":"14372:462:21","nodeType":"YulBlock","src":"14372:462:21","statements":[{"body":{"nativeSrc":"14405:423:21","nodeType":"YulBlock","src":"14405:423:21","statements":[{"nativeSrc":"14419:11:21","nodeType":"YulVariableDeclaration","src":"14419:11:21","value":{"kind":"number","nativeSrc":"14429:1:21","nodeType":"YulLiteral","src":"14429:1:21","type":"","value":"0"},"variables":[{"name":"_1","nativeSrc":"14423:2:21","nodeType":"YulTypedName","src":"14423:2:21","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14450:1:21","nodeType":"YulLiteral","src":"14450:1:21","type":"","value":"0"},{"name":"array","nativeSrc":"14453:5:21","nodeType":"YulIdentifier","src":"14453:5:21"}],"functionName":{"name":"mstore","nativeSrc":"14443:6:21","nodeType":"YulIdentifier","src":"14443:6:21"},"nativeSrc":"14443:16:21","nodeType":"YulFunctionCall","src":"14443:16:21"},"nativeSrc":"14443:16:21","nodeType":"YulExpressionStatement","src":"14443:16:21"},{"nativeSrc":"14472:30:21","nodeType":"YulVariableDeclaration","src":"14472:30:21","value":{"arguments":[{"kind":"number","nativeSrc":"14494:1:21","nodeType":"YulLiteral","src":"14494:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"14497:4:21","nodeType":"YulLiteral","src":"14497:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"14484:9:21","nodeType":"YulIdentifier","src":"14484:9:21"},"nativeSrc":"14484:18:21","nodeType":"YulFunctionCall","src":"14484:18:21"},"variables":[{"name":"data","nativeSrc":"14476:4:21","nodeType":"YulTypedName","src":"14476:4:21","type":""}]},{"nativeSrc":"14515:57:21","nodeType":"YulVariableDeclaration","src":"14515:57:21","value":{"arguments":[{"name":"data","nativeSrc":"14538:4:21","nodeType":"YulIdentifier","src":"14538:4:21"},{"arguments":[{"kind":"number","nativeSrc":"14548:1:21","nodeType":"YulLiteral","src":"14548:1:21","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"14555:10:21","nodeType":"YulIdentifier","src":"14555:10:21"},{"kind":"number","nativeSrc":"14567:2:21","nodeType":"YulLiteral","src":"14567:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"14551:3:21","nodeType":"YulIdentifier","src":"14551:3:21"},"nativeSrc":"14551:19:21","nodeType":"YulFunctionCall","src":"14551:19:21"}],"functionName":{"name":"shr","nativeSrc":"14544:3:21","nodeType":"YulIdentifier","src":"14544:3:21"},"nativeSrc":"14544:27:21","nodeType":"YulFunctionCall","src":"14544:27:21"}],"functionName":{"name":"add","nativeSrc":"14534:3:21","nodeType":"YulIdentifier","src":"14534:3:21"},"nativeSrc":"14534:38:21","nodeType":"YulFunctionCall","src":"14534:38:21"},"variables":[{"name":"deleteStart","nativeSrc":"14519:11:21","nodeType":"YulTypedName","src":"14519:11:21","type":""}]},{"body":{"nativeSrc":"14609:23:21","nodeType":"YulBlock","src":"14609:23:21","statements":[{"nativeSrc":"14611:19:21","nodeType":"YulAssignment","src":"14611:19:21","value":{"name":"data","nativeSrc":"14626:4:21","nodeType":"YulIdentifier","src":"14626:4:21"},"variableNames":[{"name":"deleteStart","nativeSrc":"14611:11:21","nodeType":"YulIdentifier","src":"14611:11:21"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"14591:10:21","nodeType":"YulIdentifier","src":"14591:10:21"},{"kind":"number","nativeSrc":"14603:4:21","nodeType":"YulLiteral","src":"14603:4:21","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"14588:2:21","nodeType":"YulIdentifier","src":"14588:2:21"},"nativeSrc":"14588:20:21","nodeType":"YulFunctionCall","src":"14588:20:21"},"nativeSrc":"14585:47:21","nodeType":"YulIf","src":"14585:47:21"},{"nativeSrc":"14645:41:21","nodeType":"YulVariableDeclaration","src":"14645:41:21","value":{"arguments":[{"name":"data","nativeSrc":"14659:4:21","nodeType":"YulIdentifier","src":"14659:4:21"},{"arguments":[{"kind":"number","nativeSrc":"14669:1:21","nodeType":"YulLiteral","src":"14669:1:21","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"14676:3:21","nodeType":"YulIdentifier","src":"14676:3:21"},{"kind":"number","nativeSrc":"14681:2:21","nodeType":"YulLiteral","src":"14681:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"14672:3:21","nodeType":"YulIdentifier","src":"14672:3:21"},"nativeSrc":"14672:12:21","nodeType":"YulFunctionCall","src":"14672:12:21"}],"functionName":{"name":"shr","nativeSrc":"14665:3:21","nodeType":"YulIdentifier","src":"14665:3:21"},"nativeSrc":"14665:20:21","nodeType":"YulFunctionCall","src":"14665:20:21"}],"functionName":{"name":"add","nativeSrc":"14655:3:21","nodeType":"YulIdentifier","src":"14655:3:21"},"nativeSrc":"14655:31:21","nodeType":"YulFunctionCall","src":"14655:31:21"},"variables":[{"name":"_2","nativeSrc":"14649:2:21","nodeType":"YulTypedName","src":"14649:2:21","type":""}]},{"nativeSrc":"14699:24:21","nodeType":"YulVariableDeclaration","src":"14699:24:21","value":{"name":"deleteStart","nativeSrc":"14712:11:21","nodeType":"YulIdentifier","src":"14712:11:21"},"variables":[{"name":"start","nativeSrc":"14703:5:21","nodeType":"YulTypedName","src":"14703:5:21","type":""}]},{"body":{"nativeSrc":"14797:21:21","nodeType":"YulBlock","src":"14797:21:21","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"14806:5:21","nodeType":"YulIdentifier","src":"14806:5:21"},{"name":"_1","nativeSrc":"14813:2:21","nodeType":"YulIdentifier","src":"14813:2:21"}],"functionName":{"name":"sstore","nativeSrc":"14799:6:21","nodeType":"YulIdentifier","src":"14799:6:21"},"nativeSrc":"14799:17:21","nodeType":"YulFunctionCall","src":"14799:17:21"},"nativeSrc":"14799:17:21","nodeType":"YulExpressionStatement","src":"14799:17:21"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"14747:5:21","nodeType":"YulIdentifier","src":"14747:5:21"},{"name":"_2","nativeSrc":"14754:2:21","nodeType":"YulIdentifier","src":"14754:2:21"}],"functionName":{"name":"lt","nativeSrc":"14744:2:21","nodeType":"YulIdentifier","src":"14744:2:21"},"nativeSrc":"14744:13:21","nodeType":"YulFunctionCall","src":"14744:13:21"},"nativeSrc":"14736:82:21","nodeType":"YulForLoop","post":{"nativeSrc":"14758:26:21","nodeType":"YulBlock","src":"14758:26:21","statements":[{"nativeSrc":"14760:22:21","nodeType":"YulAssignment","src":"14760:22:21","value":{"arguments":[{"name":"start","nativeSrc":"14773:5:21","nodeType":"YulIdentifier","src":"14773:5:21"},{"kind":"number","nativeSrc":"14780:1:21","nodeType":"YulLiteral","src":"14780:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"14769:3:21","nodeType":"YulIdentifier","src":"14769:3:21"},"nativeSrc":"14769:13:21","nodeType":"YulFunctionCall","src":"14769:13:21"},"variableNames":[{"name":"start","nativeSrc":"14760:5:21","nodeType":"YulIdentifier","src":"14760:5:21"}]}]},"pre":{"nativeSrc":"14740:3:21","nodeType":"YulBlock","src":"14740:3:21","statements":[]},"src":"14736:82:21"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"14388:3:21","nodeType":"YulIdentifier","src":"14388:3:21"},{"kind":"number","nativeSrc":"14393:2:21","nodeType":"YulLiteral","src":"14393:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"14385:2:21","nodeType":"YulIdentifier","src":"14385:2:21"},"nativeSrc":"14385:11:21","nodeType":"YulFunctionCall","src":"14385:11:21"},"nativeSrc":"14382:446:21","nodeType":"YulIf","src":"14382:446:21"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"14291:543:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"14344:5:21","nodeType":"YulTypedName","src":"14344:5:21","type":""},{"name":"len","nativeSrc":"14351:3:21","nodeType":"YulTypedName","src":"14351:3:21","type":""},{"name":"startIndex","nativeSrc":"14356:10:21","nodeType":"YulTypedName","src":"14356:10:21","type":""}],"src":"14291:543:21"},{"body":{"nativeSrc":"14924:141:21","nodeType":"YulBlock","src":"14924:141:21","statements":[{"nativeSrc":"14934:125:21","nodeType":"YulAssignment","src":"14934:125:21","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"14949:4:21","nodeType":"YulIdentifier","src":"14949:4:21"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"14967:1:21","nodeType":"YulLiteral","src":"14967:1:21","type":"","value":"3"},{"name":"len","nativeSrc":"14970:3:21","nodeType":"YulIdentifier","src":"14970:3:21"}],"functionName":{"name":"shl","nativeSrc":"14963:3:21","nodeType":"YulIdentifier","src":"14963:3:21"},"nativeSrc":"14963:11:21","nodeType":"YulFunctionCall","src":"14963:11:21"},{"kind":"number","nativeSrc":"14976:66:21","nodeType":"YulLiteral","src":"14976:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shr","nativeSrc":"14959:3:21","nodeType":"YulIdentifier","src":"14959:3:21"},"nativeSrc":"14959:84:21","nodeType":"YulFunctionCall","src":"14959:84:21"}],"functionName":{"name":"not","nativeSrc":"14955:3:21","nodeType":"YulIdentifier","src":"14955:3:21"},"nativeSrc":"14955:89:21","nodeType":"YulFunctionCall","src":"14955:89:21"}],"functionName":{"name":"and","nativeSrc":"14945:3:21","nodeType":"YulIdentifier","src":"14945:3:21"},"nativeSrc":"14945:100:21","nodeType":"YulFunctionCall","src":"14945:100:21"},{"arguments":[{"kind":"number","nativeSrc":"15051:1:21","nodeType":"YulLiteral","src":"15051:1:21","type":"","value":"1"},{"name":"len","nativeSrc":"15054:3:21","nodeType":"YulIdentifier","src":"15054:3:21"}],"functionName":{"name":"shl","nativeSrc":"15047:3:21","nodeType":"YulIdentifier","src":"15047:3:21"},"nativeSrc":"15047:11:21","nodeType":"YulFunctionCall","src":"15047:11:21"}],"functionName":{"name":"or","nativeSrc":"14942:2:21","nodeType":"YulIdentifier","src":"14942:2:21"},"nativeSrc":"14942:117:21","nodeType":"YulFunctionCall","src":"14942:117:21"},"variableNames":[{"name":"used","nativeSrc":"14934:4:21","nodeType":"YulIdentifier","src":"14934:4:21"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"14839:226:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"14901:4:21","nodeType":"YulTypedName","src":"14901:4:21","type":""},{"name":"len","nativeSrc":"14907:3:21","nodeType":"YulTypedName","src":"14907:3:21","type":""}],"returnVariables":[{"name":"used","nativeSrc":"14915:4:21","nodeType":"YulTypedName","src":"14915:4:21","type":""}],"src":"14839:226:21"},{"body":{"nativeSrc":"15166:1368:21","nodeType":"YulBlock","src":"15166:1368:21","statements":[{"nativeSrc":"15176:24:21","nodeType":"YulVariableDeclaration","src":"15176:24:21","value":{"arguments":[{"name":"src","nativeSrc":"15196:3:21","nodeType":"YulIdentifier","src":"15196:3:21"}],"functionName":{"name":"mload","nativeSrc":"15190:5:21","nodeType":"YulIdentifier","src":"15190:5:21"},"nativeSrc":"15190:10:21","nodeType":"YulFunctionCall","src":"15190:10:21"},"variables":[{"name":"newLen","nativeSrc":"15180:6:21","nodeType":"YulTypedName","src":"15180:6:21","type":""}]},{"body":{"nativeSrc":"15243:22:21","nodeType":"YulBlock","src":"15243:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"15245:16:21","nodeType":"YulIdentifier","src":"15245:16:21"},"nativeSrc":"15245:18:21","nodeType":"YulFunctionCall","src":"15245:18:21"},"nativeSrc":"15245:18:21","nodeType":"YulExpressionStatement","src":"15245:18:21"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"15215:6:21","nodeType":"YulIdentifier","src":"15215:6:21"},{"kind":"number","nativeSrc":"15223:18:21","nodeType":"YulLiteral","src":"15223:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"15212:2:21","nodeType":"YulIdentifier","src":"15212:2:21"},"nativeSrc":"15212:30:21","nodeType":"YulFunctionCall","src":"15212:30:21"},"nativeSrc":"15209:56:21","nodeType":"YulIf","src":"15209:56:21"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"15318:4:21","nodeType":"YulIdentifier","src":"15318:4:21"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"15356:4:21","nodeType":"YulIdentifier","src":"15356:4:21"}],"functionName":{"name":"sload","nativeSrc":"15350:5:21","nodeType":"YulIdentifier","src":"15350:5:21"},"nativeSrc":"15350:11:21","nodeType":"YulFunctionCall","src":"15350:11:21"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"15324:25:21","nodeType":"YulIdentifier","src":"15324:25:21"},"nativeSrc":"15324:38:21","nodeType":"YulFunctionCall","src":"15324:38:21"},{"name":"newLen","nativeSrc":"15364:6:21","nodeType":"YulIdentifier","src":"15364:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"15274:43:21","nodeType":"YulIdentifier","src":"15274:43:21"},"nativeSrc":"15274:97:21","nodeType":"YulFunctionCall","src":"15274:97:21"},"nativeSrc":"15274:97:21","nodeType":"YulExpressionStatement","src":"15274:97:21"},{"nativeSrc":"15380:18:21","nodeType":"YulVariableDeclaration","src":"15380:18:21","value":{"kind":"number","nativeSrc":"15397:1:21","nodeType":"YulLiteral","src":"15397:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"15384:9:21","nodeType":"YulTypedName","src":"15384:9:21","type":""}]},{"nativeSrc":"15407:23:21","nodeType":"YulVariableDeclaration","src":"15407:23:21","value":{"kind":"number","nativeSrc":"15426:4:21","nodeType":"YulLiteral","src":"15426:4:21","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nativeSrc":"15411:11:21","nodeType":"YulTypedName","src":"15411:11:21","type":""}]},{"nativeSrc":"15439:17:21","nodeType":"YulAssignment","src":"15439:17:21","value":{"kind":"number","nativeSrc":"15452:4:21","nodeType":"YulLiteral","src":"15452:4:21","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"15439:9:21","nodeType":"YulIdentifier","src":"15439:9:21"}]},{"cases":[{"body":{"nativeSrc":"15502:775:21","nodeType":"YulBlock","src":"15502:775:21","statements":[{"nativeSrc":"15516:94:21","nodeType":"YulVariableDeclaration","src":"15516:94:21","value":{"arguments":[{"name":"newLen","nativeSrc":"15535:6:21","nodeType":"YulIdentifier","src":"15535:6:21"},{"kind":"number","nativeSrc":"15543:66:21","nodeType":"YulLiteral","src":"15543:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nativeSrc":"15531:3:21","nodeType":"YulIdentifier","src":"15531:3:21"},"nativeSrc":"15531:79:21","nodeType":"YulFunctionCall","src":"15531:79:21"},"variables":[{"name":"loopEnd","nativeSrc":"15520:7:21","nodeType":"YulTypedName","src":"15520:7:21","type":""}]},{"nativeSrc":"15623:49:21","nodeType":"YulVariableDeclaration","src":"15623:49:21","value":{"arguments":[{"name":"slot","nativeSrc":"15667:4:21","nodeType":"YulIdentifier","src":"15667:4:21"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"15637:29:21","nodeType":"YulIdentifier","src":"15637:29:21"},"nativeSrc":"15637:35:21","nodeType":"YulFunctionCall","src":"15637:35:21"},"variables":[{"name":"dstPtr","nativeSrc":"15627:6:21","nodeType":"YulTypedName","src":"15627:6:21","type":""}]},{"nativeSrc":"15685:10:21","nodeType":"YulVariableDeclaration","src":"15685:10:21","value":{"kind":"number","nativeSrc":"15694:1:21","nodeType":"YulLiteral","src":"15694:1:21","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"15689:1:21","nodeType":"YulTypedName","src":"15689:1:21","type":""}]},{"body":{"nativeSrc":"15772:172:21","nodeType":"YulBlock","src":"15772:172:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"15797:6:21","nodeType":"YulIdentifier","src":"15797:6:21"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"15815:3:21","nodeType":"YulIdentifier","src":"15815:3:21"},{"name":"srcOffset","nativeSrc":"15820:9:21","nodeType":"YulIdentifier","src":"15820:9:21"}],"functionName":{"name":"add","nativeSrc":"15811:3:21","nodeType":"YulIdentifier","src":"15811:3:21"},"nativeSrc":"15811:19:21","nodeType":"YulFunctionCall","src":"15811:19:21"}],"functionName":{"name":"mload","nativeSrc":"15805:5:21","nodeType":"YulIdentifier","src":"15805:5:21"},"nativeSrc":"15805:26:21","nodeType":"YulFunctionCall","src":"15805:26:21"}],"functionName":{"name":"sstore","nativeSrc":"15790:6:21","nodeType":"YulIdentifier","src":"15790:6:21"},"nativeSrc":"15790:42:21","nodeType":"YulFunctionCall","src":"15790:42:21"},"nativeSrc":"15790:42:21","nodeType":"YulExpressionStatement","src":"15790:42:21"},{"nativeSrc":"15849:24:21","nodeType":"YulAssignment","src":"15849:24:21","value":{"arguments":[{"name":"dstPtr","nativeSrc":"15863:6:21","nodeType":"YulIdentifier","src":"15863:6:21"},{"kind":"number","nativeSrc":"15871:1:21","nodeType":"YulLiteral","src":"15871:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"15859:3:21","nodeType":"YulIdentifier","src":"15859:3:21"},"nativeSrc":"15859:14:21","nodeType":"YulFunctionCall","src":"15859:14:21"},"variableNames":[{"name":"dstPtr","nativeSrc":"15849:6:21","nodeType":"YulIdentifier","src":"15849:6:21"}]},{"nativeSrc":"15890:40:21","nodeType":"YulAssignment","src":"15890:40:21","value":{"arguments":[{"name":"srcOffset","nativeSrc":"15907:9:21","nodeType":"YulIdentifier","src":"15907:9:21"},{"name":"srcOffset_1","nativeSrc":"15918:11:21","nodeType":"YulIdentifier","src":"15918:11:21"}],"functionName":{"name":"add","nativeSrc":"15903:3:21","nodeType":"YulIdentifier","src":"15903:3:21"},"nativeSrc":"15903:27:21","nodeType":"YulFunctionCall","src":"15903:27:21"},"variableNames":[{"name":"srcOffset","nativeSrc":"15890:9:21","nodeType":"YulIdentifier","src":"15890:9:21"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"15719:1:21","nodeType":"YulIdentifier","src":"15719:1:21"},{"name":"loopEnd","nativeSrc":"15722:7:21","nodeType":"YulIdentifier","src":"15722:7:21"}],"functionName":{"name":"lt","nativeSrc":"15716:2:21","nodeType":"YulIdentifier","src":"15716:2:21"},"nativeSrc":"15716:14:21","nodeType":"YulFunctionCall","src":"15716:14:21"},"nativeSrc":"15708:236:21","nodeType":"YulForLoop","post":{"nativeSrc":"15731:28:21","nodeType":"YulBlock","src":"15731:28:21","statements":[{"nativeSrc":"15733:24:21","nodeType":"YulAssignment","src":"15733:24:21","value":{"arguments":[{"name":"i","nativeSrc":"15742:1:21","nodeType":"YulIdentifier","src":"15742:1:21"},{"name":"srcOffset_1","nativeSrc":"15745:11:21","nodeType":"YulIdentifier","src":"15745:11:21"}],"functionName":{"name":"add","nativeSrc":"15738:3:21","nodeType":"YulIdentifier","src":"15738:3:21"},"nativeSrc":"15738:19:21","nodeType":"YulFunctionCall","src":"15738:19:21"},"variableNames":[{"name":"i","nativeSrc":"15733:1:21","nodeType":"YulIdentifier","src":"15733:1:21"}]}]},"pre":{"nativeSrc":"15712:3:21","nodeType":"YulBlock","src":"15712:3:21","statements":[]},"src":"15708:236:21"},{"body":{"nativeSrc":"15992:226:21","nodeType":"YulBlock","src":"15992:226:21","statements":[{"nativeSrc":"16010:43:21","nodeType":"YulVariableDeclaration","src":"16010:43:21","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"16037:3:21","nodeType":"YulIdentifier","src":"16037:3:21"},{"name":"srcOffset","nativeSrc":"16042:9:21","nodeType":"YulIdentifier","src":"16042:9:21"}],"functionName":{"name":"add","nativeSrc":"16033:3:21","nodeType":"YulIdentifier","src":"16033:3:21"},"nativeSrc":"16033:19:21","nodeType":"YulFunctionCall","src":"16033:19:21"}],"functionName":{"name":"mload","nativeSrc":"16027:5:21","nodeType":"YulIdentifier","src":"16027:5:21"},"nativeSrc":"16027:26:21","nodeType":"YulFunctionCall","src":"16027:26:21"},"variables":[{"name":"lastValue","nativeSrc":"16014:9:21","nodeType":"YulTypedName","src":"16014:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"16077:6:21","nodeType":"YulIdentifier","src":"16077:6:21"},{"arguments":[{"name":"lastValue","nativeSrc":"16089:9:21","nodeType":"YulIdentifier","src":"16089:9:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"16116:1:21","nodeType":"YulLiteral","src":"16116:1:21","type":"","value":"3"},{"name":"newLen","nativeSrc":"16119:6:21","nodeType":"YulIdentifier","src":"16119:6:21"}],"functionName":{"name":"shl","nativeSrc":"16112:3:21","nodeType":"YulIdentifier","src":"16112:3:21"},"nativeSrc":"16112:14:21","nodeType":"YulFunctionCall","src":"16112:14:21"},{"kind":"number","nativeSrc":"16128:3:21","nodeType":"YulLiteral","src":"16128:3:21","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"16108:3:21","nodeType":"YulIdentifier","src":"16108:3:21"},"nativeSrc":"16108:24:21","nodeType":"YulFunctionCall","src":"16108:24:21"},{"kind":"number","nativeSrc":"16134:66:21","nodeType":"YulLiteral","src":"16134:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shr","nativeSrc":"16104:3:21","nodeType":"YulIdentifier","src":"16104:3:21"},"nativeSrc":"16104:97:21","nodeType":"YulFunctionCall","src":"16104:97:21"}],"functionName":{"name":"not","nativeSrc":"16100:3:21","nodeType":"YulIdentifier","src":"16100:3:21"},"nativeSrc":"16100:102:21","nodeType":"YulFunctionCall","src":"16100:102:21"}],"functionName":{"name":"and","nativeSrc":"16085:3:21","nodeType":"YulIdentifier","src":"16085:3:21"},"nativeSrc":"16085:118:21","nodeType":"YulFunctionCall","src":"16085:118:21"}],"functionName":{"name":"sstore","nativeSrc":"16070:6:21","nodeType":"YulIdentifier","src":"16070:6:21"},"nativeSrc":"16070:134:21","nodeType":"YulFunctionCall","src":"16070:134:21"},"nativeSrc":"16070:134:21","nodeType":"YulExpressionStatement","src":"16070:134:21"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"15963:7:21","nodeType":"YulIdentifier","src":"15963:7:21"},{"name":"newLen","nativeSrc":"15972:6:21","nodeType":"YulIdentifier","src":"15972:6:21"}],"functionName":{"name":"lt","nativeSrc":"15960:2:21","nodeType":"YulIdentifier","src":"15960:2:21"},"nativeSrc":"15960:19:21","nodeType":"YulFunctionCall","src":"15960:19:21"},"nativeSrc":"15957:261:21","nodeType":"YulIf","src":"15957:261:21"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"16238:4:21","nodeType":"YulIdentifier","src":"16238:4:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"16252:1:21","nodeType":"YulLiteral","src":"16252:1:21","type":"","value":"1"},{"name":"newLen","nativeSrc":"16255:6:21","nodeType":"YulIdentifier","src":"16255:6:21"}],"functionName":{"name":"shl","nativeSrc":"16248:3:21","nodeType":"YulIdentifier","src":"16248:3:21"},"nativeSrc":"16248:14:21","nodeType":"YulFunctionCall","src":"16248:14:21"},{"kind":"number","nativeSrc":"16264:1:21","nodeType":"YulLiteral","src":"16264:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"16244:3:21","nodeType":"YulIdentifier","src":"16244:3:21"},"nativeSrc":"16244:22:21","nodeType":"YulFunctionCall","src":"16244:22:21"}],"functionName":{"name":"sstore","nativeSrc":"16231:6:21","nodeType":"YulIdentifier","src":"16231:6:21"},"nativeSrc":"16231:36:21","nodeType":"YulFunctionCall","src":"16231:36:21"},"nativeSrc":"16231:36:21","nodeType":"YulExpressionStatement","src":"16231:36:21"}]},"nativeSrc":"15495:782:21","nodeType":"YulCase","src":"15495:782:21","value":{"kind":"number","nativeSrc":"15500:1:21","nodeType":"YulLiteral","src":"15500:1:21","type":"","value":"1"}},{"body":{"nativeSrc":"16294:234:21","nodeType":"YulBlock","src":"16294:234:21","statements":[{"nativeSrc":"16308:14:21","nodeType":"YulVariableDeclaration","src":"16308:14:21","value":{"kind":"number","nativeSrc":"16321:1:21","nodeType":"YulLiteral","src":"16321:1:21","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"16312:5:21","nodeType":"YulTypedName","src":"16312:5:21","type":""}]},{"body":{"nativeSrc":"16357:67:21","nodeType":"YulBlock","src":"16357:67:21","statements":[{"nativeSrc":"16375:35:21","nodeType":"YulAssignment","src":"16375:35:21","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"16394:3:21","nodeType":"YulIdentifier","src":"16394:3:21"},{"name":"srcOffset","nativeSrc":"16399:9:21","nodeType":"YulIdentifier","src":"16399:9:21"}],"functionName":{"name":"add","nativeSrc":"16390:3:21","nodeType":"YulIdentifier","src":"16390:3:21"},"nativeSrc":"16390:19:21","nodeType":"YulFunctionCall","src":"16390:19:21"}],"functionName":{"name":"mload","nativeSrc":"16384:5:21","nodeType":"YulIdentifier","src":"16384:5:21"},"nativeSrc":"16384:26:21","nodeType":"YulFunctionCall","src":"16384:26:21"},"variableNames":[{"name":"value","nativeSrc":"16375:5:21","nodeType":"YulIdentifier","src":"16375:5:21"}]}]},"condition":{"name":"newLen","nativeSrc":"16338:6:21","nodeType":"YulIdentifier","src":"16338:6:21"},"nativeSrc":"16335:89:21","nodeType":"YulIf","src":"16335:89:21"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"16444:4:21","nodeType":"YulIdentifier","src":"16444:4:21"},{"arguments":[{"name":"value","nativeSrc":"16503:5:21","nodeType":"YulIdentifier","src":"16503:5:21"},{"name":"newLen","nativeSrc":"16510:6:21","nodeType":"YulIdentifier","src":"16510:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"16450:52:21","nodeType":"YulIdentifier","src":"16450:52:21"},"nativeSrc":"16450:67:21","nodeType":"YulFunctionCall","src":"16450:67:21"}],"functionName":{"name":"sstore","nativeSrc":"16437:6:21","nodeType":"YulIdentifier","src":"16437:6:21"},"nativeSrc":"16437:81:21","nodeType":"YulFunctionCall","src":"16437:81:21"},"nativeSrc":"16437:81:21","nodeType":"YulExpressionStatement","src":"16437:81:21"}]},"nativeSrc":"16286:242:21","nodeType":"YulCase","src":"16286:242:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"15475:6:21","nodeType":"YulIdentifier","src":"15475:6:21"},{"kind":"number","nativeSrc":"15483:2:21","nodeType":"YulLiteral","src":"15483:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"15472:2:21","nodeType":"YulIdentifier","src":"15472:2:21"},"nativeSrc":"15472:14:21","nodeType":"YulFunctionCall","src":"15472:14:21"},"nativeSrc":"15465:1063:21","nodeType":"YulSwitch","src":"15465:1063:21"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"15070:1464:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"15151:4:21","nodeType":"YulTypedName","src":"15151:4:21","type":""},{"name":"src","nativeSrc":"15157:3:21","nodeType":"YulTypedName","src":"15157:3:21","type":""}],"src":"15070:1464:21"},{"body":{"nativeSrc":"16571:152:21","nodeType":"YulBlock","src":"16571:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16588:1:21","nodeType":"YulLiteral","src":"16588:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"16591:77:21","nodeType":"YulLiteral","src":"16591:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"16581:6:21","nodeType":"YulIdentifier","src":"16581:6:21"},"nativeSrc":"16581:88:21","nodeType":"YulFunctionCall","src":"16581:88:21"},"nativeSrc":"16581:88:21","nodeType":"YulExpressionStatement","src":"16581:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16685:1:21","nodeType":"YulLiteral","src":"16685:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"16688:4:21","nodeType":"YulLiteral","src":"16688:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"16678:6:21","nodeType":"YulIdentifier","src":"16678:6:21"},"nativeSrc":"16678:15:21","nodeType":"YulFunctionCall","src":"16678:15:21"},"nativeSrc":"16678:15:21","nodeType":"YulExpressionStatement","src":"16678:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16709:1:21","nodeType":"YulLiteral","src":"16709:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"16712:4:21","nodeType":"YulLiteral","src":"16712:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"16702:6:21","nodeType":"YulIdentifier","src":"16702:6:21"},"nativeSrc":"16702:15:21","nodeType":"YulFunctionCall","src":"16702:15:21"},"nativeSrc":"16702:15:21","nodeType":"YulExpressionStatement","src":"16702:15:21"}]},"name":"panic_error_0x11","nativeSrc":"16539:184:21","nodeType":"YulFunctionDefinition","src":"16539:184:21"},{"body":{"nativeSrc":"16780:116:21","nodeType":"YulBlock","src":"16780:116:21","statements":[{"nativeSrc":"16790:20:21","nodeType":"YulAssignment","src":"16790:20:21","value":{"arguments":[{"name":"x","nativeSrc":"16805:1:21","nodeType":"YulIdentifier","src":"16805:1:21"},{"name":"y","nativeSrc":"16808:1:21","nodeType":"YulIdentifier","src":"16808:1:21"}],"functionName":{"name":"mul","nativeSrc":"16801:3:21","nodeType":"YulIdentifier","src":"16801:3:21"},"nativeSrc":"16801:9:21","nodeType":"YulFunctionCall","src":"16801:9:21"},"variableNames":[{"name":"product","nativeSrc":"16790:7:21","nodeType":"YulIdentifier","src":"16790:7:21"}]},{"body":{"nativeSrc":"16868:22:21","nodeType":"YulBlock","src":"16868:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"16870:16:21","nodeType":"YulIdentifier","src":"16870:16:21"},"nativeSrc":"16870:18:21","nodeType":"YulFunctionCall","src":"16870:18:21"},"nativeSrc":"16870:18:21","nodeType":"YulExpressionStatement","src":"16870:18:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"16839:1:21","nodeType":"YulIdentifier","src":"16839:1:21"}],"functionName":{"name":"iszero","nativeSrc":"16832:6:21","nodeType":"YulIdentifier","src":"16832:6:21"},"nativeSrc":"16832:9:21","nodeType":"YulFunctionCall","src":"16832:9:21"},{"arguments":[{"name":"y","nativeSrc":"16846:1:21","nodeType":"YulIdentifier","src":"16846:1:21"},{"arguments":[{"name":"product","nativeSrc":"16853:7:21","nodeType":"YulIdentifier","src":"16853:7:21"},{"name":"x","nativeSrc":"16862:1:21","nodeType":"YulIdentifier","src":"16862:1:21"}],"functionName":{"name":"div","nativeSrc":"16849:3:21","nodeType":"YulIdentifier","src":"16849:3:21"},"nativeSrc":"16849:15:21","nodeType":"YulFunctionCall","src":"16849:15:21"}],"functionName":{"name":"eq","nativeSrc":"16843:2:21","nodeType":"YulIdentifier","src":"16843:2:21"},"nativeSrc":"16843:22:21","nodeType":"YulFunctionCall","src":"16843:22:21"}],"functionName":{"name":"or","nativeSrc":"16829:2:21","nodeType":"YulIdentifier","src":"16829:2:21"},"nativeSrc":"16829:37:21","nodeType":"YulFunctionCall","src":"16829:37:21"}],"functionName":{"name":"iszero","nativeSrc":"16822:6:21","nodeType":"YulIdentifier","src":"16822:6:21"},"nativeSrc":"16822:45:21","nodeType":"YulFunctionCall","src":"16822:45:21"},"nativeSrc":"16819:71:21","nodeType":"YulIf","src":"16819:71:21"}]},"name":"checked_mul_t_uint256","nativeSrc":"16728:168:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"16759:1:21","nodeType":"YulTypedName","src":"16759:1:21","type":""},{"name":"y","nativeSrc":"16762:1:21","nodeType":"YulTypedName","src":"16762:1:21","type":""}],"returnVariables":[{"name":"product","nativeSrc":"16768:7:21","nodeType":"YulTypedName","src":"16768:7:21","type":""}],"src":"16728:168:21"},{"body":{"nativeSrc":"17075:171:21","nodeType":"YulBlock","src":"17075:171:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"17092:9:21","nodeType":"YulIdentifier","src":"17092:9:21"},{"kind":"number","nativeSrc":"17103:2:21","nodeType":"YulLiteral","src":"17103:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"17085:6:21","nodeType":"YulIdentifier","src":"17085:6:21"},"nativeSrc":"17085:21:21","nodeType":"YulFunctionCall","src":"17085:21:21"},"nativeSrc":"17085:21:21","nodeType":"YulExpressionStatement","src":"17085:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17126:9:21","nodeType":"YulIdentifier","src":"17126:9:21"},{"kind":"number","nativeSrc":"17137:2:21","nodeType":"YulLiteral","src":"17137:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17122:3:21","nodeType":"YulIdentifier","src":"17122:3:21"},"nativeSrc":"17122:18:21","nodeType":"YulFunctionCall","src":"17122:18:21"},{"kind":"number","nativeSrc":"17142:2:21","nodeType":"YulLiteral","src":"17142:2:21","type":"","value":"21"}],"functionName":{"name":"mstore","nativeSrc":"17115:6:21","nodeType":"YulIdentifier","src":"17115:6:21"},"nativeSrc":"17115:30:21","nodeType":"YulFunctionCall","src":"17115:30:21"},"nativeSrc":"17115:30:21","nodeType":"YulExpressionStatement","src":"17115:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17165:9:21","nodeType":"YulIdentifier","src":"17165:9:21"},{"kind":"number","nativeSrc":"17176:2:21","nodeType":"YulLiteral","src":"17176:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17161:3:21","nodeType":"YulIdentifier","src":"17161:3:21"},"nativeSrc":"17161:18:21","nodeType":"YulFunctionCall","src":"17161:18:21"},{"hexValue":"496e73756666696369656e74204554482073656e74","kind":"string","nativeSrc":"17181:23:21","nodeType":"YulLiteral","src":"17181:23:21","type":"","value":"Insufficient ETH sent"}],"functionName":{"name":"mstore","nativeSrc":"17154:6:21","nodeType":"YulIdentifier","src":"17154:6:21"},"nativeSrc":"17154:51:21","nodeType":"YulFunctionCall","src":"17154:51:21"},"nativeSrc":"17154:51:21","nodeType":"YulExpressionStatement","src":"17154:51:21"},{"nativeSrc":"17214:26:21","nodeType":"YulAssignment","src":"17214:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"17226:9:21","nodeType":"YulIdentifier","src":"17226:9:21"},{"kind":"number","nativeSrc":"17237:2:21","nodeType":"YulLiteral","src":"17237:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"17222:3:21","nodeType":"YulIdentifier","src":"17222:3:21"},"nativeSrc":"17222:18:21","nodeType":"YulFunctionCall","src":"17222:18:21"},"variableNames":[{"name":"tail","nativeSrc":"17214:4:21","nodeType":"YulIdentifier","src":"17214:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"16901:345:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17052:9:21","nodeType":"YulTypedName","src":"17052:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17066:4:21","nodeType":"YulTypedName","src":"17066:4:21","type":""}],"src":"16901:345:21"},{"body":{"nativeSrc":"17299:77:21","nodeType":"YulBlock","src":"17299:77:21","statements":[{"nativeSrc":"17309:16:21","nodeType":"YulAssignment","src":"17309:16:21","value":{"arguments":[{"name":"x","nativeSrc":"17320:1:21","nodeType":"YulIdentifier","src":"17320:1:21"},{"name":"y","nativeSrc":"17323:1:21","nodeType":"YulIdentifier","src":"17323:1:21"}],"functionName":{"name":"add","nativeSrc":"17316:3:21","nodeType":"YulIdentifier","src":"17316:3:21"},"nativeSrc":"17316:9:21","nodeType":"YulFunctionCall","src":"17316:9:21"},"variableNames":[{"name":"sum","nativeSrc":"17309:3:21","nodeType":"YulIdentifier","src":"17309:3:21"}]},{"body":{"nativeSrc":"17348:22:21","nodeType":"YulBlock","src":"17348:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"17350:16:21","nodeType":"YulIdentifier","src":"17350:16:21"},"nativeSrc":"17350:18:21","nodeType":"YulFunctionCall","src":"17350:18:21"},"nativeSrc":"17350:18:21","nodeType":"YulExpressionStatement","src":"17350:18:21"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"17340:1:21","nodeType":"YulIdentifier","src":"17340:1:21"},{"name":"sum","nativeSrc":"17343:3:21","nodeType":"YulIdentifier","src":"17343:3:21"}],"functionName":{"name":"gt","nativeSrc":"17337:2:21","nodeType":"YulIdentifier","src":"17337:2:21"},"nativeSrc":"17337:10:21","nodeType":"YulFunctionCall","src":"17337:10:21"},"nativeSrc":"17334:36:21","nodeType":"YulIf","src":"17334:36:21"}]},"name":"checked_add_t_uint256","nativeSrc":"17251:125:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"17282:1:21","nodeType":"YulTypedName","src":"17282:1:21","type":""},{"name":"y","nativeSrc":"17285:1:21","nodeType":"YulTypedName","src":"17285:1:21","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"17291:3:21","nodeType":"YulTypedName","src":"17291:3:21","type":""}],"src":"17251:125:21"},{"body":{"nativeSrc":"17555:170:21","nodeType":"YulBlock","src":"17555:170:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"17572:9:21","nodeType":"YulIdentifier","src":"17572:9:21"},{"kind":"number","nativeSrc":"17583:2:21","nodeType":"YulLiteral","src":"17583:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"17565:6:21","nodeType":"YulIdentifier","src":"17565:6:21"},"nativeSrc":"17565:21:21","nodeType":"YulFunctionCall","src":"17565:21:21"},"nativeSrc":"17565:21:21","nodeType":"YulExpressionStatement","src":"17565:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17606:9:21","nodeType":"YulIdentifier","src":"17606:9:21"},{"kind":"number","nativeSrc":"17617:2:21","nodeType":"YulLiteral","src":"17617:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17602:3:21","nodeType":"YulIdentifier","src":"17602:3:21"},"nativeSrc":"17602:18:21","nodeType":"YulFunctionCall","src":"17602:18:21"},{"kind":"number","nativeSrc":"17622:2:21","nodeType":"YulLiteral","src":"17622:2:21","type":"","value":"20"}],"functionName":{"name":"mstore","nativeSrc":"17595:6:21","nodeType":"YulIdentifier","src":"17595:6:21"},"nativeSrc":"17595:30:21","nodeType":"YulFunctionCall","src":"17595:30:21"},"nativeSrc":"17595:30:21","nodeType":"YulExpressionStatement","src":"17595:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17645:9:21","nodeType":"YulIdentifier","src":"17645:9:21"},{"kind":"number","nativeSrc":"17656:2:21","nodeType":"YulLiteral","src":"17656:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17641:3:21","nodeType":"YulIdentifier","src":"17641:3:21"},"nativeSrc":"17641:18:21","nodeType":"YulFunctionCall","src":"17641:18:21"},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","kind":"string","nativeSrc":"17661:22:21","nodeType":"YulLiteral","src":"17661:22:21","type":"","value":"Token does not exist"}],"functionName":{"name":"mstore","nativeSrc":"17634:6:21","nodeType":"YulIdentifier","src":"17634:6:21"},"nativeSrc":"17634:50:21","nodeType":"YulFunctionCall","src":"17634:50:21"},"nativeSrc":"17634:50:21","nodeType":"YulExpressionStatement","src":"17634:50:21"},{"nativeSrc":"17693:26:21","nodeType":"YulAssignment","src":"17693:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"17705:9:21","nodeType":"YulIdentifier","src":"17705:9:21"},{"kind":"number","nativeSrc":"17716:2:21","nodeType":"YulLiteral","src":"17716:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"17701:3:21","nodeType":"YulIdentifier","src":"17701:3:21"},"nativeSrc":"17701:18:21","nodeType":"YulFunctionCall","src":"17701:18:21"},"variableNames":[{"name":"tail","nativeSrc":"17693:4:21","nodeType":"YulIdentifier","src":"17693:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"17381:344:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17532:9:21","nodeType":"YulTypedName","src":"17532:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17546:4:21","nodeType":"YulTypedName","src":"17546:4:21","type":""}],"src":"17381:344:21"},{"body":{"nativeSrc":"17904:165:21","nodeType":"YulBlock","src":"17904:165:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"17921:9:21","nodeType":"YulIdentifier","src":"17921:9:21"},{"kind":"number","nativeSrc":"17932:2:21","nodeType":"YulLiteral","src":"17932:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"17914:6:21","nodeType":"YulIdentifier","src":"17914:6:21"},"nativeSrc":"17914:21:21","nodeType":"YulFunctionCall","src":"17914:21:21"},"nativeSrc":"17914:21:21","nodeType":"YulExpressionStatement","src":"17914:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17955:9:21","nodeType":"YulIdentifier","src":"17955:9:21"},{"kind":"number","nativeSrc":"17966:2:21","nodeType":"YulLiteral","src":"17966:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17951:3:21","nodeType":"YulIdentifier","src":"17951:3:21"},"nativeSrc":"17951:18:21","nodeType":"YulFunctionCall","src":"17951:18:21"},{"kind":"number","nativeSrc":"17971:2:21","nodeType":"YulLiteral","src":"17971:2:21","type":"","value":"15"}],"functionName":{"name":"mstore","nativeSrc":"17944:6:21","nodeType":"YulIdentifier","src":"17944:6:21"},"nativeSrc":"17944:30:21","nodeType":"YulFunctionCall","src":"17944:30:21"},"nativeSrc":"17944:30:21","nodeType":"YulExpressionStatement","src":"17944:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17994:9:21","nodeType":"YulIdentifier","src":"17994:9:21"},{"kind":"number","nativeSrc":"18005:2:21","nodeType":"YulLiteral","src":"18005:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17990:3:21","nodeType":"YulIdentifier","src":"17990:3:21"},"nativeSrc":"17990:18:21","nodeType":"YulFunctionCall","src":"17990:18:21"},{"hexValue":"496e76616c69642061646472657373","kind":"string","nativeSrc":"18010:17:21","nodeType":"YulLiteral","src":"18010:17:21","type":"","value":"Invalid address"}],"functionName":{"name":"mstore","nativeSrc":"17983:6:21","nodeType":"YulIdentifier","src":"17983:6:21"},"nativeSrc":"17983:45:21","nodeType":"YulFunctionCall","src":"17983:45:21"},"nativeSrc":"17983:45:21","nodeType":"YulExpressionStatement","src":"17983:45:21"},{"nativeSrc":"18037:26:21","nodeType":"YulAssignment","src":"18037:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"18049:9:21","nodeType":"YulIdentifier","src":"18049:9:21"},{"kind":"number","nativeSrc":"18060:2:21","nodeType":"YulLiteral","src":"18060:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"18045:3:21","nodeType":"YulIdentifier","src":"18045:3:21"},"nativeSrc":"18045:18:21","nodeType":"YulFunctionCall","src":"18045:18:21"},"variableNames":[{"name":"tail","nativeSrc":"18037:4:21","nodeType":"YulIdentifier","src":"18037:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"17730:339:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17881:9:21","nodeType":"YulTypedName","src":"17881:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17895:4:21","nodeType":"YulTypedName","src":"17895:4:21","type":""}],"src":"17730:339:21"},{"body":{"nativeSrc":"18155:103:21","nodeType":"YulBlock","src":"18155:103:21","statements":[{"body":{"nativeSrc":"18201:16:21","nodeType":"YulBlock","src":"18201:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"18210:1:21","nodeType":"YulLiteral","src":"18210:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"18213:1:21","nodeType":"YulLiteral","src":"18213:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"18203:6:21","nodeType":"YulIdentifier","src":"18203:6:21"},"nativeSrc":"18203:12:21","nodeType":"YulFunctionCall","src":"18203:12:21"},"nativeSrc":"18203:12:21","nodeType":"YulExpressionStatement","src":"18203:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"18176:7:21","nodeType":"YulIdentifier","src":"18176:7:21"},{"name":"headStart","nativeSrc":"18185:9:21","nodeType":"YulIdentifier","src":"18185:9:21"}],"functionName":{"name":"sub","nativeSrc":"18172:3:21","nodeType":"YulIdentifier","src":"18172:3:21"},"nativeSrc":"18172:23:21","nodeType":"YulFunctionCall","src":"18172:23:21"},{"kind":"number","nativeSrc":"18197:2:21","nodeType":"YulLiteral","src":"18197:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"18168:3:21","nodeType":"YulIdentifier","src":"18168:3:21"},"nativeSrc":"18168:32:21","nodeType":"YulFunctionCall","src":"18168:32:21"},"nativeSrc":"18165:52:21","nodeType":"YulIf","src":"18165:52:21"},{"nativeSrc":"18226:26:21","nodeType":"YulAssignment","src":"18226:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"18242:9:21","nodeType":"YulIdentifier","src":"18242:9:21"}],"functionName":{"name":"mload","nativeSrc":"18236:5:21","nodeType":"YulIdentifier","src":"18236:5:21"},"nativeSrc":"18236:16:21","nodeType":"YulFunctionCall","src":"18236:16:21"},"variableNames":[{"name":"value0","nativeSrc":"18226:6:21","nodeType":"YulIdentifier","src":"18226:6:21"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"18074:184:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18121:9:21","nodeType":"YulTypedName","src":"18121:9:21","type":""},{"name":"dataEnd","nativeSrc":"18132:7:21","nodeType":"YulTypedName","src":"18132:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"18144:6:21","nodeType":"YulTypedName","src":"18144:6:21","type":""}],"src":"18074:184:21"},{"body":{"nativeSrc":"18437:175:21","nodeType":"YulBlock","src":"18437:175:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"18454:9:21","nodeType":"YulIdentifier","src":"18454:9:21"},{"kind":"number","nativeSrc":"18465:2:21","nodeType":"YulLiteral","src":"18465:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"18447:6:21","nodeType":"YulIdentifier","src":"18447:6:21"},"nativeSrc":"18447:21:21","nodeType":"YulFunctionCall","src":"18447:21:21"},"nativeSrc":"18447:21:21","nodeType":"YulExpressionStatement","src":"18447:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18488:9:21","nodeType":"YulIdentifier","src":"18488:9:21"},{"kind":"number","nativeSrc":"18499:2:21","nodeType":"YulLiteral","src":"18499:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18484:3:21","nodeType":"YulIdentifier","src":"18484:3:21"},"nativeSrc":"18484:18:21","nodeType":"YulFunctionCall","src":"18484:18:21"},{"kind":"number","nativeSrc":"18504:2:21","nodeType":"YulLiteral","src":"18504:2:21","type":"","value":"25"}],"functionName":{"name":"mstore","nativeSrc":"18477:6:21","nodeType":"YulIdentifier","src":"18477:6:21"},"nativeSrc":"18477:30:21","nodeType":"YulFunctionCall","src":"18477:30:21"},"nativeSrc":"18477:30:21","nodeType":"YulExpressionStatement","src":"18477:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18527:9:21","nodeType":"YulIdentifier","src":"18527:9:21"},{"kind":"number","nativeSrc":"18538:2:21","nodeType":"YulLiteral","src":"18538:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"18523:3:21","nodeType":"YulIdentifier","src":"18523:3:21"},"nativeSrc":"18523:18:21","nodeType":"YulFunctionCall","src":"18523:18:21"},{"hexValue":"496e73756666696369656e7420555344432062616c616e6365","kind":"string","nativeSrc":"18543:27:21","nodeType":"YulLiteral","src":"18543:27:21","type":"","value":"Insufficient USDC balance"}],"functionName":{"name":"mstore","nativeSrc":"18516:6:21","nodeType":"YulIdentifier","src":"18516:6:21"},"nativeSrc":"18516:55:21","nodeType":"YulFunctionCall","src":"18516:55:21"},"nativeSrc":"18516:55:21","nodeType":"YulExpressionStatement","src":"18516:55:21"},{"nativeSrc":"18580:26:21","nodeType":"YulAssignment","src":"18580:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"18592:9:21","nodeType":"YulIdentifier","src":"18592:9:21"},{"kind":"number","nativeSrc":"18603:2:21","nodeType":"YulLiteral","src":"18603:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"18588:3:21","nodeType":"YulIdentifier","src":"18588:3:21"},"nativeSrc":"18588:18:21","nodeType":"YulFunctionCall","src":"18588:18:21"},"variableNames":[{"name":"tail","nativeSrc":"18580:4:21","nodeType":"YulIdentifier","src":"18580:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_40a05d66d0175ecd11e5a65435b281d52a1c32bbc687760a717d83801a914a3c__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"18263:349:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18414:9:21","nodeType":"YulTypedName","src":"18414:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18428:4:21","nodeType":"YulTypedName","src":"18428:4:21","type":""}],"src":"18263:349:21"},{"body":{"nativeSrc":"18774:241:21","nodeType":"YulBlock","src":"18774:241:21","statements":[{"nativeSrc":"18784:26:21","nodeType":"YulAssignment","src":"18784:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"18796:9:21","nodeType":"YulIdentifier","src":"18796:9:21"},{"kind":"number","nativeSrc":"18807:2:21","nodeType":"YulLiteral","src":"18807:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"18792:3:21","nodeType":"YulIdentifier","src":"18792:3:21"},"nativeSrc":"18792:18:21","nodeType":"YulFunctionCall","src":"18792:18:21"},"variableNames":[{"name":"tail","nativeSrc":"18784:4:21","nodeType":"YulIdentifier","src":"18784:4:21"}]},{"nativeSrc":"18819:52:21","nodeType":"YulVariableDeclaration","src":"18819:52:21","value":{"kind":"number","nativeSrc":"18829:42:21","nodeType":"YulLiteral","src":"18829:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"18823:2:21","nodeType":"YulTypedName","src":"18823:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"18887:9:21","nodeType":"YulIdentifier","src":"18887:9:21"},{"arguments":[{"name":"value0","nativeSrc":"18902:6:21","nodeType":"YulIdentifier","src":"18902:6:21"},{"name":"_1","nativeSrc":"18910:2:21","nodeType":"YulIdentifier","src":"18910:2:21"}],"functionName":{"name":"and","nativeSrc":"18898:3:21","nodeType":"YulIdentifier","src":"18898:3:21"},"nativeSrc":"18898:15:21","nodeType":"YulFunctionCall","src":"18898:15:21"}],"functionName":{"name":"mstore","nativeSrc":"18880:6:21","nodeType":"YulIdentifier","src":"18880:6:21"},"nativeSrc":"18880:34:21","nodeType":"YulFunctionCall","src":"18880:34:21"},"nativeSrc":"18880:34:21","nodeType":"YulExpressionStatement","src":"18880:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18934:9:21","nodeType":"YulIdentifier","src":"18934:9:21"},{"kind":"number","nativeSrc":"18945:2:21","nodeType":"YulLiteral","src":"18945:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18930:3:21","nodeType":"YulIdentifier","src":"18930:3:21"},"nativeSrc":"18930:18:21","nodeType":"YulFunctionCall","src":"18930:18:21"},{"arguments":[{"name":"value1","nativeSrc":"18954:6:21","nodeType":"YulIdentifier","src":"18954:6:21"},{"name":"_1","nativeSrc":"18962:2:21","nodeType":"YulIdentifier","src":"18962:2:21"}],"functionName":{"name":"and","nativeSrc":"18950:3:21","nodeType":"YulIdentifier","src":"18950:3:21"},"nativeSrc":"18950:15:21","nodeType":"YulFunctionCall","src":"18950:15:21"}],"functionName":{"name":"mstore","nativeSrc":"18923:6:21","nodeType":"YulIdentifier","src":"18923:6:21"},"nativeSrc":"18923:43:21","nodeType":"YulFunctionCall","src":"18923:43:21"},"nativeSrc":"18923:43:21","nodeType":"YulExpressionStatement","src":"18923:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18986:9:21","nodeType":"YulIdentifier","src":"18986:9:21"},{"kind":"number","nativeSrc":"18997:2:21","nodeType":"YulLiteral","src":"18997:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"18982:3:21","nodeType":"YulIdentifier","src":"18982:3:21"},"nativeSrc":"18982:18:21","nodeType":"YulFunctionCall","src":"18982:18:21"},{"name":"value2","nativeSrc":"19002:6:21","nodeType":"YulIdentifier","src":"19002:6:21"}],"functionName":{"name":"mstore","nativeSrc":"18975:6:21","nodeType":"YulIdentifier","src":"18975:6:21"},"nativeSrc":"18975:34:21","nodeType":"YulFunctionCall","src":"18975:34:21"},"nativeSrc":"18975:34:21","nodeType":"YulExpressionStatement","src":"18975:34:21"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"18617:398:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18727:9:21","nodeType":"YulTypedName","src":"18727:9:21","type":""},{"name":"value2","nativeSrc":"18738:6:21","nodeType":"YulTypedName","src":"18738:6:21","type":""},{"name":"value1","nativeSrc":"18746:6:21","nodeType":"YulTypedName","src":"18746:6:21","type":""},{"name":"value0","nativeSrc":"18754:6:21","nodeType":"YulTypedName","src":"18754:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18765:4:21","nodeType":"YulTypedName","src":"18765:4:21","type":""}],"src":"18617:398:21"},{"body":{"nativeSrc":"19098:167:21","nodeType":"YulBlock","src":"19098:167:21","statements":[{"body":{"nativeSrc":"19144:16:21","nodeType":"YulBlock","src":"19144:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"19153:1:21","nodeType":"YulLiteral","src":"19153:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"19156:1:21","nodeType":"YulLiteral","src":"19156:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"19146:6:21","nodeType":"YulIdentifier","src":"19146:6:21"},"nativeSrc":"19146:12:21","nodeType":"YulFunctionCall","src":"19146:12:21"},"nativeSrc":"19146:12:21","nodeType":"YulExpressionStatement","src":"19146:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"19119:7:21","nodeType":"YulIdentifier","src":"19119:7:21"},{"name":"headStart","nativeSrc":"19128:9:21","nodeType":"YulIdentifier","src":"19128:9:21"}],"functionName":{"name":"sub","nativeSrc":"19115:3:21","nodeType":"YulIdentifier","src":"19115:3:21"},"nativeSrc":"19115:23:21","nodeType":"YulFunctionCall","src":"19115:23:21"},{"kind":"number","nativeSrc":"19140:2:21","nodeType":"YulLiteral","src":"19140:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"19111:3:21","nodeType":"YulIdentifier","src":"19111:3:21"},"nativeSrc":"19111:32:21","nodeType":"YulFunctionCall","src":"19111:32:21"},"nativeSrc":"19108:52:21","nodeType":"YulIf","src":"19108:52:21"},{"nativeSrc":"19169:29:21","nodeType":"YulVariableDeclaration","src":"19169:29:21","value":{"arguments":[{"name":"headStart","nativeSrc":"19188:9:21","nodeType":"YulIdentifier","src":"19188:9:21"}],"functionName":{"name":"mload","nativeSrc":"19182:5:21","nodeType":"YulIdentifier","src":"19182:5:21"},"nativeSrc":"19182:16:21","nodeType":"YulFunctionCall","src":"19182:16:21"},"variables":[{"name":"value","nativeSrc":"19173:5:21","nodeType":"YulTypedName","src":"19173:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"19229:5:21","nodeType":"YulIdentifier","src":"19229:5:21"}],"functionName":{"name":"validator_revert_bool","nativeSrc":"19207:21:21","nodeType":"YulIdentifier","src":"19207:21:21"},"nativeSrc":"19207:28:21","nodeType":"YulFunctionCall","src":"19207:28:21"},"nativeSrc":"19207:28:21","nodeType":"YulExpressionStatement","src":"19207:28:21"},{"nativeSrc":"19244:15:21","nodeType":"YulAssignment","src":"19244:15:21","value":{"name":"value","nativeSrc":"19254:5:21","nodeType":"YulIdentifier","src":"19254:5:21"},"variableNames":[{"name":"value0","nativeSrc":"19244:6:21","nodeType":"YulIdentifier","src":"19244:6:21"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"19020:245:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19064:9:21","nodeType":"YulTypedName","src":"19064:9:21","type":""},{"name":"dataEnd","nativeSrc":"19075:7:21","nodeType":"YulTypedName","src":"19075:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"19087:6:21","nodeType":"YulTypedName","src":"19087:6:21","type":""}],"src":"19020:245:21"},{"body":{"nativeSrc":"19444:170:21","nodeType":"YulBlock","src":"19444:170:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"19461:9:21","nodeType":"YulIdentifier","src":"19461:9:21"},{"kind":"number","nativeSrc":"19472:2:21","nodeType":"YulLiteral","src":"19472:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"19454:6:21","nodeType":"YulIdentifier","src":"19454:6:21"},"nativeSrc":"19454:21:21","nodeType":"YulFunctionCall","src":"19454:21:21"},"nativeSrc":"19454:21:21","nodeType":"YulExpressionStatement","src":"19454:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19495:9:21","nodeType":"YulIdentifier","src":"19495:9:21"},{"kind":"number","nativeSrc":"19506:2:21","nodeType":"YulLiteral","src":"19506:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19491:3:21","nodeType":"YulIdentifier","src":"19491:3:21"},"nativeSrc":"19491:18:21","nodeType":"YulFunctionCall","src":"19491:18:21"},{"kind":"number","nativeSrc":"19511:2:21","nodeType":"YulLiteral","src":"19511:2:21","type":"","value":"20"}],"functionName":{"name":"mstore","nativeSrc":"19484:6:21","nodeType":"YulIdentifier","src":"19484:6:21"},"nativeSrc":"19484:30:21","nodeType":"YulFunctionCall","src":"19484:30:21"},"nativeSrc":"19484:30:21","nodeType":"YulExpressionStatement","src":"19484:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19534:9:21","nodeType":"YulIdentifier","src":"19534:9:21"},{"kind":"number","nativeSrc":"19545:2:21","nodeType":"YulLiteral","src":"19545:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"19530:3:21","nodeType":"YulIdentifier","src":"19530:3:21"},"nativeSrc":"19530:18:21","nodeType":"YulFunctionCall","src":"19530:18:21"},{"hexValue":"55534443207472616e73666572206661696c6564","kind":"string","nativeSrc":"19550:22:21","nodeType":"YulLiteral","src":"19550:22:21","type":"","value":"USDC transfer failed"}],"functionName":{"name":"mstore","nativeSrc":"19523:6:21","nodeType":"YulIdentifier","src":"19523:6:21"},"nativeSrc":"19523:50:21","nodeType":"YulFunctionCall","src":"19523:50:21"},"nativeSrc":"19523:50:21","nodeType":"YulExpressionStatement","src":"19523:50:21"},{"nativeSrc":"19582:26:21","nodeType":"YulAssignment","src":"19582:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"19594:9:21","nodeType":"YulIdentifier","src":"19594:9:21"},{"kind":"number","nativeSrc":"19605:2:21","nodeType":"YulLiteral","src":"19605:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"19590:3:21","nodeType":"YulIdentifier","src":"19590:3:21"},"nativeSrc":"19590:18:21","nodeType":"YulFunctionCall","src":"19590:18:21"},"variableNames":[{"name":"tail","nativeSrc":"19582:4:21","nodeType":"YulIdentifier","src":"19582:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_032fb3428477d66798bdf7801f58a252d723dc1362b9dfac5726f85f81cca815__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"19270:344:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19421:9:21","nodeType":"YulTypedName","src":"19421:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19435:4:21","nodeType":"YulTypedName","src":"19435:4:21","type":""}],"src":"19270:344:21"},{"body":{"nativeSrc":"19793:169:21","nodeType":"YulBlock","src":"19793:169:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"19810:9:21","nodeType":"YulIdentifier","src":"19810:9:21"},{"kind":"number","nativeSrc":"19821:2:21","nodeType":"YulLiteral","src":"19821:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"19803:6:21","nodeType":"YulIdentifier","src":"19803:6:21"},"nativeSrc":"19803:21:21","nodeType":"YulFunctionCall","src":"19803:21:21"},"nativeSrc":"19803:21:21","nodeType":"YulExpressionStatement","src":"19803:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19844:9:21","nodeType":"YulIdentifier","src":"19844:9:21"},{"kind":"number","nativeSrc":"19855:2:21","nodeType":"YulLiteral","src":"19855:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19840:3:21","nodeType":"YulIdentifier","src":"19840:3:21"},"nativeSrc":"19840:18:21","nodeType":"YulFunctionCall","src":"19840:18:21"},{"kind":"number","nativeSrc":"19860:2:21","nodeType":"YulLiteral","src":"19860:2:21","type":"","value":"19"}],"functionName":{"name":"mstore","nativeSrc":"19833:6:21","nodeType":"YulIdentifier","src":"19833:6:21"},"nativeSrc":"19833:30:21","nodeType":"YulFunctionCall","src":"19833:30:21"},"nativeSrc":"19833:30:21","nodeType":"YulExpressionStatement","src":"19833:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19883:9:21","nodeType":"YulIdentifier","src":"19883:9:21"},{"kind":"number","nativeSrc":"19894:2:21","nodeType":"YulLiteral","src":"19894:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"19879:3:21","nodeType":"YulIdentifier","src":"19879:3:21"},"nativeSrc":"19879:18:21","nodeType":"YulFunctionCall","src":"19879:18:21"},{"hexValue":"4e6f205553444320746f207769746864726177","kind":"string","nativeSrc":"19899:21:21","nodeType":"YulLiteral","src":"19899:21:21","type":"","value":"No USDC to withdraw"}],"functionName":{"name":"mstore","nativeSrc":"19872:6:21","nodeType":"YulIdentifier","src":"19872:6:21"},"nativeSrc":"19872:49:21","nodeType":"YulFunctionCall","src":"19872:49:21"},"nativeSrc":"19872:49:21","nodeType":"YulExpressionStatement","src":"19872:49:21"},{"nativeSrc":"19930:26:21","nodeType":"YulAssignment","src":"19930:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"19942:9:21","nodeType":"YulIdentifier","src":"19942:9:21"},{"kind":"number","nativeSrc":"19953:2:21","nodeType":"YulLiteral","src":"19953:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"19938:3:21","nodeType":"YulIdentifier","src":"19938:3:21"},"nativeSrc":"19938:18:21","nodeType":"YulFunctionCall","src":"19938:18:21"},"variableNames":[{"name":"tail","nativeSrc":"19930:4:21","nodeType":"YulIdentifier","src":"19930:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_64693eab493143313e305fd1ec05b7e651a9150030395218d84e3550222a6e10__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"19619:343:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19770:9:21","nodeType":"YulTypedName","src":"19770:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19784:4:21","nodeType":"YulTypedName","src":"19784:4:21","type":""}],"src":"19619:343:21"},{"body":{"nativeSrc":"20096:168:21","nodeType":"YulBlock","src":"20096:168:21","statements":[{"nativeSrc":"20106:26:21","nodeType":"YulAssignment","src":"20106:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"20118:9:21","nodeType":"YulIdentifier","src":"20118:9:21"},{"kind":"number","nativeSrc":"20129:2:21","nodeType":"YulLiteral","src":"20129:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"20114:3:21","nodeType":"YulIdentifier","src":"20114:3:21"},"nativeSrc":"20114:18:21","nodeType":"YulFunctionCall","src":"20114:18:21"},"variableNames":[{"name":"tail","nativeSrc":"20106:4:21","nodeType":"YulIdentifier","src":"20106:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"20148:9:21","nodeType":"YulIdentifier","src":"20148:9:21"},{"arguments":[{"name":"value0","nativeSrc":"20163:6:21","nodeType":"YulIdentifier","src":"20163:6:21"},{"kind":"number","nativeSrc":"20171:42:21","nodeType":"YulLiteral","src":"20171:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"20159:3:21","nodeType":"YulIdentifier","src":"20159:3:21"},"nativeSrc":"20159:55:21","nodeType":"YulFunctionCall","src":"20159:55:21"}],"functionName":{"name":"mstore","nativeSrc":"20141:6:21","nodeType":"YulIdentifier","src":"20141:6:21"},"nativeSrc":"20141:74:21","nodeType":"YulFunctionCall","src":"20141:74:21"},"nativeSrc":"20141:74:21","nodeType":"YulExpressionStatement","src":"20141:74:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20235:9:21","nodeType":"YulIdentifier","src":"20235:9:21"},{"kind":"number","nativeSrc":"20246:2:21","nodeType":"YulLiteral","src":"20246:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20231:3:21","nodeType":"YulIdentifier","src":"20231:3:21"},"nativeSrc":"20231:18:21","nodeType":"YulFunctionCall","src":"20231:18:21"},{"name":"value1","nativeSrc":"20251:6:21","nodeType":"YulIdentifier","src":"20251:6:21"}],"functionName":{"name":"mstore","nativeSrc":"20224:6:21","nodeType":"YulIdentifier","src":"20224:6:21"},"nativeSrc":"20224:34:21","nodeType":"YulFunctionCall","src":"20224:34:21"},"nativeSrc":"20224:34:21","nodeType":"YulExpressionStatement","src":"20224:34:21"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"19967:297:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20057:9:21","nodeType":"YulTypedName","src":"20057:9:21","type":""},{"name":"value1","nativeSrc":"20068:6:21","nodeType":"YulTypedName","src":"20068:6:21","type":""},{"name":"value0","nativeSrc":"20076:6:21","nodeType":"YulTypedName","src":"20076:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20087:4:21","nodeType":"YulTypedName","src":"20087:4:21","type":""}],"src":"19967:297:21"},{"body":{"nativeSrc":"20443:168:21","nodeType":"YulBlock","src":"20443:168:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"20460:9:21","nodeType":"YulIdentifier","src":"20460:9:21"},{"kind":"number","nativeSrc":"20471:2:21","nodeType":"YulLiteral","src":"20471:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"20453:6:21","nodeType":"YulIdentifier","src":"20453:6:21"},"nativeSrc":"20453:21:21","nodeType":"YulFunctionCall","src":"20453:21:21"},"nativeSrc":"20453:21:21","nodeType":"YulExpressionStatement","src":"20453:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20494:9:21","nodeType":"YulIdentifier","src":"20494:9:21"},{"kind":"number","nativeSrc":"20505:2:21","nodeType":"YulLiteral","src":"20505:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20490:3:21","nodeType":"YulIdentifier","src":"20490:3:21"},"nativeSrc":"20490:18:21","nodeType":"YulFunctionCall","src":"20490:18:21"},{"kind":"number","nativeSrc":"20510:2:21","nodeType":"YulLiteral","src":"20510:2:21","type":"","value":"18"}],"functionName":{"name":"mstore","nativeSrc":"20483:6:21","nodeType":"YulIdentifier","src":"20483:6:21"},"nativeSrc":"20483:30:21","nodeType":"YulFunctionCall","src":"20483:30:21"},"nativeSrc":"20483:30:21","nodeType":"YulExpressionStatement","src":"20483:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20533:9:21","nodeType":"YulIdentifier","src":"20533:9:21"},{"kind":"number","nativeSrc":"20544:2:21","nodeType":"YulLiteral","src":"20544:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"20529:3:21","nodeType":"YulIdentifier","src":"20529:3:21"},"nativeSrc":"20529:18:21","nodeType":"YulFunctionCall","src":"20529:18:21"},{"hexValue":"4e6f2045544820746f207769746864726177","kind":"string","nativeSrc":"20549:20:21","nodeType":"YulLiteral","src":"20549:20:21","type":"","value":"No ETH to withdraw"}],"functionName":{"name":"mstore","nativeSrc":"20522:6:21","nodeType":"YulIdentifier","src":"20522:6:21"},"nativeSrc":"20522:48:21","nodeType":"YulFunctionCall","src":"20522:48:21"},"nativeSrc":"20522:48:21","nodeType":"YulExpressionStatement","src":"20522:48:21"},{"nativeSrc":"20579:26:21","nodeType":"YulAssignment","src":"20579:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"20591:9:21","nodeType":"YulIdentifier","src":"20591:9:21"},{"kind":"number","nativeSrc":"20602:2:21","nodeType":"YulLiteral","src":"20602:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"20587:3:21","nodeType":"YulIdentifier","src":"20587:3:21"},"nativeSrc":"20587:18:21","nodeType":"YulFunctionCall","src":"20587:18:21"},"variableNames":[{"name":"tail","nativeSrc":"20579:4:21","nodeType":"YulIdentifier","src":"20579:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"20269:342:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20420:9:21","nodeType":"YulTypedName","src":"20420:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20434:4:21","nodeType":"YulTypedName","src":"20434:4:21","type":""}],"src":"20269:342:21"},{"body":{"nativeSrc":"20648:152:21","nodeType":"YulBlock","src":"20648:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"20665:1:21","nodeType":"YulLiteral","src":"20665:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"20668:77:21","nodeType":"YulLiteral","src":"20668:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"20658:6:21","nodeType":"YulIdentifier","src":"20658:6:21"},"nativeSrc":"20658:88:21","nodeType":"YulFunctionCall","src":"20658:88:21"},"nativeSrc":"20658:88:21","nodeType":"YulExpressionStatement","src":"20658:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"20762:1:21","nodeType":"YulLiteral","src":"20762:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"20765:4:21","nodeType":"YulLiteral","src":"20765:4:21","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"20755:6:21","nodeType":"YulIdentifier","src":"20755:6:21"},"nativeSrc":"20755:15:21","nodeType":"YulFunctionCall","src":"20755:15:21"},"nativeSrc":"20755:15:21","nodeType":"YulExpressionStatement","src":"20755:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"20786:1:21","nodeType":"YulLiteral","src":"20786:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"20789:4:21","nodeType":"YulLiteral","src":"20789:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"20779:6:21","nodeType":"YulIdentifier","src":"20779:6:21"},"nativeSrc":"20779:15:21","nodeType":"YulFunctionCall","src":"20779:15:21"},"nativeSrc":"20779:15:21","nodeType":"YulExpressionStatement","src":"20779:15:21"}]},"name":"panic_error_0x12","nativeSrc":"20616:184:21","nodeType":"YulFunctionDefinition","src":"20616:184:21"},{"body":{"nativeSrc":"20990:255:21","nodeType":"YulBlock","src":"20990:255:21","statements":[{"nativeSrc":"21000:27:21","nodeType":"YulAssignment","src":"21000:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"21012:9:21","nodeType":"YulIdentifier","src":"21012:9:21"},{"kind":"number","nativeSrc":"21023:3:21","nodeType":"YulLiteral","src":"21023:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"21008:3:21","nodeType":"YulIdentifier","src":"21008:3:21"},"nativeSrc":"21008:19:21","nodeType":"YulFunctionCall","src":"21008:19:21"},"variableNames":[{"name":"tail","nativeSrc":"21000:4:21","nodeType":"YulIdentifier","src":"21000:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"21043:9:21","nodeType":"YulIdentifier","src":"21043:9:21"},{"arguments":[{"name":"value0","nativeSrc":"21058:6:21","nodeType":"YulIdentifier","src":"21058:6:21"},{"kind":"number","nativeSrc":"21066:42:21","nodeType":"YulLiteral","src":"21066:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"21054:3:21","nodeType":"YulIdentifier","src":"21054:3:21"},"nativeSrc":"21054:55:21","nodeType":"YulFunctionCall","src":"21054:55:21"}],"functionName":{"name":"mstore","nativeSrc":"21036:6:21","nodeType":"YulIdentifier","src":"21036:6:21"},"nativeSrc":"21036:74:21","nodeType":"YulFunctionCall","src":"21036:74:21"},"nativeSrc":"21036:74:21","nodeType":"YulExpressionStatement","src":"21036:74:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21130:9:21","nodeType":"YulIdentifier","src":"21130:9:21"},{"kind":"number","nativeSrc":"21141:2:21","nodeType":"YulLiteral","src":"21141:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21126:3:21","nodeType":"YulIdentifier","src":"21126:3:21"},"nativeSrc":"21126:18:21","nodeType":"YulFunctionCall","src":"21126:18:21"},{"name":"value1","nativeSrc":"21146:6:21","nodeType":"YulIdentifier","src":"21146:6:21"}],"functionName":{"name":"mstore","nativeSrc":"21119:6:21","nodeType":"YulIdentifier","src":"21119:6:21"},"nativeSrc":"21119:34:21","nodeType":"YulFunctionCall","src":"21119:34:21"},"nativeSrc":"21119:34:21","nodeType":"YulExpressionStatement","src":"21119:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21173:9:21","nodeType":"YulIdentifier","src":"21173:9:21"},{"kind":"number","nativeSrc":"21184:2:21","nodeType":"YulLiteral","src":"21184:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"21169:3:21","nodeType":"YulIdentifier","src":"21169:3:21"},"nativeSrc":"21169:18:21","nodeType":"YulFunctionCall","src":"21169:18:21"},{"name":"value2","nativeSrc":"21189:6:21","nodeType":"YulIdentifier","src":"21189:6:21"}],"functionName":{"name":"mstore","nativeSrc":"21162:6:21","nodeType":"YulIdentifier","src":"21162:6:21"},"nativeSrc":"21162:34:21","nodeType":"YulFunctionCall","src":"21162:34:21"},"nativeSrc":"21162:34:21","nodeType":"YulExpressionStatement","src":"21162:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21216:9:21","nodeType":"YulIdentifier","src":"21216:9:21"},{"kind":"number","nativeSrc":"21227:2:21","nodeType":"YulLiteral","src":"21227:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"21212:3:21","nodeType":"YulIdentifier","src":"21212:3:21"},"nativeSrc":"21212:18:21","nodeType":"YulFunctionCall","src":"21212:18:21"},{"name":"value3","nativeSrc":"21232:6:21","nodeType":"YulIdentifier","src":"21232:6:21"}],"functionName":{"name":"mstore","nativeSrc":"21205:6:21","nodeType":"YulIdentifier","src":"21205:6:21"},"nativeSrc":"21205:34:21","nodeType":"YulFunctionCall","src":"21205:34:21"},"nativeSrc":"21205:34:21","nodeType":"YulExpressionStatement","src":"21205:34:21"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"20805:440:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20935:9:21","nodeType":"YulTypedName","src":"20935:9:21","type":""},{"name":"value3","nativeSrc":"20946:6:21","nodeType":"YulTypedName","src":"20946:6:21","type":""},{"name":"value2","nativeSrc":"20954:6:21","nodeType":"YulTypedName","src":"20954:6:21","type":""},{"name":"value1","nativeSrc":"20962:6:21","nodeType":"YulTypedName","src":"20962:6:21","type":""},{"name":"value0","nativeSrc":"20970:6:21","nodeType":"YulTypedName","src":"20970:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20981:4:21","nodeType":"YulTypedName","src":"20981:4:21","type":""}],"src":"20805:440:21"},{"body":{"nativeSrc":"21479:236:21","nodeType":"YulBlock","src":"21479:236:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"21496:9:21","nodeType":"YulIdentifier","src":"21496:9:21"},{"kind":"number","nativeSrc":"21507:2:21","nodeType":"YulLiteral","src":"21507:2:21","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"21489:6:21","nodeType":"YulIdentifier","src":"21489:6:21"},"nativeSrc":"21489:21:21","nodeType":"YulFunctionCall","src":"21489:21:21"},"nativeSrc":"21489:21:21","nodeType":"YulExpressionStatement","src":"21489:21:21"},{"nativeSrc":"21519:70:21","nodeType":"YulVariableDeclaration","src":"21519:70:21","value":{"arguments":[{"name":"value0","nativeSrc":"21562:6:21","nodeType":"YulIdentifier","src":"21562:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"21574:9:21","nodeType":"YulIdentifier","src":"21574:9:21"},{"kind":"number","nativeSrc":"21585:2:21","nodeType":"YulLiteral","src":"21585:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"21570:3:21","nodeType":"YulIdentifier","src":"21570:3:21"},"nativeSrc":"21570:18:21","nodeType":"YulFunctionCall","src":"21570:18:21"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nativeSrc":"21533:28:21","nodeType":"YulIdentifier","src":"21533:28:21"},"nativeSrc":"21533:56:21","nodeType":"YulFunctionCall","src":"21533:56:21"},"variables":[{"name":"tail_1","nativeSrc":"21523:6:21","nodeType":"YulTypedName","src":"21523:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21609:9:21","nodeType":"YulIdentifier","src":"21609:9:21"},{"kind":"number","nativeSrc":"21620:2:21","nodeType":"YulLiteral","src":"21620:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21605:3:21","nodeType":"YulIdentifier","src":"21605:3:21"},"nativeSrc":"21605:18:21","nodeType":"YulFunctionCall","src":"21605:18:21"},{"arguments":[{"name":"tail_1","nativeSrc":"21629:6:21","nodeType":"YulIdentifier","src":"21629:6:21"},{"name":"headStart","nativeSrc":"21637:9:21","nodeType":"YulIdentifier","src":"21637:9:21"}],"functionName":{"name":"sub","nativeSrc":"21625:3:21","nodeType":"YulIdentifier","src":"21625:3:21"},"nativeSrc":"21625:22:21","nodeType":"YulFunctionCall","src":"21625:22:21"}],"functionName":{"name":"mstore","nativeSrc":"21598:6:21","nodeType":"YulIdentifier","src":"21598:6:21"},"nativeSrc":"21598:50:21","nodeType":"YulFunctionCall","src":"21598:50:21"},"nativeSrc":"21598:50:21","nodeType":"YulExpressionStatement","src":"21598:50:21"},{"nativeSrc":"21657:52:21","nodeType":"YulAssignment","src":"21657:52:21","value":{"arguments":[{"name":"value1","nativeSrc":"21694:6:21","nodeType":"YulIdentifier","src":"21694:6:21"},{"name":"tail_1","nativeSrc":"21702:6:21","nodeType":"YulIdentifier","src":"21702:6:21"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nativeSrc":"21665:28:21","nodeType":"YulIdentifier","src":"21665:28:21"},"nativeSrc":"21665:44:21","nodeType":"YulFunctionCall","src":"21665:44:21"},"variableNames":[{"name":"tail","nativeSrc":"21657:4:21","nodeType":"YulIdentifier","src":"21657:4:21"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"21250:465:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21440:9:21","nodeType":"YulTypedName","src":"21440:9:21","type":""},{"name":"value1","nativeSrc":"21451:6:21","nodeType":"YulTypedName","src":"21451:6:21","type":""},{"name":"value0","nativeSrc":"21459:6:21","nodeType":"YulTypedName","src":"21459:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21470:4:21","nodeType":"YulTypedName","src":"21470:4:21","type":""}],"src":"21250:465:21"},{"body":{"nativeSrc":"21951:353:21","nodeType":"YulBlock","src":"21951:353:21","statements":[{"nativeSrc":"21961:52:21","nodeType":"YulVariableDeclaration","src":"21961:52:21","value":{"kind":"number","nativeSrc":"21971:42:21","nodeType":"YulLiteral","src":"21971:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"21965:2:21","nodeType":"YulTypedName","src":"21965:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"22029:9:21","nodeType":"YulIdentifier","src":"22029:9:21"},{"arguments":[{"name":"value0","nativeSrc":"22044:6:21","nodeType":"YulIdentifier","src":"22044:6:21"},{"name":"_1","nativeSrc":"22052:2:21","nodeType":"YulIdentifier","src":"22052:2:21"}],"functionName":{"name":"and","nativeSrc":"22040:3:21","nodeType":"YulIdentifier","src":"22040:3:21"},"nativeSrc":"22040:15:21","nodeType":"YulFunctionCall","src":"22040:15:21"}],"functionName":{"name":"mstore","nativeSrc":"22022:6:21","nodeType":"YulIdentifier","src":"22022:6:21"},"nativeSrc":"22022:34:21","nodeType":"YulFunctionCall","src":"22022:34:21"},"nativeSrc":"22022:34:21","nodeType":"YulExpressionStatement","src":"22022:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22076:9:21","nodeType":"YulIdentifier","src":"22076:9:21"},{"kind":"number","nativeSrc":"22087:2:21","nodeType":"YulLiteral","src":"22087:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22072:3:21","nodeType":"YulIdentifier","src":"22072:3:21"},"nativeSrc":"22072:18:21","nodeType":"YulFunctionCall","src":"22072:18:21"},{"arguments":[{"name":"value1","nativeSrc":"22096:6:21","nodeType":"YulIdentifier","src":"22096:6:21"},{"name":"_1","nativeSrc":"22104:2:21","nodeType":"YulIdentifier","src":"22104:2:21"}],"functionName":{"name":"and","nativeSrc":"22092:3:21","nodeType":"YulIdentifier","src":"22092:3:21"},"nativeSrc":"22092:15:21","nodeType":"YulFunctionCall","src":"22092:15:21"}],"functionName":{"name":"mstore","nativeSrc":"22065:6:21","nodeType":"YulIdentifier","src":"22065:6:21"},"nativeSrc":"22065:43:21","nodeType":"YulFunctionCall","src":"22065:43:21"},"nativeSrc":"22065:43:21","nodeType":"YulExpressionStatement","src":"22065:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22128:9:21","nodeType":"YulIdentifier","src":"22128:9:21"},{"kind":"number","nativeSrc":"22139:2:21","nodeType":"YulLiteral","src":"22139:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22124:3:21","nodeType":"YulIdentifier","src":"22124:3:21"},"nativeSrc":"22124:18:21","nodeType":"YulFunctionCall","src":"22124:18:21"},{"name":"value2","nativeSrc":"22144:6:21","nodeType":"YulIdentifier","src":"22144:6:21"}],"functionName":{"name":"mstore","nativeSrc":"22117:6:21","nodeType":"YulIdentifier","src":"22117:6:21"},"nativeSrc":"22117:34:21","nodeType":"YulFunctionCall","src":"22117:34:21"},"nativeSrc":"22117:34:21","nodeType":"YulExpressionStatement","src":"22117:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22171:9:21","nodeType":"YulIdentifier","src":"22171:9:21"},{"kind":"number","nativeSrc":"22182:2:21","nodeType":"YulLiteral","src":"22182:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"22167:3:21","nodeType":"YulIdentifier","src":"22167:3:21"},"nativeSrc":"22167:18:21","nodeType":"YulFunctionCall","src":"22167:18:21"},{"name":"value3","nativeSrc":"22187:6:21","nodeType":"YulIdentifier","src":"22187:6:21"}],"functionName":{"name":"mstore","nativeSrc":"22160:6:21","nodeType":"YulIdentifier","src":"22160:6:21"},"nativeSrc":"22160:34:21","nodeType":"YulFunctionCall","src":"22160:34:21"},"nativeSrc":"22160:34:21","nodeType":"YulExpressionStatement","src":"22160:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22214:9:21","nodeType":"YulIdentifier","src":"22214:9:21"},{"kind":"number","nativeSrc":"22225:3:21","nodeType":"YulLiteral","src":"22225:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"22210:3:21","nodeType":"YulIdentifier","src":"22210:3:21"},"nativeSrc":"22210:19:21","nodeType":"YulFunctionCall","src":"22210:19:21"},{"kind":"number","nativeSrc":"22231:3:21","nodeType":"YulLiteral","src":"22231:3:21","type":"","value":"160"}],"functionName":{"name":"mstore","nativeSrc":"22203:6:21","nodeType":"YulIdentifier","src":"22203:6:21"},"nativeSrc":"22203:32:21","nodeType":"YulFunctionCall","src":"22203:32:21"},"nativeSrc":"22203:32:21","nodeType":"YulExpressionStatement","src":"22203:32:21"},{"nativeSrc":"22244:54:21","nodeType":"YulAssignment","src":"22244:54:21","value":{"arguments":[{"name":"value4","nativeSrc":"22270:6:21","nodeType":"YulIdentifier","src":"22270:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"22282:9:21","nodeType":"YulIdentifier","src":"22282:9:21"},{"kind":"number","nativeSrc":"22293:3:21","nodeType":"YulLiteral","src":"22293:3:21","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"22278:3:21","nodeType":"YulIdentifier","src":"22278:3:21"},"nativeSrc":"22278:19:21","nodeType":"YulFunctionCall","src":"22278:19:21"}],"functionName":{"name":"abi_encode_string","nativeSrc":"22252:17:21","nodeType":"YulIdentifier","src":"22252:17:21"},"nativeSrc":"22252:46:21","nodeType":"YulFunctionCall","src":"22252:46:21"},"variableNames":[{"name":"tail","nativeSrc":"22244:4:21","nodeType":"YulIdentifier","src":"22244:4:21"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"21720:584:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21888:9:21","nodeType":"YulTypedName","src":"21888:9:21","type":""},{"name":"value4","nativeSrc":"21899:6:21","nodeType":"YulTypedName","src":"21899:6:21","type":""},{"name":"value3","nativeSrc":"21907:6:21","nodeType":"YulTypedName","src":"21907:6:21","type":""},{"name":"value2","nativeSrc":"21915:6:21","nodeType":"YulTypedName","src":"21915:6:21","type":""},{"name":"value1","nativeSrc":"21923:6:21","nodeType":"YulTypedName","src":"21923:6:21","type":""},{"name":"value0","nativeSrc":"21931:6:21","nodeType":"YulTypedName","src":"21931:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21942:4:21","nodeType":"YulTypedName","src":"21942:4:21","type":""}],"src":"21720:584:21"},{"body":{"nativeSrc":"22389:169:21","nodeType":"YulBlock","src":"22389:169:21","statements":[{"body":{"nativeSrc":"22435:16:21","nodeType":"YulBlock","src":"22435:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"22444:1:21","nodeType":"YulLiteral","src":"22444:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"22447:1:21","nodeType":"YulLiteral","src":"22447:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"22437:6:21","nodeType":"YulIdentifier","src":"22437:6:21"},"nativeSrc":"22437:12:21","nodeType":"YulFunctionCall","src":"22437:12:21"},"nativeSrc":"22437:12:21","nodeType":"YulExpressionStatement","src":"22437:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"22410:7:21","nodeType":"YulIdentifier","src":"22410:7:21"},{"name":"headStart","nativeSrc":"22419:9:21","nodeType":"YulIdentifier","src":"22419:9:21"}],"functionName":{"name":"sub","nativeSrc":"22406:3:21","nodeType":"YulIdentifier","src":"22406:3:21"},"nativeSrc":"22406:23:21","nodeType":"YulFunctionCall","src":"22406:23:21"},{"kind":"number","nativeSrc":"22431:2:21","nodeType":"YulLiteral","src":"22431:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"22402:3:21","nodeType":"YulIdentifier","src":"22402:3:21"},"nativeSrc":"22402:32:21","nodeType":"YulFunctionCall","src":"22402:32:21"},"nativeSrc":"22399:52:21","nodeType":"YulIf","src":"22399:52:21"},{"nativeSrc":"22460:29:21","nodeType":"YulVariableDeclaration","src":"22460:29:21","value":{"arguments":[{"name":"headStart","nativeSrc":"22479:9:21","nodeType":"YulIdentifier","src":"22479:9:21"}],"functionName":{"name":"mload","nativeSrc":"22473:5:21","nodeType":"YulIdentifier","src":"22473:5:21"},"nativeSrc":"22473:16:21","nodeType":"YulFunctionCall","src":"22473:16:21"},"variables":[{"name":"value","nativeSrc":"22464:5:21","nodeType":"YulTypedName","src":"22464:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"22522:5:21","nodeType":"YulIdentifier","src":"22522:5:21"}],"functionName":{"name":"validator_revert_bytes4","nativeSrc":"22498:23:21","nodeType":"YulIdentifier","src":"22498:23:21"},"nativeSrc":"22498:30:21","nodeType":"YulFunctionCall","src":"22498:30:21"},"nativeSrc":"22498:30:21","nodeType":"YulExpressionStatement","src":"22498:30:21"},{"nativeSrc":"22537:15:21","nodeType":"YulAssignment","src":"22537:15:21","value":{"name":"value","nativeSrc":"22547:5:21","nodeType":"YulIdentifier","src":"22547:5:21"},"variableNames":[{"name":"value0","nativeSrc":"22537:6:21","nodeType":"YulIdentifier","src":"22537:6:21"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nativeSrc":"22309:249:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22355:9:21","nodeType":"YulTypedName","src":"22355:9:21","type":""},{"name":"dataEnd","nativeSrc":"22366:7:21","nodeType":"YulTypedName","src":"22366:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"22378:6:21","nodeType":"YulTypedName","src":"22378:6:21","type":""}],"src":"22309:249:21"},{"body":{"nativeSrc":"22894:519:21","nodeType":"YulBlock","src":"22894:519:21","statements":[{"nativeSrc":"22904:52:21","nodeType":"YulVariableDeclaration","src":"22904:52:21","value":{"kind":"number","nativeSrc":"22914:42:21","nodeType":"YulLiteral","src":"22914:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"22908:2:21","nodeType":"YulTypedName","src":"22908:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"22972:9:21","nodeType":"YulIdentifier","src":"22972:9:21"},{"arguments":[{"name":"value0","nativeSrc":"22987:6:21","nodeType":"YulIdentifier","src":"22987:6:21"},{"name":"_1","nativeSrc":"22995:2:21","nodeType":"YulIdentifier","src":"22995:2:21"}],"functionName":{"name":"and","nativeSrc":"22983:3:21","nodeType":"YulIdentifier","src":"22983:3:21"},"nativeSrc":"22983:15:21","nodeType":"YulFunctionCall","src":"22983:15:21"}],"functionName":{"name":"mstore","nativeSrc":"22965:6:21","nodeType":"YulIdentifier","src":"22965:6:21"},"nativeSrc":"22965:34:21","nodeType":"YulFunctionCall","src":"22965:34:21"},"nativeSrc":"22965:34:21","nodeType":"YulExpressionStatement","src":"22965:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23019:9:21","nodeType":"YulIdentifier","src":"23019:9:21"},{"kind":"number","nativeSrc":"23030:2:21","nodeType":"YulLiteral","src":"23030:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23015:3:21","nodeType":"YulIdentifier","src":"23015:3:21"},"nativeSrc":"23015:18:21","nodeType":"YulFunctionCall","src":"23015:18:21"},{"arguments":[{"name":"value1","nativeSrc":"23039:6:21","nodeType":"YulIdentifier","src":"23039:6:21"},{"name":"_1","nativeSrc":"23047:2:21","nodeType":"YulIdentifier","src":"23047:2:21"}],"functionName":{"name":"and","nativeSrc":"23035:3:21","nodeType":"YulIdentifier","src":"23035:3:21"},"nativeSrc":"23035:15:21","nodeType":"YulFunctionCall","src":"23035:15:21"}],"functionName":{"name":"mstore","nativeSrc":"23008:6:21","nodeType":"YulIdentifier","src":"23008:6:21"},"nativeSrc":"23008:43:21","nodeType":"YulFunctionCall","src":"23008:43:21"},"nativeSrc":"23008:43:21","nodeType":"YulExpressionStatement","src":"23008:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23071:9:21","nodeType":"YulIdentifier","src":"23071:9:21"},{"kind":"number","nativeSrc":"23082:2:21","nodeType":"YulLiteral","src":"23082:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"23067:3:21","nodeType":"YulIdentifier","src":"23067:3:21"},"nativeSrc":"23067:18:21","nodeType":"YulFunctionCall","src":"23067:18:21"},{"kind":"number","nativeSrc":"23087:3:21","nodeType":"YulLiteral","src":"23087:3:21","type":"","value":"160"}],"functionName":{"name":"mstore","nativeSrc":"23060:6:21","nodeType":"YulIdentifier","src":"23060:6:21"},"nativeSrc":"23060:31:21","nodeType":"YulFunctionCall","src":"23060:31:21"},"nativeSrc":"23060:31:21","nodeType":"YulExpressionStatement","src":"23060:31:21"},{"nativeSrc":"23100:71:21","nodeType":"YulVariableDeclaration","src":"23100:71:21","value":{"arguments":[{"name":"value2","nativeSrc":"23143:6:21","nodeType":"YulIdentifier","src":"23143:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"23155:9:21","nodeType":"YulIdentifier","src":"23155:9:21"},{"kind":"number","nativeSrc":"23166:3:21","nodeType":"YulLiteral","src":"23166:3:21","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"23151:3:21","nodeType":"YulIdentifier","src":"23151:3:21"},"nativeSrc":"23151:19:21","nodeType":"YulFunctionCall","src":"23151:19:21"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nativeSrc":"23114:28:21","nodeType":"YulIdentifier","src":"23114:28:21"},"nativeSrc":"23114:57:21","nodeType":"YulFunctionCall","src":"23114:57:21"},"variables":[{"name":"tail_1","nativeSrc":"23104:6:21","nodeType":"YulTypedName","src":"23104:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23191:9:21","nodeType":"YulIdentifier","src":"23191:9:21"},{"kind":"number","nativeSrc":"23202:2:21","nodeType":"YulLiteral","src":"23202:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"23187:3:21","nodeType":"YulIdentifier","src":"23187:3:21"},"nativeSrc":"23187:18:21","nodeType":"YulFunctionCall","src":"23187:18:21"},{"arguments":[{"name":"tail_1","nativeSrc":"23211:6:21","nodeType":"YulIdentifier","src":"23211:6:21"},{"name":"headStart","nativeSrc":"23219:9:21","nodeType":"YulIdentifier","src":"23219:9:21"}],"functionName":{"name":"sub","nativeSrc":"23207:3:21","nodeType":"YulIdentifier","src":"23207:3:21"},"nativeSrc":"23207:22:21","nodeType":"YulFunctionCall","src":"23207:22:21"}],"functionName":{"name":"mstore","nativeSrc":"23180:6:21","nodeType":"YulIdentifier","src":"23180:6:21"},"nativeSrc":"23180:50:21","nodeType":"YulFunctionCall","src":"23180:50:21"},"nativeSrc":"23180:50:21","nodeType":"YulExpressionStatement","src":"23180:50:21"},{"nativeSrc":"23239:58:21","nodeType":"YulVariableDeclaration","src":"23239:58:21","value":{"arguments":[{"name":"value3","nativeSrc":"23282:6:21","nodeType":"YulIdentifier","src":"23282:6:21"},{"name":"tail_1","nativeSrc":"23290:6:21","nodeType":"YulIdentifier","src":"23290:6:21"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nativeSrc":"23253:28:21","nodeType":"YulIdentifier","src":"23253:28:21"},"nativeSrc":"23253:44:21","nodeType":"YulFunctionCall","src":"23253:44:21"},"variables":[{"name":"tail_2","nativeSrc":"23243:6:21","nodeType":"YulTypedName","src":"23243:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23317:9:21","nodeType":"YulIdentifier","src":"23317:9:21"},{"kind":"number","nativeSrc":"23328:3:21","nodeType":"YulLiteral","src":"23328:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"23313:3:21","nodeType":"YulIdentifier","src":"23313:3:21"},"nativeSrc":"23313:19:21","nodeType":"YulFunctionCall","src":"23313:19:21"},{"arguments":[{"name":"tail_2","nativeSrc":"23338:6:21","nodeType":"YulIdentifier","src":"23338:6:21"},{"name":"headStart","nativeSrc":"23346:9:21","nodeType":"YulIdentifier","src":"23346:9:21"}],"functionName":{"name":"sub","nativeSrc":"23334:3:21","nodeType":"YulIdentifier","src":"23334:3:21"},"nativeSrc":"23334:22:21","nodeType":"YulFunctionCall","src":"23334:22:21"}],"functionName":{"name":"mstore","nativeSrc":"23306:6:21","nodeType":"YulIdentifier","src":"23306:6:21"},"nativeSrc":"23306:51:21","nodeType":"YulFunctionCall","src":"23306:51:21"},"nativeSrc":"23306:51:21","nodeType":"YulExpressionStatement","src":"23306:51:21"},{"nativeSrc":"23366:41:21","nodeType":"YulAssignment","src":"23366:41:21","value":{"arguments":[{"name":"value4","nativeSrc":"23392:6:21","nodeType":"YulIdentifier","src":"23392:6:21"},{"name":"tail_2","nativeSrc":"23400:6:21","nodeType":"YulIdentifier","src":"23400:6:21"}],"functionName":{"name":"abi_encode_string","nativeSrc":"23374:17:21","nodeType":"YulIdentifier","src":"23374:17:21"},"nativeSrc":"23374:33:21","nodeType":"YulFunctionCall","src":"23374:33:21"},"variableNames":[{"name":"tail","nativeSrc":"23366:4:21","nodeType":"YulIdentifier","src":"23366:4:21"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"22563:850:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22831:9:21","nodeType":"YulTypedName","src":"22831:9:21","type":""},{"name":"value4","nativeSrc":"22842:6:21","nodeType":"YulTypedName","src":"22842:6:21","type":""},{"name":"value3","nativeSrc":"22850:6:21","nodeType":"YulTypedName","src":"22850:6:21","type":""},{"name":"value2","nativeSrc":"22858:6:21","nodeType":"YulTypedName","src":"22858:6:21","type":""},{"name":"value1","nativeSrc":"22866:6:21","nodeType":"YulTypedName","src":"22866:6:21","type":""},{"name":"value0","nativeSrc":"22874:6:21","nodeType":"YulTypedName","src":"22874:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22885:4:21","nodeType":"YulTypedName","src":"22885:4:21","type":""}],"src":"22563:850:21"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$1614__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, 0x20)\n        let srcEnd := add(add(offset, shl(5, _1)), 0x20)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, 0x20)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := dst_1\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, 0x20)\n        let srcPtr := add(value, 0x20)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset_1), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_struct$_TokenMetadata_$7644_memory_ptr__to_t_struct$_TokenMetadata_$7644_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let memberValue0 := mload(value0)\n        mstore(add(headStart, 32), 0x60)\n        let tail_1 := abi_encode_string(memberValue0, add(headStart, 128))\n        let memberValue0_1 := mload(add(value0, 32))\n        mstore(add(headStart, 64), add(sub(tail_1, headStart), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0))\n        let tail_2 := abi_encode_string(memberValue0_1, tail_1)\n        mstore(add(headStart, 0x60), and(mload(add(value0, 64)), 0xffffffffffffffffffffffffffffffffffffffff))\n        tail := tail_2\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        let tail_1 := abi_encode_string(value0, add(headStart, 96))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string(value1, tail_1)\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_bool(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_1cdec463df0fbdce13585c1435e3c4772f0033ebb8a813b127e59d923b0c9730__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"URI query for nonexistent token\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := extract_byte_array_length(slotValue)\n        let _1 := 1\n        switch and(slotValue, 1)\n        case 0 {\n            mstore(pos, and(slotValue, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            mstore(0, value0)\n            let _2 := 0x20\n            let dataPos := keccak256(0, 0x20)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), ret, length_1)\n        end := add(ret, length_1)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Insufficient ETH sent\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Token does not exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Invalid address\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_40a05d66d0175ecd11e5a65435b281d52a1c32bbc687760a717d83801a914a3c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Insufficient USDC balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_032fb3428477d66798bdf7801f58a252d723dc1362b9dfac5726f85f81cca815__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"USDC transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_64693eab493143313e305fd1ec05b7e651a9150030395218d84e3550222a6e10__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"No USDC to withdraw\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"No ETH to withdraw\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061017f5760003560e01c8063715018a6116100d6578063d8fc063d1161007f578063ef88d7f011610059578063ef88d7f014610490578063f242432a146104b0578063f2fde38b146104d057600080fd5b8063d8fc063d14610410578063e086e5ec14610425578063e985e9c51461043a57600080fd5b80638f9a8837116100b05780638f9a8837146103ba578063a1456765146103d0578063a22cb465146103f057600080fd5b8063715018a61461035a5780637d81c4c11461036f5780638da5cb5b1461038f57600080fd5b80634e1273f4116101385780635f853338116101125780635f853338146102e857806360316801146102fe5780636914db601461032b57600080fd5b80634e1273f41461028857806355f804b3146102b55780635baae42d146102d557600080fd5b80630e89341c116101695780630e89341c146101e757806311eac855146102145780632eb2c2d61461026657600080fd5b8062fdd58e1461018457806301ffc9a7146101b7575b600080fd5b34801561019057600080fd5b506101a461019f36600461222b565b6104f0565b6040519081526020015b60405180910390f35b3480156101c357600080fd5b506101d76101d2366004612283565b610525565b60405190151581526020016101ae565b3480156101f357600080fd5b506102076102023660046122a7565b610608565b6040516101ae919061232e565b34801561022057600080fd5b506004546102419073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101ae565b34801561027257600080fd5b506102866102813660046124e0565b6106b0565b005b34801561029457600080fd5b506102a86102a336600461258a565b610776565b6040516101ae9190612686565b3480156102c157600080fd5b506102866102d0366004612699565b61085c565b6102866102e33660046126d6565b610874565b3480156102f457600080fd5b506101a460065481565b34801561030a57600080fd5b5061031e6103193660046122a7565b6109fb565b6040516101ae9190612743565b34801561033757600080fd5b5061034b6103463660046122a7565b610bea565b6040516101ae939291906127c7565b34801561036657600080fd5b50610286610d32565b34801561037b57600080fd5b5061028661038a366004612813565b610d46565b34801561039b57600080fd5b5060035473ffffffffffffffffffffffffffffffffffffffff16610241565b3480156103c657600080fd5b506101a460055481565b3480156103dc57600080fd5b506102866103eb3660046126d6565b610e12565b3480156103fc57600080fd5b5061028661040b36600461283c565b61113b565b34801561041c57600080fd5b50610286611146565b34801561043157600080fd5b5061028661138e565b34801561044657600080fd5b506101d7610455366004612873565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205460ff1690565b34801561049c57600080fd5b506102866104ab3660046128a6565b611445565b3480156104bc57600080fd5b506102866104cb3660046128c8565b611494565b3480156104dc57600080fd5b506102866104eb366004612813565b611552565b60008181526020818152604080832073ffffffffffffffffffffffffffffffffffffffff861684529091529020545b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fd9b67a260000000000000000000000000000000000000000000000000000000014806105b857507fffffffff0000000000000000000000000000000000000000000000000000000082167f0e89341c00000000000000000000000000000000000000000000000000000000145b8061051f57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff0000000000000000000000000000000000000000000000000000000083161461051f565b6060610613826115b3565b61067e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f55524920717565727920666f72206e6f6e6578697374656e7420746f6b656e0060448201526064015b60405180910390fd5b6009610689836115d9565b60405160200161069a929190612980565b6040516020818303038152906040529050919050565b3373ffffffffffffffffffffffffffffffffffffffff8616811480159061070a575073ffffffffffffffffffffffffffffffffffffffff80871660009081526001602090815260408083209385168352929052205460ff16155b15610761576040517fe237d92200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808316600483015287166024820152604401610675565b61076e8686868686611697565b505050505050565b606081518351146107c057815183516040517f5b05999100000000000000000000000000000000000000000000000000000000815260048101929092526024820152604401610675565b6000835167ffffffffffffffff8111156107dc576107dc612341565b604051908082528060200260200182016040528015610805578160200160208202803683370190505b50905060005b84518110156108545760208082028601015161082f906020808402870101516104f0565b82828151811061084157610841612a25565b602090810291909101015260010161080b565b509392505050565b61086461174b565b60096108708282612aa1565b5050565b806005546108829190612bea565b3410156108eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e73756666696369656e74204554482073656e7400000000000000000000006044820152606401610675565b600880549060019060006108ff8385612c01565b925050819055506109213382846040518060200160405280600081525061179e565b60408051606081018252858152602080820186905233828401526000848152600790915291909120815181906109579082612aa1565b506020820151600182019061096c9082612aa1565b5060409182015160029190910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90921691909117905551339082907fec2cd236ed6d37bf5a71276ac93889db12834493a090efd543a3d2eca8dcdcc8906109ed90879061232e565b60405180910390a350505050565b60408051606080820183528082526020820152600091810191909152610a20826115b3565b610a86576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f546f6b656e20646f6573206e6f742065786973740000000000000000000000006044820152606401610675565b60008281526007602052604090819020815160608101909252805482908290610aae9061292d565b80601f0160208091040260200160405190810160405280929190818152602001828054610ada9061292d565b8015610b275780601f10610afc57610100808354040283529160200191610b27565b820191906000526020600020905b815481529060010190602001808311610b0a57829003601f168201915b50505050508152602001600182018054610b409061292d565b80601f0160208091040260200160405190810160405280929190818152602001828054610b6c9061292d565b8015610bb95780601f10610b8e57610100808354040283529160200191610bb9565b820191906000526020600020905b815481529060010190602001808311610b9c57829003601f168201915b50505091835250506002919091015473ffffffffffffffffffffffffffffffffffffffff1660209091015292915050565b600760205260009081526040902080548190610c059061292d565b80601f0160208091040260200160405190810160405280929190818152602001828054610c319061292d565b8015610c7e5780601f10610c5357610100808354040283529160200191610c7e565b820191906000526020600020905b815481529060010190602001808311610c6157829003601f168201915b505050505090806001018054610c939061292d565b80601f0160208091040260200160405190810160405280929190818152602001828054610cbf9061292d565b8015610d0c5780601f10610ce157610100808354040283529160200191610d0c565b820191906000526020600020905b815481529060010190602001808311610cef57829003601f168201915b5050506002909301549192505073ffffffffffffffffffffffffffffffffffffffff1683565b610d3a61174b565b610d446000611821565b565b610d4e61174b565b73ffffffffffffffffffffffffffffffffffffffff8116610dcb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f496e76616c6964206164647265737300000000000000000000000000000000006044820152606401610675565b600480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600081600654610e229190612bea565b600480546040517f70a082310000000000000000000000000000000000000000000000000000000081523392810192909252919250829173ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015610e96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eba9190612c14565b1015610f22576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f496e73756666696369656e7420555344432062616c616e6365000000000000006044820152606401610675565b600480546040517f23b872dd00000000000000000000000000000000000000000000000000000000815233928101929092523060248301526044820183905273ffffffffffffffffffffffffffffffffffffffff16906323b872dd906064016020604051808303816000875af1158015610fa0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc49190612c2d565b61102a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f55534443207472616e73666572206661696c65640000000000000000000000006044820152606401610675565b6008805490600190600061103e8385612c01565b925050819055506110603382856040518060200160405280600081525061179e565b60408051606081018252868152602080820187905233828401526000848152600790915291909120815181906110969082612aa1565b50602082015160018201906110ab9082612aa1565b5060409182015160029190910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90921691909117905551339082907fec2cd236ed6d37bf5a71276ac93889db12834493a090efd543a3d2eca8dcdcc89061112c90889061232e565b60405180910390a35050505050565b610870338383611898565b61114e61174b565b600480546040517f70a08231000000000000000000000000000000000000000000000000000000008152309281019290925260009173ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa1580156111c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e69190612c14565b905060008111611252576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f205553444320746f207769746864726177000000000000000000000000006044820152606401610675565b60045473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb61128f60035473ffffffffffffffffffffffffffffffffffffffff1690565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602481018490526044016020604051808303816000875af1158015611301573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113259190612c2d565b61138b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f55534443207472616e73666572206661696c65640000000000000000000000006044820152606401610675565b50565b61139661174b565b47806113fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4e6f2045544820746f20776974686472617700000000000000000000000000006044820152606401610675565b60035460405173ffffffffffffffffffffffffffffffffffffffff9091169082156108fc029083906000818181858888f19350505050158015610870573d6000803e3d6000fd5b61144d61174b565b6005829055600681905560408051838152602081018390527f945c1c4e99aa89f648fbfe3df471b916f719e16d960fcec0737d4d56bd696838910160405180910390a15050565b3373ffffffffffffffffffffffffffffffffffffffff861681148015906114ee575073ffffffffffffffffffffffffffffffffffffffff80871660009081526001602090815260408083209385168352929052205460ff16155b15611545576040517fe237d92200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808316600483015287166024820152604401610675565b61076e8686868686611980565b61155a61174b565b73ffffffffffffffffffffffffffffffffffffffff81166115aa576040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152602401610675565b61138b81611821565b600081815260076020526040812080548291906115cf9061292d565b9050119050919050565b606060006115e683611a5b565b600101905060008167ffffffffffffffff81111561160657611606612341565b6040519080825280601f01601f191660200182016040528015611630576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a850494508461163a57509392505050565b73ffffffffffffffffffffffffffffffffffffffff84166116e7576040517f57f447ce00000000000000000000000000000000000000000000000000000000815260006004820152602401610675565b73ffffffffffffffffffffffffffffffffffffffff8516611737576040517f01a8351400000000000000000000000000000000000000000000000000000000815260006004820152602401610675565b6117448585858585611b3d565b5050505050565b60035473ffffffffffffffffffffffffffffffffffffffff163314610d44576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610675565b73ffffffffffffffffffffffffffffffffffffffff84166117ee576040517f57f447ce00000000000000000000000000000000000000000000000000000000815260006004820152602401610675565b6040805160018082526020820186905281830190815260608201859052608082019092529061076e600087848487611b3d565b6003805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b73ffffffffffffffffffffffffffffffffffffffff82166118e8576040517fced3e10000000000000000000000000000000000000000000000000000000000815260006004820152602401610675565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff84166119d0576040517f57f447ce00000000000000000000000000000000000000000000000000000000815260006004820152602401610675565b73ffffffffffffffffffffffffffffffffffffffff8516611a20576040517f01a8351400000000000000000000000000000000000000000000000000000000815260006004820152602401610675565b60408051600180825260208201869052818301908152606082018590526080820190925290611a528787848487611b3d565b50505050505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611aa4577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310611ad0576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310611aee57662386f26fc10000830492506010015b6305f5e1008310611b06576305f5e100830492506008015b6127108310611b1a57612710830492506004015b60648310611b2c576064830492506002015b600a831061051f5760010192915050565b611b4985858585611b9d565b73ffffffffffffffffffffffffffffffffffffffff8416156117445782513390600103611b8f5760208481015190840151611b88838989858589611e7f565b505061076e565b61076e818787878787612071565b8051825114611be557815181516040517f5b05999100000000000000000000000000000000000000000000000000000000815260048101929092526024820152604401610675565b3360005b8351811015611d525760208181028581018201519085019091015173ffffffffffffffffffffffffffffffffffffffff881615611ce95760008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8c16845290915290205481811015611cb5576040517f03dee4c500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a166004820152602481018290526044810183905260648101849052608401610675565b60008381526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8d16845290915290209082900390555b73ffffffffffffffffffffffffffffffffffffffff871615611d485760008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8b16845290915281208054839290611d42908490612c01565b90915550505b5050600101611be9565b508251600103611dfa57602083015160009060208401519091508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051611deb929190918252602082015260400190565b60405180910390a45050611744565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051611e70929190612c4a565b60405180910390a45050505050565b73ffffffffffffffffffffffffffffffffffffffff84163b1561076e576040517ff23a6e6100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063f23a6e6190611ef69089908990889088908890600401612c78565b6020604051808303816000875af1925050508015611f4f575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252611f4c91810190612cc8565b60015b611fde573d808015611f7d576040519150601f19603f3d011682016040523d82523d6000602084013e611f82565b606091505b508051600003611fd6576040517f57f447ce00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86166004820152602401610675565b805181602001fd5b7fffffffff0000000000000000000000000000000000000000000000000000000081167ff23a6e610000000000000000000000000000000000000000000000000000000014611a52576040517f57f447ce00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86166004820152602401610675565b73ffffffffffffffffffffffffffffffffffffffff84163b1561076e576040517fbc197c8100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063bc197c81906120e89089908990889088908890600401612ce5565b6020604051808303816000875af1925050508015612141575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261213e91810190612cc8565b60015b61216f573d808015611f7d576040519150601f19603f3d011682016040523d82523d6000602084013e611f82565b7fffffffff0000000000000000000000000000000000000000000000000000000081167fbc197c810000000000000000000000000000000000000000000000000000000014611a52576040517f57f447ce00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86166004820152602401610675565b803573ffffffffffffffffffffffffffffffffffffffff8116811461222657600080fd5b919050565b6000806040838503121561223e57600080fd5b61224783612202565b946020939093013593505050565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461138b57600080fd5b60006020828403121561229557600080fd5b81356122a081612255565b9392505050565b6000602082840312156122b957600080fd5b5035919050565b60005b838110156122db5781810151838201526020016122c3565b50506000910152565b600081518084526122fc8160208601602086016122c0565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006122a060208301846122e4565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156123b7576123b7612341565b604052919050565b600067ffffffffffffffff8211156123d9576123d9612341565b5060051b60200190565b600082601f8301126123f457600080fd5b81356020612409612404836123bf565b612370565b8083825260208201915060208460051b87010193508684111561242b57600080fd5b602086015b848110156124475780358352918301918301612430565b509695505050505050565b600082601f83011261246357600080fd5b813567ffffffffffffffff81111561247d5761247d612341565b6124ae60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601612370565b8181528460208386010111156124c357600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156124f857600080fd5b61250186612202565b945061250f60208701612202565b9350604086013567ffffffffffffffff8082111561252c57600080fd5b61253889838a016123e3565b9450606088013591508082111561254e57600080fd5b61255a89838a016123e3565b9350608088013591508082111561257057600080fd5b5061257d88828901612452565b9150509295509295909350565b6000806040838503121561259d57600080fd5b823567ffffffffffffffff808211156125b557600080fd5b818501915085601f8301126125c957600080fd5b813560206125d9612404836123bf565b82815260059290921b840181019181810190898411156125f857600080fd5b948201945b8386101561261d5761260e86612202565b825294820194908201906125fd565b9650508601359250508082111561263357600080fd5b50612640858286016123e3565b9150509250929050565b60008151808452602080850194506020840160005b8381101561267b5781518752958201959082019060010161265f565b509495945050505050565b6020815260006122a0602083018461264a565b6000602082840312156126ab57600080fd5b813567ffffffffffffffff8111156126c257600080fd5b6126ce84828501612452565b949350505050565b6000806000606084860312156126eb57600080fd5b833567ffffffffffffffff8082111561270357600080fd5b61270f87838801612452565b9450602086013591508082111561272557600080fd5b5061273286828701612452565b925050604084013590509250925092565b60208152600082516060602084015261275f60808401826122e4565b905060208401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe084830301604085015261279a82826122e4565b91505073ffffffffffffffffffffffffffffffffffffffff60408501511660608401528091505092915050565b6060815260006127da60608301866122e4565b82810360208401526127ec81866122e4565b91505073ffffffffffffffffffffffffffffffffffffffff83166040830152949350505050565b60006020828403121561282557600080fd5b6122a082612202565b801515811461138b57600080fd5b6000806040838503121561284f57600080fd5b61285883612202565b915060208301356128688161282e565b809150509250929050565b6000806040838503121561288657600080fd5b61288f83612202565b915061289d60208401612202565b90509250929050565b600080604083850312156128b957600080fd5b50508035926020909101359150565b600080600080600060a086880312156128e057600080fd5b6128e986612202565b94506128f760208701612202565b93506040860135925060608601359150608086013567ffffffffffffffff81111561292157600080fd5b61257d88828901612452565b600181811c9082168061294157607f821691505b60208210810361297a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600080845461298e8161292d565b600182811680156129a657600181146129d957612a08565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0084168752821515830287019450612a08565b8860005260208060002060005b858110156129ff5781548a8201529084019082016129e6565b50505082870194505b505050508351612a1c8183602088016122c0565b01949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b601f821115612a9c576000816000526020600020601f850160051c81016020861015612a7d5750805b601f850160051c820191505b8181101561076e57828155600101612a89565b505050565b815167ffffffffffffffff811115612abb57612abb612341565b612acf81612ac9845461292d565b84612a54565b602080601f831160018114612b225760008415612aec5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b17855561076e565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015612b6f57888601518255948401946001909101908401612b50565b5085821015612bab57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808202811582820484141761051f5761051f612bbb565b8082018082111561051f5761051f612bbb565b600060208284031215612c2657600080fd5b5051919050565b600060208284031215612c3f57600080fd5b81516122a08161282e565b604081526000612c5d604083018561264a565b8281036020840152612c6f818561264a565b95945050505050565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525084604083015283606083015260a06080830152612cbd60a08301846122e4565b979650505050505050565b600060208284031215612cda57600080fd5b81516122a081612255565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525060a06040830152612d1e60a083018661264a565b8281036060840152612d30818661264a565b90508281036080840152612d4481856122e4565b9897505050505050505056fea264697066735822122072008fdefab80797b148791ef0efeca74a6a908e88e0db64892124f4567bf75d64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x17F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xD6 JUMPI DUP1 PUSH4 0xD8FC063D GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xEF88D7F0 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xEF88D7F0 EQ PUSH2 0x490 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD8FC063D EQ PUSH2 0x410 JUMPI DUP1 PUSH4 0xE086E5EC EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x43A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8F9A8837 GT PUSH2 0xB0 JUMPI DUP1 PUSH4 0x8F9A8837 EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0xA1456765 EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0x7D81C4C1 EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x138 JUMPI DUP1 PUSH4 0x5F853338 GT PUSH2 0x112 JUMPI DUP1 PUSH4 0x5F853338 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x60316801 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0x6914DB60 EQ PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x5BAAE42D EQ PUSH2 0x2D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE89341C GT PUSH2 0x169 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x11EAC855 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1B7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A4 PUSH2 0x19F CALLDATASIZE PUSH1 0x4 PUSH2 0x222B JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D7 PUSH2 0x1D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2283 JUMP JUMPDEST PUSH2 0x525 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x207 PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0x22A7 JUMP JUMPDEST PUSH2 0x608 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x232E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x241 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x286 PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0x24E0 JUMP JUMPDEST PUSH2 0x6B0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0x2A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x258A JUMP JUMPDEST PUSH2 0x776 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x2686 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x286 PUSH2 0x2D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2699 JUMP JUMPDEST PUSH2 0x85C JUMP JUMPDEST PUSH2 0x286 PUSH2 0x2E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x26D6 JUMP JUMPDEST PUSH2 0x874 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A4 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31E PUSH2 0x319 CALLDATASIZE PUSH1 0x4 PUSH2 0x22A7 JUMP JUMPDEST PUSH2 0x9FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x2743 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x346 CALLDATASIZE PUSH1 0x4 PUSH2 0x22A7 JUMP JUMPDEST PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27C7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x286 PUSH2 0xD32 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x286 PUSH2 0x38A CALLDATASIZE PUSH1 0x4 PUSH2 0x2813 JUMP JUMPDEST PUSH2 0xD46 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x241 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A4 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x286 PUSH2 0x3EB CALLDATASIZE PUSH1 0x4 PUSH2 0x26D6 JUMP JUMPDEST PUSH2 0xE12 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x286 PUSH2 0x40B CALLDATASIZE PUSH1 0x4 PUSH2 0x283C JUMP JUMPDEST PUSH2 0x113B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x286 PUSH2 0x1146 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x286 PUSH2 0x138E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D7 PUSH2 0x455 CALLDATASIZE PUSH1 0x4 PUSH2 0x2873 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x286 PUSH2 0x4AB CALLDATASIZE PUSH1 0x4 PUSH2 0x28A6 JUMP JUMPDEST PUSH2 0x1445 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x286 PUSH2 0x4CB CALLDATASIZE PUSH1 0x4 PUSH2 0x28C8 JUMP JUMPDEST PUSH2 0x1494 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x286 PUSH2 0x4EB CALLDATASIZE PUSH1 0x4 PUSH2 0x2813 JUMP JUMPDEST PUSH2 0x1552 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x5B8 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x51F JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ PUSH2 0x51F JUMP JUMPDEST PUSH1 0x60 PUSH2 0x613 DUP3 PUSH2 0x15B3 JUMP JUMPDEST PUSH2 0x67E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x55524920717565727920666F72206E6F6E6578697374656E7420746F6B656E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH2 0x689 DUP4 PUSH2 0x15D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x69A SWAP3 SWAP2 SWAP1 PUSH2 0x2980 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x70A JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x761 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x675 JUMP JUMPDEST PUSH2 0x76E DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1697 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x7C0 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7DC JUMPI PUSH2 0x7DC PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x805 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x854 JUMPI PUSH1 0x20 DUP1 DUP3 MUL DUP7 ADD ADD MLOAD PUSH2 0x82F SWAP1 PUSH1 0x20 DUP1 DUP5 MUL DUP8 ADD ADD MLOAD PUSH2 0x4F0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x841 JUMPI PUSH2 0x841 PUSH2 0x2A25 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x80B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x864 PUSH2 0x174B JUMP JUMPDEST PUSH1 0x9 PUSH2 0x870 DUP3 DUP3 PUSH2 0x2AA1 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 SLOAD PUSH2 0x882 SWAP2 SWAP1 PUSH2 0x2BEA JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x8EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204554482073656E740000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x0 PUSH2 0x8FF DUP4 DUP6 PUSH2 0x2C01 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x921 CALLER DUP3 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x179E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE DUP6 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP7 SWAP1 MSTORE CALLER DUP3 DUP5 ADD MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0x957 SWAP1 DUP3 PUSH2 0x2AA1 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x96C SWAP1 DUP3 PUSH2 0x2AA1 JUMP JUMPDEST POP PUSH1 0x40 SWAP2 DUP3 ADD MLOAD PUSH1 0x2 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD CALLER SWAP1 DUP3 SWAP1 PUSH32 0xEC2CD236ED6D37BF5A71276AC93889DB12834493A090EFD543A3D2ECA8DCDCC8 SWAP1 PUSH2 0x9ED SWAP1 DUP8 SWAP1 PUSH2 0x232E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP1 DUP3 ADD DUP4 MSTORE DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0xA20 DUP3 PUSH2 0x15B3 JUMP JUMPDEST PUSH2 0xA86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20646F6573206E6F74206578697374000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH2 0xAAE SWAP1 PUSH2 0x292D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xADA SWAP1 PUSH2 0x292D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB27 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAFC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB27 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB0A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0xB40 SWAP1 PUSH2 0x292D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB6C SWAP1 PUSH2 0x292D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBB9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB8E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBB9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB9C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x2 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0xC05 SWAP1 PUSH2 0x292D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC31 SWAP1 PUSH2 0x292D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC7E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC53 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC7E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC61 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xC93 SWAP1 PUSH2 0x292D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCBF SWAP1 PUSH2 0x292D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD0C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCE1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD0C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCEF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x2 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 JUMP JUMPDEST PUSH2 0xD3A PUSH2 0x174B JUMP JUMPDEST PUSH2 0xD44 PUSH1 0x0 PUSH2 0x1821 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xD4E PUSH2 0x174B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xDCB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x6 SLOAD PUSH2 0xE22 SWAP2 SWAP1 PUSH2 0x2BEA JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE96 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEBA SWAP2 SWAP1 PUSH2 0x2C14 JUMP JUMPDEST LT ISZERO PUSH2 0xF22 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420555344432062616C616E636500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFA0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFC4 SWAP2 SWAP1 PUSH2 0x2C2D JUMP JUMPDEST PUSH2 0x102A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x55534443207472616E73666572206661696C6564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x0 PUSH2 0x103E DUP4 DUP6 PUSH2 0x2C01 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1060 CALLER DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x179E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE DUP7 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP8 SWAP1 MSTORE CALLER DUP3 DUP5 ADD MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0x1096 SWAP1 DUP3 PUSH2 0x2AA1 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x10AB SWAP1 DUP3 PUSH2 0x2AA1 JUMP JUMPDEST POP PUSH1 0x40 SWAP2 DUP3 ADD MLOAD PUSH1 0x2 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD CALLER SWAP1 DUP3 SWAP1 PUSH32 0xEC2CD236ED6D37BF5A71276AC93889DB12834493A090EFD543A3D2ECA8DCDCC8 SWAP1 PUSH2 0x112C SWAP1 DUP9 SWAP1 PUSH2 0x232E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x870 CALLER DUP4 DUP4 PUSH2 0x1898 JUMP JUMPDEST PUSH2 0x114E PUSH2 0x174B JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11E6 SWAP2 SWAP1 PUSH2 0x2C14 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1252 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F205553444320746F20776974686472617700000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x128F PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1301 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1325 SWAP2 SWAP1 PUSH2 0x2C2D JUMP JUMPDEST PUSH2 0x138B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x55534443207472616E73666572206661696C6564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x675 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1396 PUSH2 0x174B JUMP JUMPDEST SELFBALANCE DUP1 PUSH2 0x13FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2045544820746F2077697468647261770000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x870 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x144D PUSH2 0x174B JUMP JUMPDEST PUSH1 0x5 DUP3 SWAP1 SSTORE PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x945C1C4E99AA89F648FBFE3DF471B916F719E16D960FCEC0737D4D56BD696838 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x14EE JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1545 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x675 JUMP JUMPDEST PUSH2 0x76E DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1980 JUMP JUMPDEST PUSH2 0x155A PUSH2 0x174B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x15AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x675 JUMP JUMPDEST PUSH2 0x138B DUP2 PUSH2 0x1821 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x15CF SWAP1 PUSH2 0x292D JUMP JUMPDEST SWAP1 POP GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x15E6 DUP4 PUSH2 0x1A5B JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1606 JUMPI PUSH2 0x1606 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1630 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x163A JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x16E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x675 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH2 0x1737 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x675 JUMP JUMPDEST PUSH2 0x1744 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1B3D JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xD44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x675 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x17EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x76E PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1B3D JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x18E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x675 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x19D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x675 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH2 0x1A20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x1A52 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1B3D JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1AA4 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1AD0 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1AEE JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1B06 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1B1A JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1B2C JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x51F JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B49 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1B9D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND ISZERO PUSH2 0x1744 JUMPI DUP3 MLOAD CALLER SWAP1 PUSH1 0x1 SUB PUSH2 0x1B8F JUMPI PUSH1 0x20 DUP5 DUP2 ADD MLOAD SWAP1 DUP5 ADD MLOAD PUSH2 0x1B88 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1E7F JUMP JUMPDEST POP POP PUSH2 0x76E JUMP JUMPDEST PUSH2 0x76E DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x2071 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x1BE5 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x675 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1D52 JUMPI PUSH1 0x20 DUP2 DUP2 MUL DUP6 DUP2 ADD DUP3 ADD MLOAD SWAP1 DUP6 ADD SWAP1 SWAP2 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND ISZERO PUSH2 0x1CE9 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1CB5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x84 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND ISZERO PUSH2 0x1D48 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1D42 SWAP1 DUP5 SWAP1 PUSH2 0x2C01 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x1BE9 JUMP JUMPDEST POP DUP3 MLOAD PUSH1 0x1 SUB PUSH2 0x1DFA JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x0 SWAP1 PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP2 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1DEB SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x1744 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1E70 SWAP3 SWAP2 SWAP1 PUSH2 0x2C4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND EXTCODESIZE ISZERO PUSH2 0x76E JUMPI PUSH1 0x40 MLOAD PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x1EF6 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2C78 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1F4F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1F4C SWAP2 DUP2 ADD SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1FDE JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1F7D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1F82 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1FD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x675 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 EQ PUSH2 0x1A52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x675 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND EXTCODESIZE ISZERO PUSH2 0x76E JUMPI PUSH1 0x40 MLOAD PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x20E8 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2CE5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2141 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x213E SWAP2 DUP2 ADD SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x216F JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1F7D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1F82 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 EQ PUSH2 0x1A52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x675 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x223E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2247 DUP4 PUSH2 0x2202 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x138B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x22A0 DUP2 PUSH2 0x2255 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22DB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x22C3 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x22FC DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x22C0 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x22A0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x22E4 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x23B7 JUMPI PUSH2 0x23B7 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x23D9 JUMPI PUSH2 0x23D9 PUSH2 0x2341 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x23F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2409 PUSH2 0x2404 DUP4 PUSH2 0x23BF JUMP JUMPDEST PUSH2 0x2370 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x242B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2447 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x2430 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x247D JUMPI PUSH2 0x247D PUSH2 0x2341 JUMP JUMPDEST PUSH2 0x24AE PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 ADD AND ADD PUSH2 0x2370 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x24C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x24F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2501 DUP7 PUSH2 0x2202 JUMP JUMPDEST SWAP5 POP PUSH2 0x250F PUSH1 0x20 DUP8 ADD PUSH2 0x2202 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x252C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2538 DUP10 DUP4 DUP11 ADD PUSH2 0x23E3 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x254E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x255A DUP10 DUP4 DUP11 ADD PUSH2 0x23E3 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2570 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257D DUP9 DUP3 DUP10 ADD PUSH2 0x2452 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x259D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x25B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x25C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x25D9 PUSH2 0x2404 DUP4 PUSH2 0x23BF JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x25F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x261D JUMPI PUSH2 0x260E DUP7 PUSH2 0x2202 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x25FD JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x2633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2640 DUP6 DUP3 DUP7 ADD PUSH2 0x23E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x267B JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x265F JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x22A0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x264A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26CE DUP5 DUP3 DUP6 ADD PUSH2 0x2452 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x26EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2703 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x270F DUP8 DUP4 DUP9 ADD PUSH2 0x2452 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2732 DUP7 DUP3 DUP8 ADD PUSH2 0x2452 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH1 0x60 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x275F PUSH1 0x80 DUP5 ADD DUP3 PUSH2 0x22E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP5 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP5 DUP4 SUB ADD PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x279A DUP3 DUP3 PUSH2 0x22E4 JUMP JUMPDEST SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP6 ADD MLOAD AND PUSH1 0x60 DUP5 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x27DA PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x22E4 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x27EC DUP2 DUP7 PUSH2 0x22E4 JUMP JUMPDEST SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2825 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22A0 DUP3 PUSH2 0x2202 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x138B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x284F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2858 DUP4 PUSH2 0x2202 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2868 DUP2 PUSH2 0x282E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2886 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x288F DUP4 PUSH2 0x2202 JUMP JUMPDEST SWAP2 POP PUSH2 0x289D PUSH1 0x20 DUP5 ADD PUSH2 0x2202 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x28E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28E9 DUP7 PUSH2 0x2202 JUMP JUMPDEST SWAP5 POP PUSH2 0x28F7 PUSH1 0x20 DUP8 ADD PUSH2 0x2202 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2921 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x257D DUP9 DUP3 DUP10 ADD PUSH2 0x2452 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2941 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x297A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD PUSH2 0x298E DUP2 PUSH2 0x292D JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x29A6 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x29D9 JUMPI PUSH2 0x2A08 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x2A08 JUMP JUMPDEST DUP9 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x29FF JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x29E6 JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP POP POP POP DUP4 MLOAD PUSH2 0x2A1C DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x22C0 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2A9C JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2A7D JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x76E JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2A89 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2ABB JUMPI PUSH2 0x2ABB PUSH2 0x2341 JUMP JUMPDEST PUSH2 0x2ACF DUP2 PUSH2 0x2AC9 DUP5 SLOAD PUSH2 0x292D JUMP JUMPDEST DUP5 PUSH2 0x2A54 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2B22 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2AEC JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x76E JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2B6F JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2B50 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x2BAB JUMPI DUP8 DUP6 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x51F JUMPI PUSH2 0x51F PUSH2 0x2BBB JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x51F JUMPI PUSH2 0x51F PUSH2 0x2BBB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x22A0 DUP2 PUSH2 0x282E JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2C5D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x264A JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2C6F DUP2 DUP6 PUSH2 0x264A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2CBD PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x22E4 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x22A0 DUP2 PUSH2 0x2255 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0xA0 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2D1E PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x264A JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2D30 DUP2 DUP7 PUSH2 0x264A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x2D44 DUP2 DUP6 PUSH2 0x22E4 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x8FDEFAB80797B148791EF0EFECA74A6A908E DUP9 0xE0 0xDB PUSH5 0x892124F456 PUSH28 0xF75D64736F6C63430008180033000000000000000000000000000000 ","sourceMap":"280:5169:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2245:132:2;;;;;;;;;;-1:-1:-1;2245:132:2;;;;;:::i;:::-;;:::i;:::-;;;620:25:21;;;608:2;593:18;2245:132:2;;;;;;;;1378:305;;;;;;;;;;-1:-1:-1;1378:305:2;;;;;:::i;:::-;;:::i;:::-;;;1253:14:21;;1246:22;1228:41;;1216:2;1201:18;1378:305:2;1088:187:21;4185:223:20;;;;;;;;;;-1:-1:-1;4185:223:20;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;393:23::-;;;;;;;;;;-1:-1:-1;393:23:20;;;;;;;;;;;2471:42:21;2459:55;;;2441:74;;2429:2;2414:18;393:23:20;2280:241:21;4012:429:2;;;;;;;;;;-1:-1:-1;4012:429:2;;;;;:::i;:::-;;:::i;:::-;;2534:552;;;;;;;;;;-1:-1:-1;2534:552:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3998:103:20:-;;;;;;;;;;-1:-1:-1;3998:103:20;;;;;:::i;:::-;;:::i;1608:574::-;;;;;;:::i;:::-;;:::i;510:41::-;;;;;;;;;;;;;;;;3326:193;;;;;;;;;;-1:-1:-1;3326:193:20;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;871:54::-;;;;;;;;;;-1:-1:-1;871:54:20;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;2293:101:0:-;;;;;;;;;;;;;:::i;5260:187:20:-;;;;;;;;;;-1:-1:-1;5260:187:20;;;;;:::i;:::-;;:::i;1638:85:0:-;;;;;;;;;;-1:-1:-1;1710:6:0;;;;1638:85;;442:40:20;;;;;;;;;;;;;;;;2405:803;;;;;;;;;;-1:-1:-1;2405:803:20;;;;;:::i;:::-;;:::i;3154:144:2:-;;;;;;;;;;-1:-1:-1;3154:144:2;;;;;:::i;:::-;;:::i;4939:244:20:-;;;;;;;;;;;;;:::i;4675:194::-;;;;;;;;;;;;;:::i;3365:157:2:-;;;;;;;;;;-1:-1:-1;3365:157:2;;;;;:::i;:::-;3478:27;;;;3455:4;3478:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3365:157;3667:219:20;;;;;;;;;;-1:-1:-1;3667:219:20;;;;;:::i;:::-;;:::i;3589:351:2:-;;;;;;;;;;-1:-1:-1;3589:351:2;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;2245:132:2:-;2322:7;2348:13;;;;;;;;;;;:22;;;;;;;;;;;2245:132;;;;;:::o;1378:305::-;1480:4;1515:41;;;1530:26;1515:41;;:109;;-1:-1:-1;1572:52:2;;;1587:37;1572:52;1515:109;:161;;;-1:-1:-1;877:25:15;862:40;;;;1640:36:2;763:146:15;4185:223:20;4245:13;4278:16;4286:7;4278;:16::i;:::-;4270:60;;;;;;;11707:2:21;4270:60:20;;;11689:21:21;11746:2;11726:18;;;11719:30;11785:33;11765:18;;;11758:61;11836:18;;4270:60:20;;;;;;;;;4371:8;4381:18;:7;:16;:18::i;:::-;4354:46;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4340:61;;4185:223;;;:::o;4012:429:2:-;735:10:10;4249:14:2;;;;;;;;:49;;-1:-1:-1;3478:27:2;;;;3455:4;3478:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;4267:31;4249:49;4245:129;;;4321:42;;;;;13701::21;13770:15;;;4321:42:2;;;13752:34:21;13822:15;;13802:18;;;13795:43;13664:18;;4321:42:2;13517:327:21;4245:129:2;4383:51;4406:4;4412:2;4416:3;4421:6;4429:4;4383:22;:51::i;:::-;4196:245;4012:429;;;;;:::o;2534:552::-;2658:16;2709:3;:10;2690:8;:15;:29;2686:121;;2768:10;;2780:15;;2742:54;;;;;;;;14023:25:21;;;;14064:18;;;14057:34;13996:18;;2742:54:2;13849:248:21;2686:121:2;2817:30;2864:8;:15;2850:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2850:30:2;;2817:63;;2896:9;2891:158;2915:8;:15;2911:1;:19;2891:158;;;16302:4:8;16293:14;;;16273:35;;;16267:42;2970:68:2;;16302:4:8;16293:14;;;16273:35;;;16267:42;2245:132:2;:::i;2970:68::-;2951:13;2965:1;2951:16;;;;;;;;:::i;:::-;;;;;;;;;;:87;2932:3;;2891:158;;;-1:-1:-1;3066:13:2;2534:552;-1:-1:-1;;;2534:552:2:o;3998:103:20:-;1531:13:0;:11;:13::i;:::-;4073:8:20::1;:21;4084:10:::0;4073:8;:21:::1;:::i;:::-;;3998:103:::0;:::o;1608:574::-;1761:7;1746:12;;:22;;;;:::i;:::-;1733:9;:35;;1725:69;;;;;;;17103:2:21;1725:69:20;;;17085:21:21;17142:2;17122:18;;;17115:30;17181:23;17161:18;;;17154:51;17222:18;;1725:69:20;16901:345:21;1725:69:20;1831:15;;;;1875:1;;1813:15;1856:20;1875:1;1831:15;1856:20;:::i;:::-;;;;;;;;1895:39;1901:10;1913:7;1922;1895:39;;;;;;;;;;;;:5;:39::i;:::-;1978:128;;;;;;;;;;;;;;;;;;2085:10;1978:128;;;;-1:-1:-1;1953:22:20;;;:13;:22;;;;;;;:153;;:22;;:153;;:22;:153;:::i;:::-;-1:-1:-1;1953:153:20;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1953:153:20;;;;;;;;;;;;;;;;;;;;;;;;2130:45;2151:10;;2142:7;;2130:45;;;;2163:11;;2130:45;:::i;:::-;;;;;;;;1715:467;1608:574;;;:::o;3326:193::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;3432:16:20;3440:7;3432;:16::i;:::-;3424:49;;;;;;;17583:2:21;3424:49:20;;;17565:21:21;17622:2;17602:18;;;17595:30;17661:22;17641:18;;;17634:50;17701:18;;3424:49:20;17381:344:21;3424:49:20;3490:22;;;;:13;:22;;;;;;;3483:29;;;;;;;;;;;;3490:22;;3483:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3483:29:20;;;-1:-1:-1;;3483:29:20;;;;;;;;;;;;;;3326:193;-1:-1:-1;;3326:193:20:o;871:54::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;871:54:20;;;;;;;-1:-1:-1;;871:54:20;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;5260:187:20:-;1531:13:0;:11;:13::i;:::-;5348:28:20::1;::::0;::::1;5340:56;;;::::0;::::1;::::0;;17932:2:21;5340:56:20::1;::::0;::::1;17914:21:21::0;17971:2;17951:18;;;17944:30;18010:17;17990:18;;;17983:45;18045:18;;5340:56:20::1;17730:339:21::0;5340:56:20::1;5406:9;:34:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;5260:187::o;2405:803::-;2515:18;2552:7;2536:13;;:23;;;;:::i;:::-;2577:9;;;:31;;;;;2597:10;2577:31;;;2441:74:21;;;;2515:44:20;;-1:-1:-1;2515:44:20;;2577:9;;;:19;;2414:18:21;;2577:31:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;2569:83;;;;;;;18465:2:21;2569:83:20;;;18447:21:21;18504:2;18484:18;;;18477:30;18543:27;18523:18;;;18516:55;18588:18;;2569:83:20;18263:349:21;2569:83:20;2734:9;;;:61;;;;;2757:10;2734:61;;;18880:34:21;;;;2777:4:20;18930:18:21;;;18923:43;18982:18;;;18975:34;;;2734:9:20;;;:22;;18792:18:21;;2734:61:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2726:94;;;;;;;19472:2:21;2726:94:20;;;19454:21:21;19511:2;19491:18;;;19484:30;19550:22;19530:18;;;19523:50;19590:18;;2726:94:20;19270:344:21;2726:94:20;2857:15;;;;2901:1;;2839:15;2882:20;2901:1;2857:15;2882:20;:::i;:::-;;;;;;;;2921:39;2927:10;2939:7;2948;2921:39;;;;;;;;;;;;:5;:39::i;:::-;3004:128;;;;;;;;;;;;;;;;;;3111:10;3004:128;;;;-1:-1:-1;2979:22:20;;;:13;:22;;;;;;;:153;;:22;;:153;;:22;:153;:::i;:::-;-1:-1:-1;2979:153:20;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2979:153:20;;;;;;;;;;;;;;;;;;;;;;;;3156:45;3177:10;;3168:7;;3156:45;;;;3189:11;;3156:45;:::i;:::-;;;;;;;;2505:703;;2405:803;;;:::o;3154:144:2:-;3239:52;735:10:10;3272:8:2;3282;3239:18;:52::i;4939:244:20:-;1531:13:0;:11;:13::i;:::-;5010:9:20::1;::::0;;:34:::1;::::0;;;;5038:4:::1;5010:34:::0;;::::1;2441:74:21::0;;;;4992:15:20::1;::::0;5010:9:::1;::::0;;::::1;::::0;:19:::1;::::0;2414:18:21;;5010:34:20::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4992:52;;5072:1;5062:7;:11;5054:43;;;::::0;::::1;::::0;;19821:2:21;5054:43:20::1;::::0;::::1;19803:21:21::0;19860:2;19840:18;;;19833:30;19899:21;19879:18;;;19872:49;19938:18;;5054:43:20::1;19619:343:21::0;5054:43:20::1;5115:9;::::0;::::1;;:18;5134:7;1710:6:0::0;;;;;1638:85;5134:7:20::1;5115:36;::::0;;::::1;::::0;;;;;;20171:42:21;20159:55;;;5115:36:20::1;::::0;::::1;20141:74:21::0;20231:18;;;20224:34;;;20114:18;;5115:36:20::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5107:69;;;::::0;::::1;::::0;;19472:2:21;5107:69:20::1;::::0;::::1;19454:21:21::0;19511:2;19491:18;;;19484:30;19550:22;19530:18;;;19523:50;19590:18;;5107:69:20::1;19270:344:21::0;5107:69:20::1;4982:201;4939:244::o:0;4675:194::-;1531:13:0;:11;:13::i;:::-;4745:21:20::1;4784:11:::0;4776:42:::1;;;::::0;::::1;::::0;;20471:2:21;4776:42:20::1;::::0;::::1;20453:21:21::0;20510:2;20490:18;;;20483:30;20549:20;20529:18;;;20522:48;20587:18;;4776:42:20::1;20269:342:21::0;4776:42:20::1;1710:6:0::0;;4828:34:20::1;::::0;1710:6:0;;;;;4828:34:20;::::1;;;::::0;4854:7;;4828:34:::1;::::0;;;4854:7;1710:6:0;4828:34:20;::::1;;;;;;;;;;;;;::::0;::::1;;;;3667:219:::0;1531:13:0;:11;:13::i;:::-;3761:12:20::1;:26:::0;;;3797:13:::1;:28:::0;;;3840:39:::1;::::0;;14023:25:21;;;14079:2;14064:18;;14057:34;;;3840:39:20::1;::::0;13996:18:21;3840:39:20::1;;;;;;;3667:219:::0;;:::o;3589:351:2:-;735:10:10;3755:14:2;;;;;;;;:49;;-1:-1:-1;3478:27:2;;;;3455:4;3478:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;3773:31;3755:49;3751:129;;;3827:42;;;;;13701::21;13770:15;;;3827:42:2;;;13752:34:21;13822:15;;13802:18;;;13795:43;13664:18;;3827:42:2;13517:327:21;3751:129:2;3889:44;3907:4;3913:2;3917;3921:5;3928:4;3889:17;:44::i;2543:215:0:-;1531:13;:11;:13::i;:::-;2627:22:::1;::::0;::::1;2623:91;;2672:31;::::0;::::1;::::0;;2700:1:::1;2672:31;::::0;::::1;2441:74:21::0;2414:18;;2672:31:0::1;2280:241:21::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;4470:136:20:-:0;4527:4;4556:22;;;:13;:22;;;;;4550:45;;4527:4;;4556:22;4550:45;;;:::i;:::-;;;:49;4543:56;;4470:136;;;:::o;987:632:14:-;1043:13;1092:14;1109:17;1120:5;1109:10;:17::i;:::-;1129:1;1109:21;1092:38;;1144:20;1178:6;1167:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1167:18:14;-1:-1:-1;1144:41:14;-1:-1:-1;1274:28:14;;;1290:2;1274:28;1329:247;1360:5;;1464:10;1459:2;1448:14;;1443:32;1360:5;1430:46;1520:2;1511:11;;;-1:-1:-1;1540:21:14;1329:247;1540:21;-1:-1:-1;1596:6:14;987:632;-1:-1:-1;;;987:632:14:o;9023:445:2:-;9216:16;;;9212:88;;9255:34;;;;;9286:1;9255:34;;;2441:74:21;2414:18;;9255:34:2;2280:241:21;9212:88:2;9313:18;;;9309:88;;9354:32;;;;;9383:1;9354:32;;;2441:74:21;2414:18;;9354:32:2;2280:241:21;9309:88:2;9406:55;9433:4;9439:2;9443:3;9448:6;9456:4;9406:26;:55::i;:::-;9023:445;;;;;:::o;1796:162:0:-;1710:6;;1855:23;1710:6;735:10:10;1855:23:0;1851:101;;1901:40;;;;;735:10:10;1901:40:0;;;2441:74:21;2414:18;;1901:40:0;2280:241:21;10754:346:2;10850:16;;;10846:88;;10889:34;;;;;10920:1;10889:34;;;2441:74:21;2414:18;;10889:34:2;2280:241:21;10846:88:2;13974:4;13968:11;;14044:1;14029:17;;;14175:4;14163:17;;14156:35;;;14292:17;;;14322;;;13815:23;14359:17;;14352:35;;;14495:17;;;14482:31;;;13968:11;11032:61;-1:-1:-1;11071:2:2;13968:11;14292:17;11088:4;11032:26;:61::i;2912:187:0:-;3004:6;;;;3020:17;;;;;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;13276:315:2:-;13383:22;;;13379:94;;13428:34;;;;;13459:1;13428:34;;;2441:74:21;2414:18;;13428:34:2;2280:241:21;13379:94:2;13482:25;;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;;;;;;;;;;;;13543:41;;1228::21;;;13543::2;;1201:18:21;13543:41:2;;;;;;;13276:315;;;:::o;8159:463::-;8281:16;;;8277:88;;8320:34;;;;;8351:1;8320:34;;;2441:74:21;2414:18;;8320:34:2;2280:241:21;8277:88:2;8378:18;;;8374:88;;8419:32;;;;;8448:1;8419:32;;;2441:74:21;2414:18;;8419:32:2;2280:241:21;8374:88:2;13974:4;13968:11;;14044:1;14029:17;;;14175:4;14163:17;;14156:35;;;14292:17;;;14322;;;13815:23;14359:17;;14352:35;;;14495:17;;;14482:31;;;13968:11;8560:55;8587:4;8593:2;13968:11;14292:17;8610:4;8560:26;:55::i;:::-;8267:355;;8159:463;;;;;:::o;25316:916:17:-;25369:7;;25453:8;25444:17;;25440:103;;25490:8;25481:17;;;-1:-1:-1;25526:2:17;25516:12;25440:103;25569:8;25560:5;:17;25556:103;;25606:8;25597:17;;;-1:-1:-1;25642:2:17;25632:12;25556:103;25685:8;25676:5;:17;25672:103;;25722:8;25713:17;;;-1:-1:-1;25758:2:17;25748:12;25672:103;25801:7;25792:5;:16;25788:100;;25837:7;25828:16;;;-1:-1:-1;25872:1:17;25862:11;25788:100;25914:7;25905:5;:16;25901:100;;25950:7;25941:16;;;-1:-1:-1;25985:1:17;25975:11;25901:100;26027:7;26018:5;:16;26014:100;;26063:7;26054:16;;;-1:-1:-1;26098:1:17;26088:11;26014:100;26140:7;26131:5;:16;26127:66;;26177:1;26167:11;26219:6;25316:916;-1:-1:-1;;25316:916:17:o;7002:700:2:-;7203:30;7211:4;7217:2;7221:3;7226:6;7203:7;:30::i;:::-;7247:16;;;;7243:453;;7328:10;;735::10;;7342:1:2;7328:15;7324:362;;16302:4:8;16273:35;;;16267:42;16273:35;;;16267:42;7481:72:2;7517:8;7527:4;7533:2;16267:42:8;;7548:4:2;7481:35;:72::i;:::-;7345:223;;7324:362;;;7592:79;7633:8;7643:4;7649:2;7653:3;7658:6;7666:4;7592:40;:79::i;5142:1281::-;5277:6;:13;5263:3;:10;:27;5259:117;;5339:10;;5351:13;;5313:52;;;;;;;;14023:25:21;;;;14064:18;;;14057:34;13996:18;;5313:52:2;13849:248:21;5259:117:2;735:10:10;5386:16:2;5428:691;5452:3;:10;5448:1;:14;5428:691;;;16302:4:8;16293:14;;;16273:35;;;;;16267:42;16273:35;;;;;;16267:42;5598:18:2;;;;5594:420;;5636:19;5658:13;;;;;;;;;;;:19;;;;;;;;;;;5699;;;5695:129;;;5749:56;;;;;21066:42:21;21054:55;;5749:56:2;;;21036:74:21;21126:18;;;21119:34;;;21169:18;;;21162:34;;;21212:18;;;21205:34;;;21008:19;;5749:56:2;20805:440:21;5695:129:2;5940:9;:13;;;;;;;;;;;:19;;;;;;;;;;5962;;;;5940:41;;5594:420;6032:16;;;;6028:81;;6068:9;:13;;;;;;;;;;;:17;;;;;;;;;;:26;;6089:5;;6068:9;:26;;6089:5;;6068:26;:::i;:::-;;;;-1:-1:-1;;6028:81:2;-1:-1:-1;;5464:3:2;;5428:691;;;;6133:3;:10;6147:1;6133:15;6129:288;;16302:4:8;16273:35;;16267:42;6164:10:2;;16302:4:8;16273:35;;16267:42;6164:38:2;;-1:-1:-1;6310:2:2;6279:45;;6304:4;6279:45;;6294:8;6279:45;;;6314:2;6318:5;6279:45;;;;;;14023:25:21;;;14079:2;14064:18;;14057:34;14011:2;13996:18;;13849:248;6279:45:2;;;;;;;;6150:185;;6129:288;;;6390:2;6360:46;;6384:4;6360:46;;6374:8;6360:46;;;6394:3;6399:6;6360:46;;;;;;;:::i;:::-;;;;;;;;5249:1174;5142:1281;;;;:::o;998:959:6:-;1197:14;;;;:18;1193:758;;1235:71;;;;;:38;;;;;;:71;;1274:8;;1284:4;;1290:2;;1294:5;;1301:4;;1235:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1235:71:6;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1231:710;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1605:6;:13;1622:1;1605:18;1601:326;;1710:41;;;;;2471:42:21;2459:55;;1710:41:6;;;2441:74:21;2414:18;;1710:41:6;2280:241:21;1601:326:6;1879:6;1873:13;1864:6;1860:2;1856:15;1849:38;1231:710;1355:55;;;1367:43;1355:55;1351:189;;1480:41;;;;;2471:42:21;2459:55;;1480:41:6;;;2441:74:21;2414:18;;1480:41:6;2280:241:21;2505:1026:6;2729:14;;;;:18;2725:800;;2767:78;;;;;:43;;;;;;:78;;2811:8;;2821:4;;2827:3;;2832:6;;2840:4;;2767:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2767:78:6;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;2763:752;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2924:60;;;2936:48;2924:60;2920:194;;3054:41;;;;;2471:42:21;2459:55;;3054:41:6;;;2441:74:21;2414:18;;3054:41:6;2280:241:21;14:196;82:20;;142:42;131:54;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:254::-;283:6;291;344:2;332:9;323:7;319:23;315:32;312:52;;;360:1;357;350:12;312:52;383:29;402:9;383:29;:::i;:::-;373:39;459:2;444:18;;;;431:32;;-1:-1:-1;;;215:254:21:o;656:177::-;741:66;734:5;730:78;723:5;720:89;710:117;;823:1;820;813:12;838:245;896:6;949:2;937:9;928:7;924:23;920:32;917:52;;;965:1;962;955:12;917:52;1004:9;991:23;1023:30;1047:5;1023:30;:::i;:::-;1072:5;838:245;-1:-1:-1;;;838:245:21:o;1280:180::-;1339:6;1392:2;1380:9;1371:7;1367:23;1363:32;1360:52;;;1408:1;1405;1398:12;1360:52;-1:-1:-1;1431:23:21;;1280:180;-1:-1:-1;1280:180:21:o;1465:250::-;1550:1;1560:113;1574:6;1571:1;1568:13;1560:113;;;1650:11;;;1644:18;1631:11;;;1624:39;1596:2;1589:10;1560:113;;;-1:-1:-1;;1707:1:21;1689:16;;1682:27;1465:250::o;1720:330::-;1762:3;1800:5;1794:12;1827:6;1822:3;1815:19;1843:76;1912:6;1905:4;1900:3;1896:14;1889:4;1882:5;1878:16;1843:76;:::i;:::-;1964:2;1952:15;1969:66;1948:88;1939:98;;;;2039:4;1935:109;;1720:330;-1:-1:-1;;1720:330:21:o;2055:220::-;2204:2;2193:9;2186:21;2167:4;2224:45;2265:2;2254:9;2250:18;2242:6;2224:45;:::i;2526:184::-;2578:77;2575:1;2568:88;2675:4;2672:1;2665:15;2699:4;2696:1;2689:15;2715:334;2786:2;2780:9;2842:2;2832:13;;2847:66;2828:86;2816:99;;2945:18;2930:34;;2966:22;;;2927:62;2924:88;;;2992:18;;:::i;:::-;3028:2;3021:22;2715:334;;-1:-1:-1;2715:334:21:o;3054:183::-;3114:4;3147:18;3139:6;3136:30;3133:56;;;3169:18;;:::i;:::-;-1:-1:-1;3214:1:21;3210:14;3226:4;3206:25;;3054:183::o;3242:668::-;3296:5;3349:3;3342:4;3334:6;3330:17;3326:27;3316:55;;3367:1;3364;3357:12;3316:55;3403:6;3390:20;3429:4;3453:60;3469:43;3509:2;3469:43;:::i;:::-;3453:60;:::i;:::-;3535:3;3559:2;3554:3;3547:15;3587:4;3582:3;3578:14;3571:21;;3644:4;3638:2;3635:1;3631:10;3623:6;3619:23;3615:34;3601:48;;3672:3;3664:6;3661:15;3658:35;;;3689:1;3686;3679:12;3658:35;3725:4;3717:6;3713:17;3739:142;3755:6;3750:3;3747:15;3739:142;;;3821:17;;3809:30;;3859:12;;;;3772;;3739:142;;;-1:-1:-1;3899:5:21;3242:668;-1:-1:-1;;;;;;3242:668:21:o;3915:589::-;3957:5;4010:3;4003:4;3995:6;3991:17;3987:27;3977:55;;4028:1;4025;4018:12;3977:55;4064:6;4051:20;4090:18;4086:2;4083:26;4080:52;;;4112:18;;:::i;:::-;4156:114;4264:4;4195:66;4188:4;4184:2;4180:13;4176:86;4172:97;4156:114;:::i;:::-;4295:2;4286:7;4279:19;4341:3;4334:4;4329:2;4321:6;4317:15;4313:26;4310:35;4307:55;;;4358:1;4355;4348:12;4307:55;4423:2;4416:4;4408:6;4404:17;4397:4;4388:7;4384:18;4371:55;4471:1;4446:16;;;4464:4;4442:27;4435:38;;;;4450:7;3915:589;-1:-1:-1;;;3915:589:21:o;4509:943::-;4663:6;4671;4679;4687;4695;4748:3;4736:9;4727:7;4723:23;4719:33;4716:53;;;4765:1;4762;4755:12;4716:53;4788:29;4807:9;4788:29;:::i;:::-;4778:39;;4836:38;4870:2;4859:9;4855:18;4836:38;:::i;:::-;4826:48;;4925:2;4914:9;4910:18;4897:32;4948:18;4989:2;4981:6;4978:14;4975:34;;;5005:1;5002;4995:12;4975:34;5028:61;5081:7;5072:6;5061:9;5057:22;5028:61;:::i;:::-;5018:71;;5142:2;5131:9;5127:18;5114:32;5098:48;;5171:2;5161:8;5158:16;5155:36;;;5187:1;5184;5177:12;5155:36;5210:63;5265:7;5254:8;5243:9;5239:24;5210:63;:::i;:::-;5200:73;;5326:3;5315:9;5311:19;5298:33;5282:49;;5356:2;5346:8;5343:16;5340:36;;;5372:1;5369;5362:12;5340:36;;5395:51;5438:7;5427:8;5416:9;5412:24;5395:51;:::i;:::-;5385:61;;;4509:943;;;;;;;;:::o;5457:1146::-;5575:6;5583;5636:2;5624:9;5615:7;5611:23;5607:32;5604:52;;;5652:1;5649;5642:12;5604:52;5692:9;5679:23;5721:18;5762:2;5754:6;5751:14;5748:34;;;5778:1;5775;5768:12;5748:34;5816:6;5805:9;5801:22;5791:32;;5861:7;5854:4;5850:2;5846:13;5842:27;5832:55;;5883:1;5880;5873:12;5832:55;5919:2;5906:16;5941:4;5965:60;5981:43;6021:2;5981:43;:::i;5965:60::-;6059:15;;;6141:1;6137:10;;;;6129:19;;6125:28;;;6090:12;;;;6165:19;;;6162:39;;;6197:1;6194;6187:12;6162:39;6221:11;;;;6241:148;6257:6;6252:3;6249:15;6241:148;;;6323:23;6342:3;6323:23;:::i;:::-;6311:36;;6274:12;;;;6367;;;;6241:148;;;6408:5;-1:-1:-1;;6451:18:21;;6438:32;;-1:-1:-1;;6482:16:21;;;6479:36;;;6511:1;6508;6501:12;6479:36;;6534:63;6589:7;6578:8;6567:9;6563:24;6534:63;:::i;:::-;6524:73;;;5457:1146;;;;;:::o;6608:439::-;6661:3;6699:5;6693:12;6726:6;6721:3;6714:19;6752:4;6781;6776:3;6772:14;6765:21;;6820:4;6813:5;6809:16;6843:1;6853:169;6867:6;6864:1;6861:13;6853:169;;;6928:13;;6916:26;;6962:12;;;;6997:15;;;;6889:1;6882:9;6853:169;;;-1:-1:-1;7038:3:21;;6608:439;-1:-1:-1;;;;;6608:439:21:o;7052:261::-;7231:2;7220:9;7213:21;7194:4;7251:56;7303:2;7292:9;7288:18;7280:6;7251:56;:::i;7318:321::-;7387:6;7440:2;7428:9;7419:7;7415:23;7411:32;7408:52;;;7456:1;7453;7446:12;7408:52;7496:9;7483:23;7529:18;7521:6;7518:30;7515:50;;;7561:1;7558;7551:12;7515:50;7584:49;7625:7;7616:6;7605:9;7601:22;7584:49;:::i;:::-;7574:59;7318:321;-1:-1:-1;;;;7318:321:21:o;7644:609::-;7741:6;7749;7757;7810:2;7798:9;7789:7;7785:23;7781:32;7778:52;;;7826:1;7823;7816:12;7778:52;7866:9;7853:23;7895:18;7936:2;7928:6;7925:14;7922:34;;;7952:1;7949;7942:12;7922:34;7975:49;8016:7;8007:6;7996:9;7992:22;7975:49;:::i;:::-;7965:59;;8077:2;8066:9;8062:18;8049:32;8033:48;;8106:2;8096:8;8093:16;8090:36;;;8122:1;8119;8112:12;8090:36;;8145:51;8188:7;8177:8;8166:9;8162:24;8145:51;:::i;:::-;8135:61;;;8243:2;8232:9;8228:18;8215:32;8205:42;;7644:609;;;;;:::o;8258:740::-;8449:2;8438:9;8431:21;8412:4;8487:6;8481:13;8530:4;8525:2;8514:9;8510:18;8503:32;8558:52;8605:3;8594:9;8590:19;8576:12;8558:52;:::i;:::-;8544:66;;8659:2;8651:6;8647:15;8641:22;8727:66;8715:9;8707:6;8703:22;8699:95;8694:2;8683:9;8679:18;8672:123;8818:41;8852:6;8836:14;8818:41;:::i;:::-;8804:55;;;8925:42;8919:2;8911:6;8907:15;8901:22;8897:71;8890:4;8879:9;8875:20;8868:101;8986:6;8978:14;;;8258:740;;;;:::o;9003:503::-;9228:2;9217:9;9210:21;9191:4;9254:45;9295:2;9284:9;9280:18;9272:6;9254:45;:::i;:::-;9347:9;9339:6;9335:22;9330:2;9319:9;9315:18;9308:50;9375:33;9401:6;9393;9375:33;:::i;:::-;9367:41;;;9456:42;9448:6;9444:55;9439:2;9428:9;9424:18;9417:83;9003:503;;;;;;:::o;9511:186::-;9570:6;9623:2;9611:9;9602:7;9598:23;9594:32;9591:52;;;9639:1;9636;9629:12;9591:52;9662:29;9681:9;9662:29;:::i;9933:118::-;10019:5;10012:13;10005:21;9998:5;9995:32;9985:60;;10041:1;10038;10031:12;10056:315;10121:6;10129;10182:2;10170:9;10161:7;10157:23;10153:32;10150:52;;;10198:1;10195;10188:12;10150:52;10221:29;10240:9;10221:29;:::i;:::-;10211:39;;10300:2;10289:9;10285:18;10272:32;10313:28;10335:5;10313:28;:::i;:::-;10360:5;10350:15;;;10056:315;;;;;:::o;10376:260::-;10444:6;10452;10505:2;10493:9;10484:7;10480:23;10476:32;10473:52;;;10521:1;10518;10511:12;10473:52;10544:29;10563:9;10544:29;:::i;:::-;10534:39;;10592:38;10626:2;10615:9;10611:18;10592:38;:::i;:::-;10582:48;;10376:260;;;;;:::o;10641:248::-;10709:6;10717;10770:2;10758:9;10749:7;10745:23;10741:32;10738:52;;;10786:1;10783;10776:12;10738:52;-1:-1:-1;;10809:23:21;;;10879:2;10864:18;;;10851:32;;-1:-1:-1;10641:248:21:o;10894:606::-;10998:6;11006;11014;11022;11030;11083:3;11071:9;11062:7;11058:23;11054:33;11051:53;;;11100:1;11097;11090:12;11051:53;11123:29;11142:9;11123:29;:::i;:::-;11113:39;;11171:38;11205:2;11194:9;11190:18;11171:38;:::i;:::-;11161:48;;11256:2;11245:9;11241:18;11228:32;11218:42;;11307:2;11296:9;11292:18;11279:32;11269:42;;11362:3;11351:9;11347:19;11334:33;11390:18;11382:6;11379:30;11376:50;;;11422:1;11419;11412:12;11376:50;11445:49;11486:7;11477:6;11466:9;11462:22;11445:49;:::i;11865:437::-;11944:1;11940:12;;;;11987;;;12008:61;;12062:4;12054:6;12050:17;12040:27;;12008:61;12115:2;12107:6;12104:14;12084:18;12081:38;12078:218;;12152:77;12149:1;12142:88;12253:4;12250:1;12243:15;12281:4;12278:1;12271:15;12078:218;;11865:437;;;:::o;12433:1079::-;12609:3;12638:1;12671:6;12665:13;12701:36;12727:9;12701:36;:::i;:::-;12756:1;12773:17;;;12799:191;;;;13004:1;12999:358;;;;12766:591;;12799:191;12847:66;12836:9;12832:82;12827:3;12820:95;12970:6;12963:14;12956:22;12948:6;12944:35;12939:3;12935:45;12928:52;;12799:191;;12999:358;13030:6;13027:1;13020:17;13060:4;13105;13102:1;13092:18;13132:1;13146:165;13160:6;13157:1;13154:13;13146:165;;;13238:14;;13225:11;;;13218:35;13281:16;;;;13175:10;;13146:165;;;13150:3;;;13340:6;13335:3;13331:16;13324:23;;12766:591;;;;;13388:6;13382:13;13404:68;13463:8;13458:3;13451:4;13443:6;13439:17;13404:68;:::i;:::-;13488:18;;12433:1079;-1:-1:-1;;;;12433:1079:21:o;14102:184::-;14154:77;14151:1;14144:88;14251:4;14248:1;14241:15;14275:4;14272:1;14265:15;14291:543;14393:2;14388:3;14385:11;14382:446;;;14429:1;14453:5;14450:1;14443:16;14497:4;14494:1;14484:18;14567:2;14555:10;14551:19;14548:1;14544:27;14538:4;14534:38;14603:4;14591:10;14588:20;14585:47;;;-1:-1:-1;14626:4:21;14585:47;14681:2;14676:3;14672:12;14669:1;14665:20;14659:4;14655:31;14645:41;;14736:82;14754:2;14747:5;14744:13;14736:82;;;14799:17;;;14780:1;14769:13;14736:82;;14382:446;14291:543;;;:::o;15070:1464::-;15196:3;15190:10;15223:18;15215:6;15212:30;15209:56;;;15245:18;;:::i;:::-;15274:97;15364:6;15324:38;15356:4;15350:11;15324:38;:::i;:::-;15318:4;15274:97;:::i;:::-;15426:4;;15483:2;15472:14;;15500:1;15495:782;;;;16321:1;16338:6;16335:89;;;-1:-1:-1;16390:19:21;;;16384:26;16335:89;14976:66;14967:1;14963:11;;;14959:84;14955:89;14945:100;15051:1;15047:11;;;14942:117;16437:81;;15465:1063;;15495:782;12380:1;12373:14;;;12417:4;12404:18;;15543:66;15531:79;;;15708:236;15722:7;15719:1;15716:14;15708:236;;;15811:19;;;15805:26;15790:42;;15903:27;;;;15871:1;15859:14;;;;15738:19;;15708:236;;;15712:3;15972:6;15963:7;15960:19;15957:261;;;16033:19;;;16027:26;16134:66;16116:1;16112:14;;;16128:3;16108:24;16104:97;16100:102;16085:118;16070:134;;15957:261;-1:-1:-1;;;;;16264:1:21;16248:14;;;16244:22;16231:36;;-1:-1:-1;15070:1464:21:o;16539:184::-;16591:77;16588:1;16581:88;16688:4;16685:1;16678:15;16712:4;16709:1;16702:15;16728:168;16801:9;;;16832;;16849:15;;;16843:22;;16829:37;16819:71;;16870:18;;:::i;17251:125::-;17316:9;;;17337:10;;;17334:36;;;17350:18;;:::i;18074:184::-;18144:6;18197:2;18185:9;18176:7;18172:23;18168:32;18165:52;;;18213:1;18210;18203:12;18165:52;-1:-1:-1;18236:16:21;;18074:184;-1:-1:-1;18074:184:21:o;19020:245::-;19087:6;19140:2;19128:9;19119:7;19115:23;19111:32;19108:52;;;19156:1;19153;19146:12;19108:52;19188:9;19182:16;19207:28;19229:5;19207:28;:::i;21250:465::-;21507:2;21496:9;21489:21;21470:4;21533:56;21585:2;21574:9;21570:18;21562:6;21533:56;:::i;:::-;21637:9;21629:6;21625:22;21620:2;21609:9;21605:18;21598:50;21665:44;21702:6;21694;21665:44;:::i;:::-;21657:52;21250:465;-1:-1:-1;;;;;21250:465:21:o;21720:584::-;21942:4;21971:42;22052:2;22044:6;22040:15;22029:9;22022:34;22104:2;22096:6;22092:15;22087:2;22076:9;22072:18;22065:43;;22144:6;22139:2;22128:9;22124:18;22117:34;22187:6;22182:2;22171:9;22167:18;22160:34;22231:3;22225;22214:9;22210:19;22203:32;22252:46;22293:3;22282:9;22278:19;22270:6;22252:46;:::i;:::-;22244:54;21720:584;-1:-1:-1;;;;;;;21720:584:21:o;22309:249::-;22378:6;22431:2;22419:9;22410:7;22406:23;22402:32;22399:52;;;22447:1;22444;22437:12;22399:52;22479:9;22473:16;22498:30;22522:5;22498:30;:::i;22563:850::-;22885:4;22914:42;22995:2;22987:6;22983:15;22972:9;22965:34;23047:2;23039:6;23035:15;23030:2;23019:9;23015:18;23008:43;;23087:3;23082:2;23071:9;23067:18;23060:31;23114:57;23166:3;23155:9;23151:19;23143:6;23114:57;:::i;:::-;23219:9;23211:6;23207:22;23202:2;23191:9;23187:18;23180:50;23253:44;23290:6;23282;23253:44;:::i;:::-;23239:58;;23346:9;23338:6;23334:22;23328:3;23317:9;23313:19;23306:51;23374:33;23400:6;23392;23374:33;:::i;:::-;23366:41;22563:850;-1:-1:-1;;;;;;;;22563:850:21:o"},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","getTokenMetadata(uint256)":"60316801","isApprovedForAll(address,address)":"e985e9c5","mintPriceETH()":"8f9a8837","mintPriceUSDC()":"5f853338","mintWithETH(string,string,uint256)":"5baae42d","mintWithUSDC(string,string,uint256)":"a1456765","owner()":"8da5cb5b","renounceOwnership()":"715018a6","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","setBaseURI(string)":"55f804b3","supportsInterface(bytes4)":"01ffc9a7","tokenMetadata(uint256)":"6914db60","transferOwnership(address)":"f2fde38b","updatePrices(uint256,uint256)":"ef88d7f0","updateUSDCAddress(address)":"7d81c4c1","uri(uint256)":"0e89341c","usdcToken()":"11eac855","withdrawETH()":"e086e5ec","withdrawUSDC()":"d8fc063d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdcAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPriceETH\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPriceUSDC\",\"type\":\"uint256\"}],\"name\":\"PriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"TokenMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getTokenMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"imageURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"internalType\":\"struct MultichainNFT.TokenMetadata\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintPriceETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintPriceUSDC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_imageURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_promptText\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintWithETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_imageURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_promptText\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintWithUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newBaseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenMetadata\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"imageURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPriceETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newPriceUSDC\",\"type\":\"uint256\"}],\"name\":\"updatePrices\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newUSDCAddress\",\"type\":\"address\"}],\"name\":\"updateUSDCAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdcToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"getTokenMetadata(uint256)\":{\"details\":\"Get the complete metadata for a token\",\"params\":{\"tokenId\":\"The ID of the token\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"mintWithETH(string,string,uint256)\":{\"details\":\"Mint a new token with ETH payment\",\"params\":{\"_amount\":\"Number of tokens to mint\",\"_imageURI\":\"URI pointing to the PNG data\",\"_promptText\":\"The AI prompt text used\"}},\"mintWithUSDC(string,string,uint256)\":{\"details\":\"Mint a new token with USDC payment\",\"params\":{\"_amount\":\"Number of tokens to mint\",\"_imageURI\":\"URI pointing to the PNG data\",\"_promptText\":\"The AI prompt text used\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"setBaseURI(string)\":{\"details\":\"Set the base URI for token metadata\",\"params\":{\"newBaseURI\":\"New base URI\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updatePrices(uint256,uint256)\":{\"details\":\"Update minting prices\",\"params\":{\"newPriceETH\":\"New price in ETH\",\"newPriceUSDC\":\"New price in USDC\"}},\"updateUSDCAddress(address)\":{\"details\":\"Update the USDC token contract address\"},\"uri(uint256)\":{\"details\":\"Override URI function to construct token URIs\"},\"withdrawETH()\":{\"details\":\"Withdraw ETH from the contract\"},\"withdrawUSDC()\":{\"details\":\"Withdraw USDC from the contract\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTCollection.sol\":\"MultichainNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x22933f0f4897ff70a991c3baebfbc2574fd052dc4bae7fcafec45b07c1f23dd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13674cffad18cec55f013056496d7d2e3a34bd7bdbe23d1ef0c7588088c73367\",\"dweb:/ipfs/QmcBkrwxNvCApG48Gyby2L6qCNtuhaFncGpbJt3zuukTmu\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/NFTCollection.sol\":{\"keccak256\":\"0xa9047b392fc6ee5316964d9476b5381445f2d44124aaacca05adb11e4dc07d92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab68043c20b93207deb2217ce8a4e83be83a470f1f5c5b552c874a0e0ec660a0\",\"dweb:/ipfs/QmdHA4W7tPTrmKvUSAExSRu3ZnnVCoWqW9HcAe135DpTq2\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":326,"contract":"contracts/NFTCollection.sol:MultichainNFT","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_uint256,t_mapping(t_address,t_uint256))"},{"astId":332,"contract":"contracts/NFTCollection.sol:MultichainNFT","label":"_operatorApprovals","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":334,"contract":"contracts/NFTCollection.sol:MultichainNFT","label":"_uri","offset":0,"slot":"2","type":"t_string_storage"},{"astId":8,"contract":"contracts/NFTCollection.sol:MultichainNFT","label":"_owner","offset":0,"slot":"3","type":"t_address"},{"astId":7627,"contract":"contracts/NFTCollection.sol:MultichainNFT","label":"usdcToken","offset":0,"slot":"4","type":"t_contract(IERC20)1614"},{"astId":7630,"contract":"contracts/NFTCollection.sol:MultichainNFT","label":"mintPriceETH","offset":0,"slot":"5","type":"t_uint256"},{"astId":7637,"contract":"contracts/NFTCollection.sol:MultichainNFT","label":"mintPriceUSDC","offset":0,"slot":"6","type":"t_uint256"},{"astId":7649,"contract":"contracts/NFTCollection.sol:MultichainNFT","label":"tokenMetadata","offset":0,"slot":"7","type":"t_mapping(t_uint256,t_struct(TokenMetadata)7644_storage)"},{"astId":7651,"contract":"contracts/NFTCollection.sol:MultichainNFT","label":"_tokenIdCounter","offset":0,"slot":"8","type":"t_uint256"},{"astId":7653,"contract":"contracts/NFTCollection.sol:MultichainNFT","label":"_baseURI","offset":0,"slot":"9","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(IERC20)1614":{"encoding":"inplace","label":"contract IERC20","numberOfBytes":"20"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_uint256,t_struct(TokenMetadata)7644_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct MultichainNFT.TokenMetadata)","numberOfBytes":"32","value":"t_struct(TokenMetadata)7644_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(TokenMetadata)7644_storage":{"encoding":"inplace","label":"struct MultichainNFT.TokenMetadata","members":[{"astId":7639,"contract":"contracts/NFTCollection.sol:MultichainNFT","label":"imageURI","offset":0,"slot":"0","type":"t_string_storage"},{"astId":7641,"contract":"contracts/NFTCollection.sol:MultichainNFT","label":"promptText","offset":0,"slot":"1","type":"t_string_storage"},{"astId":7643,"contract":"contracts/NFTCollection.sol:MultichainNFT","label":"creator","offset":0,"slot":"2","type":"t_address"}],"numberOfBytes":"96"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}